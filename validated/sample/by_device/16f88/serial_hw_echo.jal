-- Title: Sample using hardware (built-in) USART.
-- Author: Sebastien Lelong, Copyright (c) 2008, all rights reserved.
-- Adapted-by:
-- Compiler: >=2.4g
-- 
-- This file is part of jallib (http://jallib.googlecode.com)
-- Released under the BSD license (http://www.opensource.org/licenses/bsd-license.php)
--
-- Description: this sample shows how to setup a simple serial communication link.
-- It echoes every received char.
--

-- select chip
include 16f88
-- set all IO as digital
enable_digital_io()

-- We'll use internal oscillator. It work @ 8MHz
pragma target clock		8_000_000
pragma target OSC		INTOSC_NOCLKOUT
-- no watchdog, please
pragma target WDT		disabled

-- ok, now setup serial
-- we want to use USART/RS232, not SPI
const usart_hw_serial = true	-- true = RS232, false = SPI
-- setup speed. Standard values are: 57_600, 19_200, 9_600, 2_400, ...
const serial_hw_baudrate = 19_200
-- now we can use serial_hardware module
include serial_hardware
-- initialize the whole with our parameters
serial_hw_init()

-- inform user PIC is ready !
serial_hw_write("!")

-- let's build our loop
var byte char	-- will store received char
forever loop
	if serial_hw_read(char)
	then
		serial_hw_write(char)	-- that's the echo...
	end if
end loop
