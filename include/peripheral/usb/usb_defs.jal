-- Title: USB constant definitions
-- Author: Albert Faber, Copyright (c) 2008..2009, all rights reserved.
-- Adapted-by: -
-- Compiler: >=2.4j
-- 
-- This file is part of jallib (http://jallib.googlecode.com)
-- Released under the BSD license (http://www.opensource.org/licenses/bsd-license.php)
-- 
-- Description: Constants for configurting the USB interface
-- --
-- 
-- Sources: http://www.usb.org for USB specifications
-- 
-- Notes: 
--
-- ------------------------------------------------------
-- ------------------------------------------------------
--
--


const word USB_IN_DELIVERY_BUFFER_LOC = 0x0700
var byte usb_delivery_buffer[ 256 ] at USB_IN_DELIVERY_BUFFER_LOC
var byte usb_delivery_bytes_max_send
var byte usb_delivery_bytes_sent
var byte usb_delivery_buffer_size
var byte usb_delivery_bytes_to_send

if defined(USB_DEBUG) == false  then
	const bit USB_DEBUG = false
end if

if defined(USB_DEBUG_HIGH) == false  then
	const bit USB_DEBUG_HIGH = false
end if

const byte USB_HIGHEST_EP = 3
const bit USB_SELF_POWERED = 1

const word usb_sdp_loc = 0x04F8

var volatile byte usb_sdp[8] at usb_sdp_loc
var volatile byte usb_sdp_request_type at usb_sdp_loc
var volatile byte usb_sdp_request at usb_sdp_loc + 1
var volatile word usb_sdp_value at usb_sdp_loc + 2
var volatile word usb_sdp_index at usb_sdp_loc + 4
var volatile word usb_sdp_length at usb_sdp_loc + 6


-- USB_STATUS
const byte USB_STATUS_IDLE 			= 0
const byte USB_STATUS_SET_ADDRESS 	= 1
	
-- USB STATE
const byte USB_STATE_POWERED	= 0 -- USB device is powered up, ready to start negotiating
const byte USB_STATE_DEFAULT 	= 1	-- USB device is now negotiating
const byte USB_STATE_ADDRESS 	= 2	-- USB device now has an address
const byte USB_STATE_CONFIGURED	= 3 -- USB device is completely configured and ready to rock and roll 
 
-- USB COMMAND MODES
const byte USB_CM_IDLE 							= 0 -- No control transfer taking place
const byte USB_CM_CTRL_WRITE_DATA_STAGE 		= 1 -- Device receiving data during the data stage 
const byte USB_CM_CTRL_WRITE_DATA_STAGE_CLASS	= 2 -- Device receiving data during the data stage destined for the class 
const byte USB_CM_CTRL_READ_DATA_STAGE 			= 3 -- Device sending data during the data stage
const byte USB_CM_CTRL_READ_DATA_STAGE_CLASS 	= 4 -- Device class is sending data during the data stage
const byte USB_CM_CTRL_READ_AWAITING_STATUS 	= 5 -- Device is awaiting reception of status after sending data
const byte USB_CM_CTRL_WRITE_SENDING_STATUS 	= 6 -- Device is sending status after receiving data 


-- USB REQUESTS
const byte USB_REQUEST_GET_STATUS 			= 0x00
const byte USB_REQUEST_CLEAR_FEATURE 		= 0x01
const byte USB_REQUEST_SET_FEATURE			= 0x03
const byte USB_REQUEST_SET_ADDRESS			= 0x05
const byte USB_REQUEST_GET_DESCRIPTOR		= 0x06
const byte USB_REQUEST_SET_DESCRIPTOR		= 0x07
const byte USB_REQUEST_GET_CONFIGURATION 	= 0x08
const byte USB_REQUEST_SET_CONFIGURATION 	= 0x09
const byte USB_REQUEST_GET_INTERFACE 		= 0x0a
const byte USB_REQUEST_SET_INTERFACE 		= 0x0b
const byte USB_REQUEST_REQ_SYNCH_FRAME 		= 0x0c


-- Bits of BDn.stat when UOWN = 0
const byte USB_BDSTATUS_UOWN	= 7	-- 0 if uC owns buffer
const byte USB_BDSTATUS_DTS		= 6	-- 1 data 1 packet, 0 data 0 packet
const byte USB_BDSTATUS_KEN		= 5	-- 1 USB will keep buffer indefinately, 0 USB will hand back buffer
const byte USB_BDSTATUS_INCDIS 	= 4	-- 1 Address increment disabled (for SPP), 0 address increment enabled
const byte USB_BDSTATUS_DTSEN	= 3	-- 1 data toggle sync on, 0 data toggle sync off
const byte USB_BDSTATUS_BSTALL	= 2	-- 1 buffer stall enabled, 0 buffer stall disabled
const byte USB_BDSTATUS_BC9		= 1	-- bit 9 of buffer count
const byte USB_BDSTATUS_BC8		= 0	-- bit 8 of buffer count


const USB_DATA_STAGE_DIR_BIT = 7
const USB_REQUEST_TYPE1_BIT	= 6 -- 00= USB standard request
const USB_REQUEST_TYPE0_BIT = 5 -- 01= Request for a specific class
-- const byte USB_REQUEST_TYPE_MASK = 0b_0110_000
-- 10= Vendor specific
--						
--  Bits 4-0 define recipient bits
-- 0b00000= Device
-- 0b00001= Specific interface
-- 0b00010= Endpoint
-- 0b00011= Other element (whatever that means)

-- Token
const byte USB_PID_OUT = 0b00000001
const byte USB_PID_IN = 0b00001001
const byte USB_PID_SOF = 0b00000101
const byte USB_PID_SETUP = 0b00001101

-- Data
const byte USB_PID_DATA0 = 0b00000011
const byte USB_PID_DATA1 = 0b00001011
const byte USB_PID_DATA2 = 0b00000111
const byte USB_PID_MDATA = 0b00001111

-- Handshake
const byte USB_PID_ACK		= 0b00000010
const byte USB_PID_NAK		= 0b00001010
const byte USB_PID_STALL	= 0b00001110
const byte USB_PID_NYET		= 0b00000110


var byte usb_state = USB_STATE_POWERED
var byte usb_status
var byte usb_control_mode
var byte usb_address


var volatile byte usb_bd0out[4]		at 0x400
var volatile byte usb_bd0out_stat 	at 0x400
var volatile byte usb_bd0out_cnt   	at 0x401
var volatile word usb_bd0out_addr 	at 0x402
var volatile byte usb_bd0out_addrl 	at 0x402
var volatile byte usb_bd0out_addrh 	at 0x403

var volatile byte usb_bd0in[4]		at 0x404
var volatile byte usb_bd0in_stat 	at 0x404
var volatile byte usb_bd0in_cnt   	at 0x405
var volatile word usb_bd0in_addr 	at 0x406
var volatile byte usb_bd0in_addrl 	at 0x406
var volatile byte usb_bd0in_addrh 	at 0x407

var volatile byte usb_bd1out[4]		at 0x408
var volatile byte usb_bd1out_stat 	at 0x408
var volatile byte usb_bd1out_cnt   	at 0x409
var volatile word usb_bd1out_addr 	at 0x40A
var volatile byte usb_bd1out_addrl 	at 0x40A
var volatile byte usb_bd1out_addrh 	at 0x40B

var volatile byte usb_bd1in[4]		at 0x40C
var volatile byte usb_bd1in_stat 	at 0x40C
var volatile byte usb_bd1in_cnt   	at 0x40D
var volatile word usb_bd1in_addr 	at 0x40E
var volatile byte usb_bd1in_addrl 	at 0x40E
var volatile byte usb_bd1in_addrh 	at 0x40F

var volatile byte usb_bd2out[4]		at 0x410
var volatile byte usb_bd2out_stat 	at 0x410
var volatile byte usb_bd2out_cnt   	at 0x411
var volatile word usb_bd2out_addr 	at 0x412
var volatile byte usb_bd2out_addrl 	at 0x412
var volatile byte usb_bd2out_addrh 	at 0x413

var volatile byte usb_bd2in[4]		at 0x414
var volatile byte usb_bd2in_stat 	at 0x414
var volatile byte usb_bd2in_cnt   	at 0x415
var volatile word usb_bd2in_addr 	at 0x416
var volatile byte usb_bd2in_addrl 	at 0x416
var volatile byte usb_bd2in_addrh 	at 0x417

var volatile byte usb_bd3out[4]		at 0x418
var volatile byte usb_bd3out_stat 	at 0x418
var volatile byte usb_bd3out_cnt   	at 0x419
var volatile word usb_bd3out_addr 	at 0x41A
var volatile byte usb_bd3out_addrl 	at 0x41A
var volatile byte usb_bd3out_addrh 	at 0x41B

var volatile byte usb_bd3in[4]		at 0x41C
var volatile byte usb_bd3in_stat 	at 0x41C
var volatile byte usb_bd3in_cnt   	at 0x41D
var volatile word usb_bd3in_addr 	at 0x41E
var volatile byte usb_bd3in_addrl 	at 0x41E
var volatile byte usb_bd3in_addrh 	at 0x41F

var volatile byte usb_bd4out_stat 	at 0x420
var volatile byte usb_bd4out_cnt   	at 0x421
var volatile word usb_bd4out_addr 	at 0x422
var volatile byte usb_bd4out_addrl 	at 0x422
var volatile byte usb_bd4out_addrh 	at 0x423

var volatile byte usb_bd4in_stat 	at 0x424
var volatile byte usb_bd4in_cnt   	at 0x425
var volatile word usb_bd4in_addr 	at 0x426
var volatile byte usb_bd4in_addrl 	at 0x426
var volatile byte usb_bd4in_addrh 	at 0x427

var byte usb_bd5out_stat 	at 0x428
var byte usb_bd5out_cnt   	at 0x429
var word usb_bd5out_addr 	at 0x42A
var byte usb_bd5out_addrl 	at 0x42A
var byte usb_bd5out_addrh 	at 0x42B

var byte usb_bd5in_stat 	at 0x42C
var byte usb_bd5in_cnt   	at 0x42D
var word usb_bd5in_addr 	at 0x42E
var byte usb_bd5in_addrl 	at 0x42E
var byte usb_bd5in_addrh 	at 0x42F


var volatile bit EP1STALL   at  UEP1:0
var volatile bit EP1INEN   	at  UEP1:1
var volatile bit EP1OUTEN   at  UEP1:2
var volatile bit EP1CONDIS	at  UEP1:3
var volatile bit EP1HSHK	at  UEP1:4

var volatile bit EP2STALL   at  UEP2:0
var volatile bit EP2INEN   	at  UEP2:1
var volatile bit EP2OUTEN   at  UEP2:2
var volatile bit EP2CONDIS	at  UEP2:3
var volatile bit EP2HSHK	at  UEP2:4

var volatile bit EP3STALL   at  UEP3:0
var volatile bit EP3INEN   	at  UEP3:1
var volatile bit EP3OUTEN   at  UEP3:2
var volatile bit EP3CONDIS	at  UEP3:3
var volatile bit EP3HSHK	at  UEP3:4



----------------------------------------------------
const USB_DEVICE_DESCRIPTOR_SIZE = 18
const byte USB_DT_DEVICE = 0x01
const byte USB_DT_CONFIGURATION = 0x02
const byte USB_DT_STRING = 0x03
const byte USB_DT_INTERFACE = 0x04
const byte USB_DT_ENDPOINT = 0x05
const byte USB_DT_DEVICE_QUALIFIER = 0x06
const byte USB_DT_OTHER_SPEED_CONFIG = 0x07
const byte USB_DT_INTERFACE_POWER = 0x08
const byte USB_DT_OTG = 0x09
const byte USB_DT_DEBUG = 0x0a
const byte USB_DT_INTERFACE_ASSOC = 0x0b
const byte USB_DT_HID = 0x21
const byte USB_DT_HID_REPORT = 0x22

const byte USB_DT_CS_INTERFACE = 0x24


 
const byte USB_EP_CTRL 		= 0x06 -- Cfg Control pipe for this ep
const byte USB_EP_OUT 		= 0x0C -- Cfg OUT only pipe for this ep
const byte USB_EP_IN       	= 0x0A -- Cfg IN only pipe for this ep
const byte USB_EP_OUT_IN   	= 0x0E -- Cfg both OUT & IN pipes for this ep
const byte USB_HSHK_EN     	= 0x10 -- Enable handshake packet
 
 
-- Device Class Code
const byte USB_CDC_DEVICE = 0x02

-- Communication Interface Class Code
const byte USB_COMM_INTF = 0x02
 
-- Vendor specific interface code
const byte USB_VENDOR_INTF = 0xFF
 
-- Communication Interface Class SubClass Codes
const byte USB_ABSTRACT_CONTROL_MODEL = 0x02

-- Communication Interface Class Control Protocol Codes
const byte USB_V25TER = 0x01    -- Common AT commands ("Hayes(TM)")

const  byte USB_BD_STAT_IDX  = 0x00
const  byte USB_BD_CNT_IDX   = 0x01
const  byte USB_BD_ADDRH_IDX = 0x02
const  byte USB_BD_ADDRL_IDX = 0x03


const byte USB_HID_INTF = 0x03
const byte USB_BOOT_INTF_SUBCLASS = 0x01


-- HID Interface Class Protocol Codes
const byte USB_HID_PROTOCOL_NONE 		= 0x00
const byte USB_HID_PROTOCOL_KEYBOARD 	= 0x01
const byte USB_HID_PROTOCOL_MOUSE 		= 0x02

-- Endpoint Transfer Type
const byte USB_EPT_CTRL       = 0x00            -- Control Transfer
const byte USB_EPT_ISO        = 0x01            -- Isochronous Transfer
const byte USB_EPT_BULK       = 0x02            -- Bulk Transfer
const byte USB_EPT_INT        = 0x03            -- Interrupt Transfer

