-- -----------------------------------------------------------------------------
-- Title: USB PICDEM like board description
-- Author: Albert Faber, Copyright (c) 2008..2009, all rights reserved.
-- Adapted-by: -
-- Compiler: >=2.4i
-- 
-- This file is part of jallib (http://jallib.googlecode.com)
-- Released under the BSD license (http://www.opensource.org/licenses/bsd-license.php)
-- 
-- Description: This file is the setup for my homebrew, PICDEM like 18f4550 board
-- The board consist of a reset button switch to gnd (tided to pin1, with 4k7 pull up)
-- A program button switch to gnd (tided to pin37, with 4k7 pull up) 
-- A 20 MHz external crystal and 15pf caps connected to OSC1/2
-- pin 18 (Vusb) with a 220 nF capacitor to the ground
-- The connection between PC and the 18F4450
-- +5v to power the board 
-- data- wire to pin 23 (D-)
-- data+ wire to pin 24 (D+)
-- ground wire to the Vss of the PIC
--
-- In addition, a MAX232 chip connccted to the USART pins, for serial (mainly to debug) 
-- communication.
-- The board is loaded with the standard microchip bootloader, therefore the examples
-- are compiled with the following JAL compiler flags: -loader18 -no-fuse 
-- 
--
-- 
-- Sources: http://www.microchip.org for PICDEM docs
-- 
-- Notes: not sure about the compiler version
--
-- ------------------------------------------------------
-- ------------------------------------------------------
--
--


-- < Version: 1.1  24-02-2009,  Albert Faber
-- < 1.0 Orignal release
-- < 1.1 Make RS-232 option configurable
-- -----------------------------------------------------------------------------
-- -----------------------------------------------------------------------------


-- compiler dependant device definitions
include 18f4550

-- even though the external crystal is 20 MHz, the configuration is such that
-- the CPU clock is derived from the 96 Mhz PLL clock (div2), therefore set
-- target frequency to 48 MHz
pragma target clock       48_000_000


-- fuses
pragma target PLLDIV		DIVIDE_BY_5__20MHZ_INPUT_
pragma target CPUDIV		_OSC1_OSC2_SRC___1__96MHZ_PLL_SRC___2_
pragma target USBPLL		CLOCK_SRC_FROM_96MHZ_PLL_2
pragma target OSC			HS_PLL
pragma target FCMEN			DISABLED
pragma target IESO			DISABLED
pragma target PWRTE			DISABLED	-- power up timer
pragma target VREGEN		ENABLED		-- USB voltage regulator
pragma target VOLTAGE		V20			-- brown out voltage
pragma target BROWNOUT		DISABLED	-- no brownout detection
pragma target WDTPS			P32768		-- watch dog saler setting
pragma target WDT			DISABLED    -- no watchdog
pragma target CCP2MUX		RC1			-- CCP2 pin
pragma target PBADEN		DIGITAL		-- digital input port<0..4>
pragma target LPT1OSC		DISABLED	-- low power timer 1
pragma target MCLR			EXTERNAL	-- master reset on RE3
pragma target STVR			DISABLED    -- reset on stack over/under flow
pragma target LVP			DISABLED    -- no low-voltage programming
pragma target ENICPORT		DISABLED	-- In circuit debugger
pragma target XINST			ENABLED		-- extended instruction set
pragma target BACKBUG		DISABLED	-- background debugging
pragma target CP_0			DISABLED	-- code block 0 not protected
pragma target CP_1			DISABLED	-- code block 1 not protected
pragma target CP_2			DISABLED	-- code block 2 not protected
pragma target CP_3			DISABLED	-- code block 3 not protected
pragma target CPB			DISABLED	-- bootblock code not write protected
pragma target CPD			DISABLED	-- eeprom code not write protected
pragma target WRT_0			DISABLED	-- table writeblock 0 not protected
pragma target WRT_1			DISABLED	-- table write block 1 not protected
pragma target WRT_2			DISABLED	-- table write block 2 not protected
pragma target WRT_3			DISABLED	-- table write block 3 not protected
pragma target WRTB			DISABLED	-- bootblock not write protected
pragma target WRTD			DISABLED	-- eeprom not write protected
pragma target WRTC			DISABLED	-- config not write protected
pragma target EBTR_0		DISABLED	-- table read block 0 not protected
pragma target EBTR_1		DISABLED	-- table read block 1 not protected
pragma target EBTR_2		DISABLED	-- table read block 2 not protected
pragma target EBTR_3		DISABLED	-- table read block 3 not protected
pragma target EBTRB 		DISABLED	-- boot block not protected


-- whether or not using the serial port
const HAS_SERIAL_DEBUG_PORT = 1

-- include delay functions
include delay

-- disable comperators
cmcon = 0x07

if defined( HAS_SERIAL_DEBUG_PORT ) == true then

	const serial_hw_baudrate = 115_200
	
	include serial_hardware
	include format
	include print
	
	-- intialze serial device
	serial_hw_init()

	procedure serial_print_spc() is 
		serial_hw_write( " " )
	end procedure

	procedure serial_newline() is
		serial_hw_write( 10 )
		-- serial_hw_write( 13 )
	end procedure

end if


