-- Title: Legacy internal CAN controller
-- Author: William Welch Copyright (c) 2009, all rights reserved.
-- Compiler: 2.4
-- 
-- This file is part of jallib (http://jallib.googlecode.com)
-- Released under the ZLIB license (http://www.opensource.org/licenses/zlib-license.html)
--
-- Description: -- The early 18C/F family had an internal CAN controller that was
-- very similar to the MCP2515.  More recent devices have an ECAN controller which 
-- has many enhanced features, but defaults on power-up to a 'legacy' mode.
--
-- N.B. This library has only been tested so far with the 18F2585 device.

procedure can_reset() is
   ECANCON = 0 -- ECAN will operate in legacy CAN mode
   CANCON = 0x80 -- config mode
end procedure

-- set bit-rate and related can bus configuration.
-- see datasheet for details.
-- N.B. The chip must already be in 'configuration mode'.
procedure can_set_config(byte in p1, byte in p2, byte in p3) is
   BRGCON1 = p1
   BRGCON2 = p2
   BRGCON3 = p3
end procedure

-- set RX acceptance mask for buffer RXB0
-- N.B. calling with 0,0,0,0 will pass all messages
procedure can_set_rxb0_mask(byte in sidh, byte in sidl, byte in eidh, byte in eidl) is
   RXM0SIDH = sidh
   RXM0SIDL = sidl
   RXM0EIDH = eidh
   RXM0EIDL = eidl
end procedure

-- set RXB0 acceptance filter #0
procedure can_set_rxb0_filter0(byte in sidh, byte in sidl, byte in eidh, byte in eidl) is
   RXF0SIDH = sidh
   RXF0SIDL = sidl
   RXF0EIDH = eidh
   RXF0EIDL = eidl
end procedure

-- set RXB0 acceptance filter #1
procedure can_set_rxb0_filter1(byte in sidh, byte in sidl, byte in eidh, byte in eidl) is
   RXF1SIDH = sidh
   RXF1SIDL = sidl
   RXF1EIDH = eidh
   RXF1EIDL = eidl
end procedure

-- set RX acceptance mask for buffer RXB1
-- N.B. calling with 0,0,0,0 will pass all messages
procedure can_set_rxb1_mask(byte in sidh, byte in sidl, byte in eidh, byte in eidl) is
   RXM1SIDH = sidh
   RXM1SIDL = sidl
   RXM1EIDH = eidh
   RXM1EIDL = eidl
end procedure

-- set RXB1 acceptance filter #2
procedure can_set_rxb1_filter2(byte in sidh, byte in sidl, byte in eidh, byte in eidl) is
   RXF2SIDH = sidh
   RXF2SIDL = sidl
   RXF2EIDH = eidh
   RXF2EIDL = eidl
end procedure

-- set RXB1 acceptance filter #3
procedure can_set_rxb1_filter3(byte in sidh, byte in sidl, byte in eidh, byte in eidl) is
   RXF3SIDH = sidh
   RXF3SIDL = sidl
   RXF3EIDH = eidh
   RXF3EIDL = eidl
end procedure

-- set RXB1 acceptance filter #4
procedure can_set_rxb1_filter4(byte in sidh, byte in sidl, byte in eidh, byte in eidl) is
   RXF4SIDH = sidh
   RXF4SIDL = sidl
   RXF4EIDH = eidh
   RXF4EIDL = eidl
end procedure

-- set RXB1 acceptance filter #5
procedure can_set_rxb1_filter5(byte in sidh, byte in sidl, byte in eidh, byte in eidl) is
   RXF5SIDH = sidh
   RXF5SIDL = sidl
   RXF5EIDH = eidh
   RXF5EIDL = eidl
end procedure

