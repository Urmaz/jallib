-- Title: i2c_hardware_aliases
-- Author: Albert Faber, Copyright (C) 2009 Albert Faber
-- Adapted-by: 
-- Compiler: >=2.4k
-- 
-- This file is part of jallib (http://jallib.googlecode.com)
-- Released under the ZLIB license (http://www.opensource.org/licenses/zlib-license.html)
--
-- Description: I2C hardware aliases for PIC18f
--
-- TODO:
--

if defined( I2C_HARDWARE_ALIASES_INCLUDED ) == false then

	const I2C_HARDWARE_ALIASES_INCLUDED = 1

	if ( ( target_cpu != PIC_16 )		 
			-- exclude PIC18C452 Family
	--		( target_chip == PIC_18C242  ) |
	--		( target_chip == PIC_18C252  ) |
	--		( target_chip == PIC_18C442  ) |
	--		( target_chip == PIC_18C452  ) |
	
	--		-- exclude PIC18C458 Family
	--		( target_chip == PIC_18C248  ) |
	--		( target_chip == PIC_18C258  ) |
	--		( target_chip == PIC_18C448  ) |
	--		( target_chip == PIC_18C458  ) |
	--
	--		-- exclude PIC18C601/801
	--		( target_chip == PIC_18C601  ) |
	--		( target_chip == PIC_18C801  ) |
	--
			-- exclude PIC18F4431 Family
	--		( target_chip == PIC_18F2231  ) |
	--		( target_chip == PIC_18F2431  ) |
	--		( target_chip == PIC_18F4231  ) |
	--		( target_chip == PIC_18F4431  ) |
			
	--		-- exclude PIC18F8720 Family
	--		( target_chip == PIC_18F6520  ) |
	--		( target_chip == PIC_18F6620  ) |
	--		( target_chip == PIC_18F6720  ) |
	--		( target_chip == PIC_18F8520  ) |
	--		( target_chip == PIC_18F8620  ) |
	--		( target_chip == PIC_18F8720  ) |
	--		
	--		-- exclude PIC18f1220/PIC18f1230
	--		( target_chip == PIC_18F1220 ) |
	--		( target_chip == PIC_18F1230 ) 
												) then
			const bit i2c_old_statemachine = 1
	else
			if defined( SSPCON ) == false then
				var volatile byte SSPCON is SSP1CON
				var volatile bit SSPCON_WCOL is SSP1CON_WCOL
				var volatile bit SSPCON_SSPOV is SSP1CON_SSPOV
				var volatile bit SSPCON_SSPEN is SSP1CON_SSPEN
				var volatile bit SSPCON_CKP is SSP1CON_CKP
				var volatile bit*4 SSPCON_SSPM is SSP1CON_SSPM			
			end if
			
			if defined( SSPCON2 ) == false then
				var volatile byte SSPCON2 is SSP1CON2
				var volatile bit SSPCON2_GCEN is SSP1CON2_GCEN
				var volatile bit SSPCON2_ACKSTAT is SSP1CON2_ACKSTAT
				var volatile bit SSPCON2_ACKDT is SSP1CON2_ACKDT
				var volatile bit SSPCON2_ACKEN is SSP1CON2_ACKEN
				var volatile bit SSPCON2_RCEN is SSP1CON2_RCEN
				var volatile bit SSPCON2_PEN is SSP1CON2_PEN
				var volatile bit SSPCON2_RSEN is SSP1CON2_RSEN
				var volatile bit SSPCON2_SEN is SSP1CON2_SEN
			end if
			
			if defined( SSPADD ) == false then
				var volatile byte SSPADD is SSP1ADD
			end if
			
			if defined( SSPSTAT ) == false then
				var volatile byte SSPSTAT is SSP1STAT
				var volatile bit SSPSTAT_SMP is SSP1STAT_SMP
				var volatile bit SSPSTAT_CKE is SSP1STAT_CKE
				var volatile bit SSPSTAT_D is SSP1STAT_D
				var volatile bit SSPSTAT_NA is SSP1STAT_NA
				var volatile bit SSPSTAT_P is SSP1STAT_P
				var volatile bit SSPSTAT_S is SSP1STAT_S
				var volatile bit SSPSTAT_R is SSP1STAT_R
				var volatile bit SSPSTAT_NW is SSP1STAT_NW
				var volatile bit SSPSTAT_UA is SSP1STAT_UA
				var volatile bit SSPSTAT_BF is SSP1STAT_BF
			end if
			
			if defined( SSPBUF ) == false then
				var volatile byte SSPBUF is SSP1BUF
			end if
	end if
end if

-- -----------------------------------------------------------------------------

