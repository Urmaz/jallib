-- Title: Interrupt on change library
-- Author: Matthew Schinkel - borntechi.com, copyright (c) 2009, all rights reserved.
-- Adapted-by:
-- Compiler: >=2.4o
-- Revision: $Revision$
--
-- This file is part of jallib (http://jallib.googlecode.com)
-- Released under the ZLIB license (http://www.opensource.org/licenses/zlib-license.html)
--
-- Description: This library allows use of interrupt on change pins.
--
-- Sources:
--
-- notes:
-- Currently only port B is implemented.
--

const byte INT_ON_CHANGE_PIN_COUNT = count(int_on_change_pins) / 2

-- setup interrupt on change pins from pin selection array (int_on_change_pins).
if INT_ON_CHANGE_PIN_COUNT > 0 then
   if int_on_change_pins[0] == "B" | int_on_change_pins[0] == "b" then
      var byte int_on_change_pin_state_0
      INTCON_RBIE = TRUE  -- port b interrupt on change enable bit
      INTCON_RBIF = FALSE -- clear interrupt on change pin bit

      if int_on_change_pins[1] == 4 then
         alias int_on_change_0           is pin_b4
         alias int_on_change_0_direction is pin_b4_direction
      elsif int_on_change_pins[1] == 5 then
         alias int_on_change_0           is pin_b5
         alias int_on_change_0_direction is pin_b5_direction
      elsif int_on_change_pins[1] == 6 then
         alias int_on_change_0           is pin_b6
         alias int_on_change_0_direction is pin_b6_direction
      elsif int_on_change_pins[1] == 7 then
         alias int_on_change_0           is pin_b7
         alias int_on_change_0_direction is pin_b7_direction
      end if
   end if
   
   procedure int_on_change_callback_0()
   int_on_change_0_direction = INPUT
end if

if INT_ON_CHANGE_PIN_COUNT >= 2 then
   var byte int_on_change_pin_state_1
   if int_on_change_pins[2] == "B" | int_on_change_pins[2] == "b" then
      INTCON_RBIE = TRUE  -- port b interrupt on change enable bit
      INTCON_RBIF = FALSE -- clear interrupt on change pin bit

      if int_on_change_pins[3] == 4 then
         alias int_on_change_1           is pin_b4
         alias int_on_change_1_direction is pin_b4_direction
      elsif int_on_change_pins[3] == 5 then
         alias int_on_change_1           is pin_b5
         alias int_on_change_1_direction is pin_b5_direction
      elsif int_on_change_pins[3] == 6 then
         alias int_on_change_1           is pin_b6
         alias int_on_change_1_direction is pin_b6_direction
      elsif int_on_change_pins[3] == 7 then
         alias int_on_change_1           is pin_b7
         alias int_on_change_1_direction is pin_b7_direction
      end if
   end if

   procedure int_on_change_callback_1()
   int_on_change_1_direction = INPUT
end if

if INT_ON_CHANGE_PIN_COUNT >= 4 then
   var byte int_on_change_pin_state_2
   if int_on_change_pins[4] == "B" | int_on_change_pins[4] == "b" then
      INTCON_RBIE = TRUE  -- port b interrupt on change enable bit
      INTCON_RBIF = FALSE -- clear interrupt on change pin bit

      if int_on_change_pins[5] == 4 then
         alias int_on_change_2           is pin_b4
         alias int_on_change_2_direction is pin_b4_direction
      elsif int_on_change_pins[5] == 5 then
         alias int_on_change_2           is pin_b5
         alias int_on_change_2_direction is pin_b5_direction
      elsif int_on_change_pins[5] == 6 then
         alias int_on_change_2           is pin_b6
         alias int_on_change_2_direction is pin_b6_direction
      elsif int_on_change_pins[5] == 7 then
         alias int_on_change_2           is pin_b7
         alias int_on_change_2_direction is pin_b7_direction
      end if
   end if

   procedure int_on_change_callback_2()
   int_on_change_2_direction = INPUT
end if

if INT_ON_CHANGE_PIN_COUNT >= 6 then
   var byte int_on_change_pin_state_3
   if int_on_change_pins[6] == "B" | int_on_change_pins[6] == "b" then
      INTCON_RBIE = TRUE  -- port b interrupt on change enable bit
      INTCON_RBIF = FALSE -- clear interrupt on change pin bit

      if int_on_change_pins[7] == 4 then
         alias int_on_change_3           is pin_b4
         alias int_on_change_3_direction is pin_b4_direction
      elsif int_on_change_pins[7] == 5 then
         alias int_on_change_3           is pin_b5
         alias int_on_change_3_direction is pin_b5_direction
      elsif int_on_change_pins[7] == 6 then
         alias int_on_change_3           is pin_b6
         alias int_on_change_3_direction is pin_b6_direction
      elsif int_on_change_pins[7] == 7 then
         alias int_on_change_3           is pin_b7
         alias int_on_change_3_direction is pin_b7_direction
      end if
   end if

   procedure int_on_change_callback_3()
   int_on_change_3_direction = INPUT
end if

--------------------------------------------------------------------------------
-- init interrupt on change pins
--------------------------------------------------------------------------------
procedure int_on_change_init() is
   -- enable global interrupts
   INTCON_GIE  = TRUE        -- Enables all unmasked interrupts
   INTCON_PEIE = TRUE        -- Enables all unmasked peripheral interrupts
end procedure

--------------------------------------------------------------------------------
-- init interrupt on change pins
--------------------------------------------------------------------------------
procedure int_on_change_isr() is
   pragma interrupt

   -- if it was a interrupt on change
   if INTCON_RBIF == TRUE then

      -- check if your pin changed, ignore other pin changes.
      if int_on_change_pin_state_0 != int_on_change_0 then
         int_on_change_pin_state_0 = int_on_change_0
         int_on_change_callback_0()
      end if

      if defined(int_on_change_1) then
         -- check if your pin changed, ignore other pin changes.
       if int_on_change_pin_state_1 != int_on_change_1 then
            int_on_change_pin_state_1 = int_on_change_1
            int_on_change_callback_1()
         end if
      end if

      if defined(int_on_change_2) then
         -- check if your pin changed, ignore other pin changes.
         if int_on_change_pin_state_2 != int_on_change_2 then
            int_on_change_pin_state_2 = int_on_change_2
            int_on_change_callback_2()
         end if
      end if

      if defined(int_on_change_3) then
         -- check if your pin changed, ignore other pin changes.
         if int_on_change_pin_state_3 != int_on_change_3 then
            int_on_change_pin_state_3 = int_on_change_3
            int_on_change_callback_3()
         end if
      end if

      INTCON_RBIF = FALSE -- clear interrupt on change pin bit
   end if
end procedure
