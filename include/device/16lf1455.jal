-- ===================================================
-- Title: JalV2 device include file for PIC16LF1455
--
-- Author: Rob Hamerling, Copyright (c) 2008..2013, all rights reserved.
--
-- Adapted-by:
--
-- Revision: $Revision$
--
-- Compiler: 2.4p
--
-- This file is part of jallib  (http://jallib.googlecode.com)
-- Released under the ZLIB license  (http://www.opensource.org/licenses/zlib-license.html)
--
-- Description:
--    Device include file for pic16lf1455, containing:
--    - Declaration of ports and pins of the chip.
--    - Procedures for shadowing of ports and pins
--      to circumvent the read-modify-write problem.
--    - Symbolic definitions for configuration bits (fuses)
--    - Some device dependent procedures for common
--      operations, like:
--      . enable_digital_io()
--
-- Sources:
--  - x:/mplab889/mplab ide/device/pic16lf1455.dev
--
-- Notes:
--  - Created with Dev2Jal Rexx script version 0.1.44
--  - File creation date/time: 20 Mar 2013 14:29
--
-- ===================================================
--
const word DEVICE_ID   = 0x3025
const byte PICTYPE[]   = "16LF1455"
const byte DATASHEET[] = "41639A"
const byte PGMSPEC[]   = "41620C"
--
-- Vdd Range: 1.800-3.600 Nominal: 3.300
-- Vpp Range: 8.000-9.000 Default: 9.000
--
-- ---------------------------------------------------
--
include chipdef_jallib                  -- common constants
--
pragma  target  cpu   PIC_14H            -- (banks=32)
pragma  target  chip  16lf1455
pragma  target  bank  0x0080
pragma  target  page  0x0800
pragma  stack   16
pragma  code    8192
pragma  ID      0x8000,4
pragma  data    0x20-0x7E,0xA0-0xEF,0x120-0x16F,0x1A0-0x1EF,0x220-0x26F
pragma  data    0x2A0-0x2EF,0x320-0x36F,0x3A0-0x3EF,0x420-0x46F,0x4A0-0x4EF
pragma  data    0x520-0x56F,0x5A0-0x5EF,0x620-0x64F
pragma  shared  0x7F-0x7F
--
var volatile byte _pic_accum shared at 0x7F      -- (compiler)
--
const word  _FUSES_CT             = 2
const word  _FUSE_BASE[_FUSES_CT] = { 0x8007,
                                      0x8008 }
const word  _FUSES[_FUSES_CT]     = { 0b_0011_1111_1111_1111,         -- CONFIG1
                                      0b_0011_1111_1111_1111 }        -- CONFIG2
--
-- ------------------------------------------------
var volatile byte   INDF0                     shared at 0x0
var volatile byte   _ind                      shared at 0x0
-- ------------------------------------------------
var volatile byte   INDF1                     shared at 0x1
-- ------------------------------------------------
var volatile byte   PCL                       shared at 0x2
var volatile byte   _pcl                      shared at 0x2
-- ------------------------------------------------
var volatile byte   STATUS                    shared at 0x3
var volatile bit    STATUS_NTO                shared at STATUS : 4
var volatile bit    STATUS_NPD                shared at STATUS : 3
var volatile bit    STATUS_Z                  shared at STATUS : 2
var volatile bit    STATUS_DC                 shared at STATUS : 1
var volatile bit    STATUS_C                  shared at STATUS : 0
var volatile byte   _status                   shared at 0x3
const        byte   _not_to                          =  4
const        byte   _not_pd                          =  3
const        byte   _z                               =  2
const        byte   _dc                              =  1
const        byte   _c                               =  0
-- ------------------------------------------------
var volatile word   FSR0                      shared at 0x4
-- ------------------------------------------------
var volatile byte   FSR0L                     shared at 0x4
var volatile byte   _fsr0l                    shared at 0x4
-- ------------------------------------------------
var volatile byte   FSR0H                     shared at 0x5
var volatile byte   _fsr0h                    shared at 0x5
-- ------------------------------------------------
var volatile word   FSR1                      shared at 0x6
-- ------------------------------------------------
var volatile byte   FSR1L                     shared at 0x6
var volatile byte   _fsr1l                    shared at 0x6
-- ------------------------------------------------
var volatile byte   FSR1H                     shared at 0x7
var volatile byte   _fsr1h                    shared at 0x7
-- ------------------------------------------------
var volatile byte   BSR                       shared at 0x8
var volatile bit*5  BSR_BSR                   shared at BSR : 0
var volatile byte   _bsr                      shared at 0x8
-- ------------------------------------------------
var volatile byte   WREG                      shared at 0x9
-- ------------------------------------------------
var volatile byte   PCLATH                    shared at 0xA
var volatile bit*7  PCLATH_PCLATH             shared at PCLATH : 0
var volatile byte   _pclath                   shared at 0xA
-- ------------------------------------------------
var volatile byte   INTCON                    shared at 0xB
var volatile bit    INTCON_GIE                shared at INTCON : 7
var volatile bit    INTCON_PEIE               shared at INTCON : 6
var volatile bit    INTCON_TMR0IE             shared at INTCON : 5
var volatile bit    INTCON_INTE               shared at INTCON : 4
var volatile bit    INTCON_IOCIE              shared at INTCON : 3
var volatile bit    INTCON_TMR0IF             shared at INTCON : 2
var volatile bit    INTCON_INTF               shared at INTCON : 1
var volatile bit    INTCON_IOCIF              shared at INTCON : 0
-- ------------------------------------------------
var volatile byte   PORTA                            at 0xC
var volatile bit    PORTA_RA5                        at PORTA : 5
var volatile bit    PORTA_RA4                        at PORTA : 4
var volatile bit    PORTA_RA3                        at PORTA : 3
var volatile bit    PORTA_RA1                        at PORTA : 1
var volatile bit    PORTA_RA0                        at PORTA : 0
-- ------------------------------------------------
var volatile byte   PORTC                            at 0xE
var volatile bit    PORTC_RC5                        at PORTC : 5
var volatile bit    PORTC_RC4                        at PORTC : 4
var volatile bit    PORTC_RC3                        at PORTC : 3
var volatile bit    PORTC_RC2                        at PORTC : 2
var volatile bit    PORTC_RC1                        at PORTC : 1
var volatile bit    PORTC_RC0                        at PORTC : 0
-- ------------------------------------------------
var volatile byte   PIR1                             at 0x11
var volatile bit    PIR1_TMR1GIF                     at PIR1 : 7
var volatile bit    PIR1_ADIF                        at PIR1 : 6
var volatile bit    PIR1_RCIF                        at PIR1 : 5
var volatile bit    PIR1_TXIF                        at PIR1 : 4
var volatile bit    PIR1_SSP1IF                      at PIR1 : 3
alias               PIR1_SSPIF                       is PIR1_SSP1IF
var volatile bit    PIR1_TMR2IF                      at PIR1 : 1
var volatile bit    PIR1_TMR1IF                      at PIR1 : 0
-- ------------------------------------------------
var volatile byte   PIR2                             at 0x12
var volatile bit    PIR2_OSFIF                       at PIR2 : 7
var volatile bit    PIR2_C2IF                        at PIR2 : 6
var volatile bit    PIR2_C1IF                        at PIR2 : 5
var volatile bit    PIR2_BCL1IF                      at PIR2 : 3
var volatile bit    PIR2_USBIF                       at PIR2 : 2
var volatile bit    PIR2_ACTIF                       at PIR2 : 1
-- ------------------------------------------------
var volatile byte   TMR0                             at 0x15
-- ------------------------------------------------
var volatile word   TMR1                             at 0x16
-- ------------------------------------------------
var volatile byte   TMR1L                            at 0x16
-- ------------------------------------------------
var volatile byte   TMR1H                            at 0x17
-- ------------------------------------------------
var volatile byte   T1CON                            at 0x18
var volatile bit*2  T1CON_TMR1CS                     at T1CON : 6
var volatile bit*2  T1CON_T1CKPS                     at T1CON : 4
var volatile bit    T1CON_T1OSCEN                    at T1CON : 3
var volatile bit    T1CON_NT1SYNC                    at T1CON : 2
var volatile bit    T1CON_TMR1ON                     at T1CON : 0
-- ------------------------------------------------
var volatile byte   T1GCON                           at 0x19
var volatile bit    T1GCON_TMR1GE                    at T1GCON : 7
var volatile bit    T1GCON_T1GPOL                    at T1GCON : 6
var volatile bit    T1GCON_T1GTM                     at T1GCON : 5
var volatile bit    T1GCON_T1GSPM                    at T1GCON : 4
var volatile bit    T1GCON_T1GGO                     at T1GCON : 3
var volatile bit    T1GCON_NDONE                     at T1GCON : 3
var volatile bit    T1GCON_T1GVAL                    at T1GCON : 2
var volatile bit*2  T1GCON_T1GSS                     at T1GCON : 0
-- ------------------------------------------------
var volatile byte   TMR2                             at 0x1A
-- ------------------------------------------------
var volatile byte   PR2                              at 0x1B
-- ------------------------------------------------
var volatile byte   T2CON                            at 0x1C
var volatile bit*4  T2CON_T2OUTPS                    at T2CON : 3
var volatile bit    T2CON_TMR2ON                     at T2CON : 2
var volatile bit*2  T2CON_T2CKPS                     at T2CON : 0
-- ------------------------------------------------
var volatile byte   TRISA                            at 0x8C
alias               PORTA_direction                  is TRISA
--
procedure PORTA_low_direction'put(byte in x) is
   pragma inline
   TRISA = (TRISA & 0xF0) | (x & 0x0F)
end procedure
function PORTA_low_direction'get() return byte is
   pragma inline
   return (TRISA & 0x0F)
end function
--
procedure PORTA_high_direction'put(byte in x) is
   pragma inline
   TRISA = (TRISA & 0x0F) | (x << 4)
end procedure
function PORTA_high_direction'get() return byte is
   pragma inline
   return (TRISA >> 4)
end function
--
var volatile bit    TRISA_TRISA5                     at TRISA : 5
alias               pin_A5_direction                 is TRISA_TRISA5
alias               pin_SOSCI_direction              is pin_A5_direction
alias               pin_T1CKI_direction              is pin_A5_direction
alias               pin_PWM2_RA5_direction           is pin_A5_direction
alias               pin_CLKIN_direction              is pin_A5_direction
alias               pin_OSC1_direction               is pin_A5_direction
--
var volatile bit    TRISA_TRISA4                     at TRISA : 4
alias               pin_A4_direction                 is TRISA_TRISA4
alias               pin_AN3_direction                is pin_A4_direction
alias               pin_SOSCO_direction              is pin_A4_direction
alias               pin_T1G_RA4_direction            is pin_A4_direction
alias               pin_SDO_RA4_direction            is pin_A4_direction
alias               pin_CLKOUT_direction             is pin_A4_direction
alias               pin_OSC2_direction               is pin_A4_direction
alias               pin_CLKR_RA4_direction           is pin_A4_direction
--
-- ------------------------------------------------
var volatile byte   TRISC                            at 0x8E
alias               PORTC_direction                  is TRISC
--
procedure PORTC_low_direction'put(byte in x) is
   pragma inline
   TRISC = (TRISC & 0xF0) | (x & 0x0F)
end procedure
function PORTC_low_direction'get() return byte is
   pragma inline
   return (TRISC & 0x0F)
end function
--
procedure PORTC_high_direction'put(byte in x) is
   pragma inline
   TRISC = (TRISC & 0x0F) | (x << 4)
end procedure
function PORTC_high_direction'get() return byte is
   pragma inline
   return (TRISC >> 4)
end function
--
var volatile bit    TRISC_TRISC5                     at TRISC : 5
alias               pin_C5_direction                 is TRISC_TRISC5
alias               pin_T0CKI_direction              is pin_C5_direction
alias               pin_CWG1A_direction              is pin_C5_direction
alias               pin_RX_direction                 is pin_C5_direction
alias               pin_DT_direction                 is pin_C5_direction
alias               pin_PWM1_direction               is pin_C5_direction
--
var volatile bit    TRISC_TRISC4                     at TRISC : 4
alias               pin_C4_direction                 is TRISC_TRISC4
alias               pin_C1OUT_direction              is pin_C4_direction
alias               pin_C2OUT_direction              is pin_C4_direction
alias               pin_CWG1B_direction              is pin_C4_direction
alias               pin_TX_direction                 is pin_C4_direction
alias               pin_CK_direction                 is pin_C4_direction
--
var volatile bit    TRISC_TRISC3                     at TRISC : 3
alias               pin_C3_direction                 is TRISC_TRISC3
alias               pin_AN7_direction                is pin_C3_direction
alias               pin_DACOUT2_direction            is pin_C3_direction
alias               pin_C1IN3_NEG_direction          is pin_C3_direction
alias               pin_C2IN3_NEG_direction          is pin_C3_direction
alias               pin_PWM2_RC3_direction           is pin_C3_direction
alias               pin_SS_RC3_direction             is pin_C3_direction
alias               pin_CLKR_RC3_direction           is pin_C3_direction
--
var volatile bit    TRISC_TRISC2                     at TRISC : 2
alias               pin_C2_direction                 is TRISC_TRISC2
alias               pin_AN6_direction                is pin_C2_direction
alias               pin_DACOUT1_direction            is pin_C2_direction
alias               pin_C1IN2_NEG_direction          is pin_C2_direction
alias               pin_C2IN2_NEG_direction          is pin_C2_direction
alias               pin_SDO_RC2_direction            is pin_C2_direction
--
var volatile bit    TRISC_TRISC1                     at TRISC : 1
alias               pin_C1_direction                 is TRISC_TRISC1
alias               pin_AN5_direction                is pin_C1_direction
alias               pin_C1IN1_NEG_direction          is pin_C1_direction
alias               pin_C2IN1_NEG_direction          is pin_C1_direction
alias               pin_CWGFLT_direction             is pin_C1_direction
alias               pin_SDA_direction                is pin_C1_direction
alias               pin_SDI_direction                is pin_C1_direction
alias               pin_ICSPDAT_RC1_direction        is pin_C1_direction
--
var volatile bit    TRISC_TRISC0                     at TRISC : 0
alias               pin_C0_direction                 is TRISC_TRISC0
alias               pin_AN4_direction                is pin_C0_direction
alias               pin_VREF_POS_direction           is pin_C0_direction
alias               pin_C1IN1_POS_direction          is pin_C0_direction
alias               pin_C2IN1_POS_direction          is pin_C0_direction
alias               pin_SCL_direction                is pin_C0_direction
alias               pin_SCK_direction                is pin_C0_direction
alias               pin_ICSPDAT_RC0_direction        is pin_C0_direction
--
-- ------------------------------------------------
var volatile byte   PIE1                             at 0x91
var volatile bit    PIE1_TMR1GIE                     at PIE1 : 7
var volatile bit    PIE1_ADIE                        at PIE1 : 6
var volatile bit    PIE1_RCIE                        at PIE1 : 5
var volatile bit    PIE1_TXIE                        at PIE1 : 4
var volatile bit    PIE1_SSP1IE                      at PIE1 : 3
alias               PIE1_SSPIE                       is PIE1_SSP1IE
var volatile bit    PIE1_TMR2IE                      at PIE1 : 1
var volatile bit    PIE1_TMR1IE                      at PIE1 : 0
-- ------------------------------------------------
var volatile byte   PIE2                             at 0x92
var volatile bit    PIE2_OSFIE                       at PIE2 : 7
var volatile bit    PIE2_C2IE                        at PIE2 : 6
var volatile bit    PIE2_C1IE                        at PIE2 : 5
var volatile bit    PIE2_BCL1IE                      at PIE2 : 3
var volatile bit    PIE2_USBIE                       at PIE2 : 2
var volatile bit    PIE2_ACTIE                       at PIE2 : 1
-- ------------------------------------------------
var volatile byte   OPTION_REG                       at 0x95
var volatile bit    OPTION_REG_NWPUEN                at OPTION_REG : 7
var volatile bit    OPTION_REG_INTEDG                at OPTION_REG : 6
var volatile bit    OPTION_REG_TMR0CS                at OPTION_REG : 5
alias               T0CON_T0CS                       is OPTION_REG_TMR0CS
var volatile bit    OPTION_REG_TMR0SE                at OPTION_REG : 4
alias               T0CON_T0SE                       is OPTION_REG_TMR0SE
var volatile bit    OPTION_REG_PSA                   at OPTION_REG : 3
alias               T0CON_PSA                        is OPTION_REG_PSA
var volatile bit*3  OPTION_REG_PS                    at OPTION_REG : 0
alias               T0CON_T0PS                       is OPTION_REG_PS
-- ------------------------------------------------
var volatile byte   PCON                             at 0x96
var volatile bit    PCON_STKOVF                      at PCON : 7
var volatile bit    PCON_STKUNF                      at PCON : 6
var volatile bit    PCON_NRWDT                       at PCON : 4
var volatile bit    PCON_NRMCLR                      at PCON : 3
var volatile bit    PCON_NRI                         at PCON : 2
var volatile bit    PCON_NPOR                        at PCON : 1
var volatile bit    PCON_NBOR                        at PCON : 0
-- ------------------------------------------------
var volatile byte   WDTCON                           at 0x97
var volatile bit*5  WDTCON_WDTPS                     at WDTCON : 1
var volatile bit    WDTCON_SWDTEN                    at WDTCON : 0
-- ------------------------------------------------
var volatile byte   OSCTUNE                          at 0x98
var volatile bit*7  OSCTUNE_TUN                      at OSCTUNE : 0
-- ------------------------------------------------
var volatile byte   OSCCON                           at 0x99
var volatile bit    OSCCON_SPLLEN                    at OSCCON : 7
var volatile bit    OSCCON_SPLLMULT                  at OSCCON : 6
var volatile bit*4  OSCCON_IRCF                      at OSCCON : 2
var volatile bit*2  OSCCON_SCS                       at OSCCON : 0
-- ------------------------------------------------
var volatile byte   OSCSTAT                          at 0x9A
var volatile bit    OSCSTAT_SOSCR                    at OSCSTAT : 7
var volatile bit    OSCSTAT_PLLRDY                   at OSCSTAT : 6
var volatile bit    OSCSTAT_OSTS                     at OSCSTAT : 5
var volatile bit    OSCSTAT_HFIOFR                   at OSCSTAT : 4
var volatile bit    OSCSTAT_LFIOFR                   at OSCSTAT : 1
var volatile bit    OSCSTAT_HFIOFS                   at OSCSTAT : 0
-- ------------------------------------------------
var volatile word   ADRES                            at 0x9B
-- ------------------------------------------------
var volatile byte   ADRESL                           at 0x9B
-- ------------------------------------------------
var volatile byte   ADRESH                           at 0x9C
-- ------------------------------------------------
var volatile byte   ADCON0                           at 0x9D
var volatile bit*5  ADCON0_CHS                       at ADCON0 : 2
var volatile bit    ADCON0_GO                        at ADCON0 : 1
var volatile bit    ADCON0_NDONE                     at ADCON0 : 1
var volatile bit    ADCON0_ADON                      at ADCON0 : 0
-- ------------------------------------------------
var volatile byte   ADCON1                           at 0x9E
var volatile bit    ADCON1_ADFM                      at ADCON1 : 7
var volatile bit*3  ADCON1_ADCS                      at ADCON1 : 4
var volatile bit    ADCON1_ADPREF1                   at ADCON1 : 1
var volatile bit    ADCON1_ADPREF0                   at ADCON1 : 0
-- ------------------------------------------------
var volatile byte   ADCON2                           at 0x9F
var volatile bit*3  ADCON2_TRIGSEL                   at ADCON2 : 4
-- ------------------------------------------------
var volatile byte   LATA                             at 0x10C
--
procedure PORTA'put(byte in x at LATA) is
   pragma inline
end procedure
--
procedure PORTA_low'put(byte in x) is
   pragma inline
   LATA = (LATA & 0xF0) | (x & 0x0F)
end procedure
function PORTA_low'get() return byte is
   pragma inline
   return (PORTA & 0x0F)
end function
--
procedure PORTA_high'put(byte in x) is
   pragma inline
   LATA = (LATA & 0x0F) | (x << 4)
end procedure
function PORTA_high'get() return byte is
   pragma inline
   return (PORTA >> 4)
end function
--
var volatile bit    LATA_LATA5                       at LATA : 5
var volatile bit    pin_A5                           at PORTA : 5
alias               pin_SOSCI                        is pin_A5
alias               pin_T1CKI                        is pin_A5
alias               pin_PWM2_RA5                     is pin_A5
alias               pin_CLKIN                        is pin_A5
alias               pin_OSC1                         is pin_A5
--
procedure pin_A5'put(bit in x at LATA : 5) is
   pragma inline
end procedure
--
var volatile bit    LATA_LATA4                       at LATA : 4
var volatile bit    pin_A4                           at PORTA : 4
alias               pin_AN3                          is pin_A4
alias               pin_SOSCO                        is pin_A4
alias               pin_T1G_RA4                      is pin_A4
alias               pin_SDO_RA4                      is pin_A4
alias               pin_CLKOUT                       is pin_A4
alias               pin_OSC2                         is pin_A4
alias               pin_CLKR_RA4                     is pin_A4
--
procedure pin_A4'put(bit in x at LATA : 4) is
   pragma inline
end procedure
--
var volatile bit    pin_A3                           at PORTA : 3
alias               pin_T1G_RA3                      is pin_A3
alias               pin_SS_RA3                       is pin_A3
alias               pin_MCLR                         is pin_A3
alias               pin_VPP                          is pin_A3
--
var volatile bit    pin_A1                           at PORTA : 1
alias               pin_D_NEG                        is pin_A1
alias               pin_ICSPCLK                      is pin_A1
--
var volatile bit    pin_A0                           at PORTA : 0
alias               pin_D_POS                        is pin_A0
alias               pin_ICSPDAT_RA0                  is pin_A0
--
-- ------------------------------------------------
var volatile byte   LATC                             at 0x10E
--
procedure PORTC'put(byte in x at LATC) is
   pragma inline
end procedure
--
procedure PORTC_low'put(byte in x) is
   pragma inline
   LATC = (LATC & 0xF0) | (x & 0x0F)
end procedure
function PORTC_low'get() return byte is
   pragma inline
   return (PORTC & 0x0F)
end function
--
procedure PORTC_high'put(byte in x) is
   pragma inline
   LATC = (LATC & 0x0F) | (x << 4)
end procedure
function PORTC_high'get() return byte is
   pragma inline
   return (PORTC >> 4)
end function
--
var volatile bit    LATC_LATC5                       at LATC : 5
var volatile bit    pin_C5                           at PORTC : 5
alias               pin_T0CKI                        is pin_C5
alias               pin_CWG1A                        is pin_C5
alias               pin_RX                           is pin_C5
alias               pin_DT                           is pin_C5
alias               pin_PWM1                         is pin_C5
--
procedure pin_C5'put(bit in x at LATC : 5) is
   pragma inline
end procedure
--
var volatile bit    LATC_LATC4                       at LATC : 4
var volatile bit    pin_C4                           at PORTC : 4
alias               pin_C1OUT                        is pin_C4
alias               pin_C2OUT                        is pin_C4
alias               pin_CWG1B                        is pin_C4
alias               pin_TX                           is pin_C4
alias               pin_CK                           is pin_C4
--
procedure pin_C4'put(bit in x at LATC : 4) is
   pragma inline
end procedure
--
var volatile bit    LATC_LATC3                       at LATC : 3
var volatile bit    pin_C3                           at PORTC : 3
alias               pin_AN7                          is pin_C3
alias               pin_DACOUT2                      is pin_C3
alias               pin_C1IN3_NEG                    is pin_C3
alias               pin_C2IN3_NEG                    is pin_C3
alias               pin_PWM2_RC3                     is pin_C3
alias               pin_SS_RC3                       is pin_C3
alias               pin_CLKR_RC3                     is pin_C3
--
procedure pin_C3'put(bit in x at LATC : 3) is
   pragma inline
end procedure
--
var volatile bit    LATC_LATC2                       at LATC : 2
var volatile bit    pin_C2                           at PORTC : 2
alias               pin_AN6                          is pin_C2
alias               pin_DACOUT1                      is pin_C2
alias               pin_C1IN2_NEG                    is pin_C2
alias               pin_C2IN2_NEG                    is pin_C2
alias               pin_SDO_RC2                      is pin_C2
--
procedure pin_C2'put(bit in x at LATC : 2) is
   pragma inline
end procedure
--
var volatile bit    LATC_LATC1                       at LATC : 1
var volatile bit    pin_C1                           at PORTC : 1
alias               pin_AN5                          is pin_C1
alias               pin_C1IN1_NEG                    is pin_C1
alias               pin_C2IN1_NEG                    is pin_C1
alias               pin_CWGFLT                       is pin_C1
alias               pin_SDA                          is pin_C1
alias               pin_SDI                          is pin_C1
alias               pin_ICSPDAT_RC1                  is pin_C1
--
procedure pin_C1'put(bit in x at LATC : 1) is
   pragma inline
end procedure
--
var volatile bit    LATC_LATC0                       at LATC : 0
var volatile bit    pin_C0                           at PORTC : 0
alias               pin_AN4                          is pin_C0
alias               pin_VREF_POS                     is pin_C0
alias               pin_C1IN1_POS                    is pin_C0
alias               pin_C2IN1_POS                    is pin_C0
alias               pin_SCL                          is pin_C0
alias               pin_SCK                          is pin_C0
alias               pin_ICSPDAT_RC0                  is pin_C0
--
procedure pin_C0'put(bit in x at LATC : 0) is
   pragma inline
end procedure
--
-- ------------------------------------------------
var volatile byte   CM1CON0                          at 0x111
var volatile bit    CM1CON0_C1ON                     at CM1CON0 : 7
var volatile bit    CM1CON0_C1OUT                    at CM1CON0 : 6
var volatile bit    CM1CON0_C1OE                     at CM1CON0 : 5
var volatile bit    CM1CON0_C1POL                    at CM1CON0 : 4
var volatile bit    CM1CON0_C1SP                     at CM1CON0 : 2
var volatile bit    CM1CON0_C1HYS                    at CM1CON0 : 1
var volatile bit    CM1CON0_C1SYNC                   at CM1CON0 : 0
-- ------------------------------------------------
var volatile byte   CM1CON1                          at 0x112
var volatile bit    CM1CON1_C1INTP                   at CM1CON1 : 7
var volatile bit    CM1CON1_C1INTN                   at CM1CON1 : 6
var volatile bit    CM1CON1_C1PCH1                   at CM1CON1 : 5
var volatile bit    CM1CON1_C1PCH0                   at CM1CON1 : 4
var volatile bit    CM1CON1_C1NCH2                   at CM1CON1 : 2
var volatile bit    CM1CON1_C1NCH1                   at CM1CON1 : 1
var volatile bit    CM1CON1_C1NCH0                   at CM1CON1 : 0
-- ------------------------------------------------
var volatile byte   CM2CON0                          at 0x113
var volatile bit    CM2CON0_C2ON                     at CM2CON0 : 7
var volatile bit    CM2CON0_C2OUT                    at CM2CON0 : 6
var volatile bit    CM2CON0_C2OE                     at CM2CON0 : 5
var volatile bit    CM2CON0_C2POL                    at CM2CON0 : 4
var volatile bit    CM2CON0_C2SP                     at CM2CON0 : 2
var volatile bit    CM2CON0_C2HYS                    at CM2CON0 : 1
var volatile bit    CM2CON0_C2SYNC                   at CM2CON0 : 0
-- ------------------------------------------------
var volatile byte   CM2CON1                          at 0x114
var volatile bit    CM2CON1_C2INTP                   at CM2CON1 : 7
var volatile bit    CM2CON1_C2INTN                   at CM2CON1 : 6
var volatile bit    CM2CON1_C2PCH1                   at CM2CON1 : 5
var volatile bit    CM2CON1_C2PCH0                   at CM2CON1 : 4
var volatile bit    CM2CON1_C2NCH2                   at CM2CON1 : 2
var volatile bit    CM2CON1_C2NCH1                   at CM2CON1 : 1
var volatile bit    CM2CON1_C2NCH0                   at CM2CON1 : 0
-- ------------------------------------------------
var volatile byte   CMOUT                            at 0x115
var volatile bit    CMOUT_MC2OUT                     at CMOUT : 1
var volatile bit    CMOUT_MC1OUT                     at CMOUT : 0
-- ------------------------------------------------
var volatile byte   BORCON                           at 0x116
var volatile bit    BORCON_SBOREN                    at BORCON : 7
var volatile bit    BORCON_BORFS                     at BORCON : 6
var volatile bit    BORCON_BORRDY                    at BORCON : 0
-- ------------------------------------------------
var volatile byte   FVRCON                           at 0x117
var volatile bit    FVRCON_FVREN                     at FVRCON : 7
var volatile bit    FVRCON_FVRRDY                    at FVRCON : 6
var volatile bit*2  FVRCON_CDAFVR                    at FVRCON : 2
var volatile bit*2  FVRCON_ADFVR                     at FVRCON : 0
-- ------------------------------------------------
var volatile byte   DACCON0                          at 0x118
var volatile bit    DACCON0_DACEN                    at DACCON0 : 7
var volatile bit    DACCON0_DACOE1                   at DACCON0 : 5
var volatile bit    DACCON0_DACOE2                   at DACCON0 : 4
var volatile bit*2  DACCON0_D1PSS                    at DACCON0 : 2
-- ------------------------------------------------
var volatile byte   DACCON1                          at 0x119
var volatile bit*5  DACCON1_DACR                     at DACCON1 : 0
-- ------------------------------------------------
var volatile byte   APFCON                           at 0x11D
var volatile bit    APFCON_CLKRSEL                   at APFCON : 7
var volatile bit    APFCON_SDOSEL                    at APFCON : 6
var volatile bit    APFCON_SSSEL                     at APFCON : 5
var volatile bit    APFCON_T1GSEL                    at APFCON : 3
var volatile bit    APFCON_P2SEL                     at APFCON : 2
-- ------------------------------------------------
var volatile byte   ANSELA                           at 0x18C
var volatile bit    ANSELA_ANSA4                     at ANSELA : 4
alias               JANSEL_ANS3                      is ANSELA_ANSA4
-- ------------------------------------------------
var volatile byte   ANSELC                           at 0x18E
var volatile bit    ANSELC_ANSC3                     at ANSELC : 3
alias               JANSEL_ANS7                      is ANSELC_ANSC3
var volatile bit    ANSELC_ANSC2                     at ANSELC : 2
alias               JANSEL_ANS6                      is ANSELC_ANSC2
var volatile bit    ANSELC_ANSC1                     at ANSELC : 1
alias               JANSEL_ANS5                      is ANSELC_ANSC1
var volatile bit    ANSELC_ANSC0                     at ANSELC : 0
alias               JANSEL_ANS4                      is ANSELC_ANSC0
-- ------------------------------------------------
var volatile word   PMADR                            at 0x191
-- ------------------------------------------------
var volatile byte   PMADRL                           at 0x191
-- ------------------------------------------------
var volatile byte   PMADRH                           at 0x192
var volatile bit*7  PMADRH_PMADRH                    at PMADRH : 0
-- ------------------------------------------------
var volatile word   PMDAT                            at 0x193
-- ------------------------------------------------
var volatile byte   PMDATL                           at 0x193
-- ------------------------------------------------
var volatile byte   PMDATH                           at 0x194
var volatile bit*6  PMDATH_PMDATH                    at PMDATH : 0
-- ------------------------------------------------
var volatile byte   PMCON1                           at 0x195
var volatile bit    PMCON1_CFGS                      at PMCON1 : 6
var volatile bit    PMCON1_LWLO                      at PMCON1 : 5
var volatile bit    PMCON1_FREE                      at PMCON1 : 4
var volatile bit    PMCON1_WRERR                     at PMCON1 : 3
var volatile bit    PMCON1_WREN                      at PMCON1 : 2
var volatile bit    PMCON1_WR                        at PMCON1 : 1
var volatile bit    PMCON1_RD                        at PMCON1 : 0
-- ------------------------------------------------
var volatile byte   PMCON2                           at 0x196
-- ------------------------------------------------
var volatile byte   RCREG                            at 0x199
-- ------------------------------------------------
var volatile byte   TXREG                            at 0x19A
-- ------------------------------------------------
var volatile byte   SPBRGL                           at 0x19B
-- ------------------------------------------------
var volatile byte   SPBRGH                           at 0x19C
-- ------------------------------------------------
var volatile byte   RCSTA                            at 0x19D
var volatile bit    RCSTA_SPEN                       at RCSTA : 7
var volatile bit    RCSTA_RX9                        at RCSTA : 6
var volatile bit    RCSTA_SREN                       at RCSTA : 5
var volatile bit    RCSTA_CREN                       at RCSTA : 4
var volatile bit    RCSTA_ADDEN                      at RCSTA : 3
var volatile bit    RCSTA_FERR                       at RCSTA : 2
var volatile bit    RCSTA_OERR                       at RCSTA : 1
var volatile bit    RCSTA_RX9D                       at RCSTA : 0
-- ------------------------------------------------
var volatile byte   TXSTA                            at 0x19E
var volatile bit    TXSTA_CSRC                       at TXSTA : 7
var volatile bit    TXSTA_TX9                        at TXSTA : 6
var volatile bit    TXSTA_TXEN                       at TXSTA : 5
var volatile bit    TXSTA_SYNC                       at TXSTA : 4
var volatile bit    TXSTA_SENDB                      at TXSTA : 3
var volatile bit    TXSTA_BRGH                       at TXSTA : 2
var volatile bit    TXSTA_TRMT                       at TXSTA : 1
var volatile bit    TXSTA_TX9D                       at TXSTA : 0
-- ------------------------------------------------
var volatile byte   BAUDCON                          at 0x19F
var volatile bit    BAUDCON_ABDOVF                   at BAUDCON : 7
var volatile bit    BAUDCON_RCIDL                    at BAUDCON : 6
var volatile bit    BAUDCON_SCKP                     at BAUDCON : 4
var volatile bit    BAUDCON_BRG16                    at BAUDCON : 3
var volatile bit    BAUDCON_WUE                      at BAUDCON : 1
var volatile bit    BAUDCON_ABDEN                    at BAUDCON : 0
-- ------------------------------------------------
var volatile byte   WPUA                             at 0x20C
var volatile bit    WPUA_WPUA5                       at WPUA : 5
var volatile bit    WPUA_WPUA4                       at WPUA : 4
var volatile bit    WPUA_WPUA3                       at WPUA : 3
-- ------------------------------------------------
var volatile byte   SSP1BUF                          at 0x211
--
alias               SSPBUF                           is SSP1BUF
-- ------------------------------------------------
var volatile byte   SSP1ADD                          at 0x212
--
alias               SSPADD                           is SSP1ADD
-- ------------------------------------------------
var volatile byte   SSP1MSK                          at 0x213
--
alias               SSPMSK                           is SSP1MSK
-- ------------------------------------------------
var volatile byte   SSP1STAT                         at 0x214
var volatile bit    SSP1STAT_SMP                     at SSP1STAT : 7
var volatile bit    SSP1STAT_CKE                     at SSP1STAT : 6
var volatile bit    SSP1STAT_D                       at SSP1STAT : 5
var volatile bit    SSP1STAT_NA                      at SSP1STAT : 5
var volatile bit    SSP1STAT_P                       at SSP1STAT : 4
var volatile bit    SSP1STAT_S                       at SSP1STAT : 3
var volatile bit    SSP1STAT_R                       at SSP1STAT : 2
var volatile bit    SSP1STAT_NW                      at SSP1STAT : 2
var volatile bit    SSP1STAT_UA                      at SSP1STAT : 1
var volatile bit    SSP1STAT_BF                      at SSP1STAT : 0
--
alias               SSPSTAT                          is SSP1STAT
alias               SSPSTAT_SMP                      is SSP1STAT_SMP
alias               SSPSTAT_CKE                      is SSP1STAT_CKE
alias               SSPSTAT_D                        is SSP1STAT_D
alias               SSPSTAT_NA                       is SSP1STAT_NA
alias               SSPSTAT_P                        is SSP1STAT_P
alias               SSPSTAT_S                        is SSP1STAT_S
alias               SSPSTAT_R                        is SSP1STAT_R
alias               SSPSTAT_NW                       is SSP1STAT_NW
alias               SSPSTAT_UA                       is SSP1STAT_UA
alias               SSPSTAT_BF                       is SSP1STAT_BF
-- ------------------------------------------------
var volatile byte   SSP1CON1                         at 0x215
var volatile bit    SSP1CON1_WCOL                    at SSP1CON1 : 7
var volatile bit    SSP1CON1_SSPOV                   at SSP1CON1 : 6
var volatile bit    SSP1CON1_SSPEN                   at SSP1CON1 : 5
var volatile bit    SSP1CON1_CKP                     at SSP1CON1 : 4
var volatile bit    SSP1CON1_SSP1M3                  at SSP1CON1 : 3
var volatile bit    SSP1CON1_SSP1M2                  at SSP1CON1 : 2
var volatile bit    SSP1CON1_SSP1M1                  at SSP1CON1 : 1
var volatile bit    SSP1CON1_SSP1M0                  at SSP1CON1 : 0
--
alias               SSPCON1                          is SSP1CON1
alias               SSPCON1_WCOL                     is SSP1CON1_WCOL
alias               SSPCON1_SSPOV                    is SSP1CON1_SSPOV
alias               SSPCON1_SSPEN                    is SSP1CON1_SSPEN
alias               SSPCON1_CKP                      is SSP1CON1_CKP
alias               SSPCON1_SSP1M3                   is SSP1CON1_SSP1M3
alias               SSPCON1_SSP1M2                   is SSP1CON1_SSP1M2
alias               SSPCON1_SSP1M1                   is SSP1CON1_SSP1M1
alias               SSPCON1_SSP1M0                   is SSP1CON1_SSP1M0
-- ------------------------------------------------
var volatile byte   SSP1CON2                         at 0x216
var volatile bit    SSP1CON2_GCEN                    at SSP1CON2 : 7
var volatile bit    SSP1CON2_ACKSTAT                 at SSP1CON2 : 6
var volatile bit    SSP1CON2_ACKDT                   at SSP1CON2 : 5
var volatile bit    SSP1CON2_ACKEN                   at SSP1CON2 : 4
var volatile bit    SSP1CON2_RCEN                    at SSP1CON2 : 3
var volatile bit    SSP1CON2_PEN                     at SSP1CON2 : 2
var volatile bit    SSP1CON2_RSEN                    at SSP1CON2 : 1
var volatile bit    SSP1CON2_SEN                     at SSP1CON2 : 0
--
alias               SSPCON2                          is SSP1CON2
alias               SSPCON2_GCEN                     is SSP1CON2_GCEN
alias               SSPCON2_ACKSTAT                  is SSP1CON2_ACKSTAT
alias               SSPCON2_ACKDT                    is SSP1CON2_ACKDT
alias               SSPCON2_ACKEN                    is SSP1CON2_ACKEN
alias               SSPCON2_RCEN                     is SSP1CON2_RCEN
alias               SSPCON2_PEN                      is SSP1CON2_PEN
alias               SSPCON2_RSEN                     is SSP1CON2_RSEN
alias               SSPCON2_SEN                      is SSP1CON2_SEN
-- ------------------------------------------------
var volatile byte   SSP1CON3                         at 0x217
var volatile bit    SSP1CON3_ACKTIM                  at SSP1CON3 : 7
var volatile bit    SSP1CON3_PCIE                    at SSP1CON3 : 6
var volatile bit    SSP1CON3_SCIE                    at SSP1CON3 : 5
var volatile bit    SSP1CON3_BOEN                    at SSP1CON3 : 4
var volatile bit    SSP1CON3_SDAHT                   at SSP1CON3 : 3
var volatile bit    SSP1CON3_SBCDE                   at SSP1CON3 : 2
var volatile bit    SSP1CON3_AHEN                    at SSP1CON3 : 1
var volatile bit    SSP1CON3_DHEN                    at SSP1CON3 : 0
--
alias               SSPCON3                          is SSP1CON3
alias               SSPCON3_ACKTIM                   is SSP1CON3_ACKTIM
alias               SSPCON3_PCIE                     is SSP1CON3_PCIE
alias               SSPCON3_SCIE                     is SSP1CON3_SCIE
alias               SSPCON3_BOEN                     is SSP1CON3_BOEN
alias               SSPCON3_SDAHT                    is SSP1CON3_SDAHT
alias               SSPCON3_SBCDE                    is SSP1CON3_SBCDE
alias               SSPCON3_AHEN                     is SSP1CON3_AHEN
alias               SSPCON3_DHEN                     is SSP1CON3_DHEN
-- ------------------------------------------------
var volatile byte   IOCAP                            at 0x391
var volatile bit    IOCAP_IOCAP5                     at IOCAP : 5
var volatile bit    IOCAP_IOCAP4                     at IOCAP : 4
var volatile bit    IOCAP_IOCAP3                     at IOCAP : 3
var volatile bit    IOCAP_IOCAP1                     at IOCAP : 1
var volatile bit    IOCAP_IOCAP0                     at IOCAP : 0
-- ------------------------------------------------
var volatile byte   IOCAN                            at 0x392
var volatile bit    IOCAN_IOCAN5                     at IOCAN : 5
var volatile bit    IOCAN_IOCAN4                     at IOCAN : 4
var volatile bit    IOCAN_IOCAN3                     at IOCAN : 3
var volatile bit    IOCAN_IOCAN1                     at IOCAN : 1
var volatile bit    IOCAN_IOCAN0                     at IOCAN : 0
-- ------------------------------------------------
var volatile byte   IOCAF                            at 0x393
var volatile bit    IOCAF_IOCAF5                     at IOCAF : 5
var volatile bit    IOCAF_IOCAF4                     at IOCAF : 4
var volatile bit    IOCAF_IOCAF3                     at IOCAF : 3
var volatile bit    IOCAF_IOCAF1                     at IOCAF : 1
var volatile bit    IOCAF_IOCAF0                     at IOCAF : 0
-- ------------------------------------------------
var volatile byte   CLKRCON                          at 0x39A
var volatile bit    CLKRCON_CLKREN                   at CLKRCON : 7
var volatile bit    CLKRCON_CLKROE                   at CLKRCON : 6
var volatile bit    CLKRCON_CLKRSLR                  at CLKRCON : 5
var volatile bit*2  CLKRCON_CLKRCD                   at CLKRCON : 3
var volatile bit*3  CLKRCON_CLKRDIV                  at CLKRCON : 0
-- ------------------------------------------------
var volatile byte   ACTCON                           at 0x39B
var volatile bit    ACTCON_ACTEN                     at ACTCON : 7
var volatile bit    ACTCON_ACTUD                     at ACTCON : 6
var volatile bit    ACTCON_ACTSRC                    at ACTCON : 4
var volatile bit    ACTCON_ACTLOCK                   at ACTCON : 3
var volatile bit    ACTCON_ACTORS                    at ACTCON : 1
-- ------------------------------------------------
var volatile byte   PWM1DCL                          at 0x611
var volatile bit*2  PWM1DCL_PWM1DCL                  at PWM1DCL : 6
-- ------------------------------------------------
var volatile byte   PWM1DCH                          at 0x612
-- ------------------------------------------------
var volatile byte   PWM1CON                          at 0x613
var volatile bit    PWM1CON_PWM1EN                   at PWM1CON : 7
var volatile bit    PWM1CON_PWM1OE                   at PWM1CON : 6
var volatile bit    PWM1CON_PWM1OUT                  at PWM1CON : 5
var volatile bit    PWM1CON_PWM1POL                  at PWM1CON : 4
-- ------------------------------------------------
var volatile byte   PWM2DCL                          at 0x614
var volatile bit*2  PWM2DCL_PWM2DCL                  at PWM2DCL : 6
-- ------------------------------------------------
var volatile byte   PWM2DCH                          at 0x615
-- ------------------------------------------------
var volatile byte   PWM2CON                          at 0x616
var volatile bit    PWM2CON_PWM2EN                   at PWM2CON : 7
var volatile bit    PWM2CON_PWM2OE                   at PWM2CON : 6
var volatile bit    PWM2CON_PWM2OUT                  at PWM2CON : 5
var volatile bit    PWM2CON_PWM2POL                  at PWM2CON : 4
-- ------------------------------------------------
var volatile byte   CWG1DBR                          at 0x691
var volatile bit*6  CWG1DBR_CWG1DBR                  at CWG1DBR : 0
-- ------------------------------------------------
var volatile byte   CWG1DBF                          at 0x692
var volatile bit*6  CWG1DBF_CWG1DBF                  at CWG1DBF : 0
-- ------------------------------------------------
var volatile byte   CWG1CON0                         at 0x693
var volatile bit    CWG1CON0_G1EN                    at CWG1CON0 : 7
var volatile bit    CWG1CON0_G1OEB                   at CWG1CON0 : 6
var volatile bit    CWG1CON0_G1OEA                   at CWG1CON0 : 5
var volatile bit    CWG1CON0_G1POLB                  at CWG1CON0 : 4
var volatile bit    CWG1CON0_G1POLA                  at CWG1CON0 : 3
var volatile bit    CWG1CON0_G1CS0                   at CWG1CON0 : 0
-- ------------------------------------------------
var volatile byte   CWG1CON1                         at 0x694
var volatile bit*2  CWG1CON1_G1ASDLB                 at CWG1CON1 : 6
var volatile bit*2  CWG1CON1_G1ASDLA                 at CWG1CON1 : 4
var volatile bit    CWG1CON1_G1IS1                   at CWG1CON1 : 1
var volatile bit    CWG1CON1_G1IS0                   at CWG1CON1 : 0
-- ------------------------------------------------
var volatile byte   CWG1CON2                         at 0x695
var volatile bit    CWG1CON2_G1ASE                   at CWG1CON2 : 7
var volatile bit    CWG1CON2_G1ARSEN                 at CWG1CON2 : 6
var volatile bit    CWG1CON2_G1ASDSC2                at CWG1CON2 : 3
var volatile bit    CWG1CON2_G1ASDSC1                at CWG1CON2 : 2
var volatile bit    CWG1CON2_G1ASDSFLT               at CWG1CON2 : 1
-- ------------------------------------------------
var volatile byte   UCON                             at 0xE8E
var volatile bit    UCON_PPBRST                      at UCON : 6
var volatile bit    UCON_SE0                         at UCON : 5
var volatile bit    UCON_PKTDIS                      at UCON : 4
var volatile bit    UCON_USBEN                       at UCON : 3
var volatile bit    UCON_RESUME                      at UCON : 2
var volatile bit    UCON_SUSPND                      at UCON : 1
-- ------------------------------------------------
var volatile byte   USTAT                            at 0xE8F
var volatile bit*4  USTAT_ENDP                       at USTAT : 3
var volatile bit    USTAT_DIR                        at USTAT : 2
var volatile bit    USTAT_PPBI                       at USTAT : 1
-- ------------------------------------------------
var volatile byte   UIR                              at 0xE90
var volatile bit    UIR_SOFIF                        at UIR : 6
var volatile bit    UIR_STALLIF                      at UIR : 5
var volatile bit    UIR_IDLEIF                       at UIR : 4
var volatile bit    UIR_TRNIF                        at UIR : 3
var volatile bit    UIR_ACTVIF                       at UIR : 2
var volatile bit    UIR_UERRIF                       at UIR : 1
var volatile bit    UIR_URSTIF                       at UIR : 0
-- ------------------------------------------------
var volatile byte   UCFG                             at 0xE91
var volatile bit    UCFG_UTEYE                       at UCFG : 7
var volatile bit    UCFG_UPUEN                       at UCFG : 4
var volatile bit    UCFG_FSEN                        at UCFG : 2
var volatile bit*2  UCFG_PPB                         at UCFG : 0
-- ------------------------------------------------
var volatile byte   UIE                              at 0xE92
var volatile bit    UIE_SOFIE                        at UIE : 6
var volatile bit    UIE_STALLIE                      at UIE : 5
var volatile bit    UIE_IDLEIE                       at UIE : 4
var volatile bit    UIE_TRNIE                        at UIE : 3
var volatile bit    UIE_ACTVIE                       at UIE : 2
var volatile bit    UIE_UERRIE                       at UIE : 1
var volatile bit    UIE_URSTIE                       at UIE : 0
-- ------------------------------------------------
var volatile byte   UEIR                             at 0xE93
var volatile bit    UEIR_BTSEF                       at UEIR : 7
var volatile bit    UEIR_BTOEF                       at UEIR : 4
var volatile bit    UEIR_DFN8EF                      at UEIR : 3
var volatile bit    UEIR_CRC16EF                     at UEIR : 2
var volatile bit    UEIR_CRC5EF                      at UEIR : 1
var volatile bit    UEIR_PIDEF                       at UEIR : 0
-- ------------------------------------------------
var volatile word   UFRM                             at 0xE94
-- ------------------------------------------------
var volatile byte   UFRMH                            at 0xE94
var volatile bit    UFRMH_FRM10                      at UFRMH : 2
var volatile bit    UFRMH_FRM9                       at UFRMH : 1
var volatile bit    UFRMH_FRM8                       at UFRMH : 0
-- ------------------------------------------------
var volatile byte   UFRML                            at 0xE95
var volatile bit    UFRML_FRM7                       at UFRML : 7
var volatile bit    UFRML_FRM6                       at UFRML : 6
var volatile bit    UFRML_FRM5                       at UFRML : 5
var volatile bit    UFRML_FRM4                       at UFRML : 4
var volatile bit    UFRML_FRM3                       at UFRML : 3
var volatile bit    UFRML_FRM2                       at UFRML : 2
var volatile bit    UFRML_FRM1                       at UFRML : 1
var volatile bit    UFRML_FRM0                       at UFRML : 0
-- ------------------------------------------------
var volatile byte   UADDR                            at 0xE96
var volatile bit    UADDR_ADDR6                      at UADDR : 6
var volatile bit    UADDR_ADDR5                      at UADDR : 5
var volatile bit    UADDR_ADDR4                      at UADDR : 4
var volatile bit    UADDR_ADDR3                      at UADDR : 3
var volatile bit    UADDR_ADDR2                      at UADDR : 2
var volatile bit    UADDR_ADDR1                      at UADDR : 1
var volatile bit    UADDR_ADDR0                      at UADDR : 0
-- ------------------------------------------------
var volatile byte   UEIE                             at 0xE97
var volatile bit    UEIE_BTSEE                       at UEIE : 7
var volatile bit    UEIE_BTOEE                       at UEIE : 4
var volatile bit    UEIE_DFN8EE                      at UEIE : 3
var volatile bit    UEIE_CRC16EE                     at UEIE : 2
var volatile bit    UEIE_CRC5EE                      at UEIE : 1
var volatile bit    UEIE_PIDEE                       at UEIE : 0
-- ------------------------------------------------
var volatile byte   UEP0                             at 0xE98
var volatile bit    UEP0_EPHSHK                      at UEP0 : 4
var volatile bit    UEP0_EPCONDIS                    at UEP0 : 3
var volatile bit    UEP0_EPOUTEN                     at UEP0 : 2
var volatile bit    UEP0_EPINEN                      at UEP0 : 1
var volatile bit    UEP0_EPSTALL                     at UEP0 : 0
-- ------------------------------------------------
var volatile byte   UEP1                             at 0xE99
var volatile bit    UEP1_EPHSHK                      at UEP1 : 4
var volatile bit    UEP1_EPCONDIS                    at UEP1 : 3
var volatile bit    UEP1_EPOUTEN                     at UEP1 : 2
var volatile bit    UEP1_EPINEN                      at UEP1 : 1
var volatile bit    UEP1_EPSTALL                     at UEP1 : 0
-- ------------------------------------------------
var volatile byte   UEP2                             at 0xE9A
var volatile bit    UEP2_EPHSHK                      at UEP2 : 4
var volatile bit    UEP2_EPCONDIS                    at UEP2 : 3
var volatile bit    UEP2_EPOUTEN                     at UEP2 : 2
var volatile bit    UEP2_EPINEN                      at UEP2 : 1
var volatile bit    UEP2_EPSTALL                     at UEP2 : 0
-- ------------------------------------------------
var volatile byte   UEP3                             at 0xE9B
var volatile bit    UEP3_EPHSHK                      at UEP3 : 4
var volatile bit    UEP3_EPCONDIS                    at UEP3 : 3
var volatile bit    UEP3_EPOUTEN                     at UEP3 : 2
var volatile bit    UEP3_EPINEN                      at UEP3 : 1
var volatile bit    UEP3_EPSTALL                     at UEP3 : 0
-- ------------------------------------------------
var volatile byte   UEP4                             at 0xE9C
var volatile bit    UEP4_EPHSHK                      at UEP4 : 4
var volatile bit    UEP4_EPCONDIS                    at UEP4 : 3
var volatile bit    UEP4_EPOUTEN                     at UEP4 : 2
var volatile bit    UEP4_EPINEN                      at UEP4 : 1
var volatile bit    UEP4_EPSTALL                     at UEP4 : 0
-- ------------------------------------------------
var volatile byte   UEP5                             at 0xE9D
var volatile bit    UEP5_EPHSHK                      at UEP5 : 4
var volatile bit    UEP5_EPCONDIS                    at UEP5 : 3
var volatile bit    UEP5_EPOUTEN                     at UEP5 : 2
var volatile bit    UEP5_EPINEN                      at UEP5 : 1
var volatile bit    UEP5_EPSTALL                     at UEP5 : 0
-- ------------------------------------------------
var volatile byte   UEP6                             at 0xE9E
var volatile bit    UEP6_EPHSHK                      at UEP6 : 4
var volatile bit    UEP6_EPCONDIS                    at UEP6 : 3
var volatile bit    UEP6_EPOUTEN                     at UEP6 : 2
var volatile bit    UEP6_EPINEN                      at UEP6 : 1
var volatile bit    UEP6_EPSTALL                     at UEP6 : 0
-- ------------------------------------------------
var volatile byte   UEP7                             at 0xE9F
var volatile bit    UEP7_EPHSHK                      at UEP7 : 4
var volatile bit    UEP7_EPCONDIS                    at UEP7 : 3
var volatile bit    UEP7_EPOUTEN                     at UEP7 : 2
var volatile bit    UEP7_EPINEN                      at UEP7 : 1
var volatile bit    UEP7_EPSTALL                     at UEP7 : 0
-- ------------------------------------------------
var volatile byte   STATUS_SHAD                      at 0xFE4
var volatile bit    STATUS_SHAD_Z                    at STATUS_SHAD : 2
var volatile bit    STATUS_SHAD_DC                   at STATUS_SHAD : 1
var volatile bit    STATUS_SHAD_C                    at STATUS_SHAD : 0
-- ------------------------------------------------
var volatile byte   WREG_SHAD                        at 0xFE5
-- ------------------------------------------------
var volatile byte   BSR_SHAD                         at 0xFE6
var volatile bit*5  BSR_SHAD_BSR_SHAD                at BSR_SHAD : 0
-- ------------------------------------------------
var volatile byte   PCLATH_SHAD                      at 0xFE7
var volatile bit*7  PCLATH_SHAD_PCLATH_SHAD          at PCLATH_SHAD : 0
-- ------------------------------------------------
var volatile byte   FSR0L_SHAD                       at 0xFE8
-- ------------------------------------------------
var volatile byte   FSR0H_SHAD                       at 0xFE9
-- ------------------------------------------------
var volatile byte   FSR1L_SHAD                       at 0xFEA
-- ------------------------------------------------
var volatile byte   FSR1H_SHAD                       at 0xFEB
-- ------------------------------------------------
var volatile byte   STKPTR                           at 0xFED
var volatile bit*5  STKPTR_STKPTR                    at STKPTR : 0
-- ------------------------------------------------
var volatile byte   TOSL                             at 0xFEE
-- ------------------------------------------------
var volatile byte   TOSH                             at 0xFEF
var volatile bit*7  TOSH_TOSH                        at TOSH : 0
--
-- ===================================================
--
-- Special (device specific) constants and procedures
--
const      ADC_GROUP          = ADC_V0
const byte ADC_NTOTAL_CHANNEL = 5
const byte ADC_ADCS_BITCOUNT  = 3
const byte ADC_MAX_RESOLUTION = 10
--
const PPS_GROUP  = PPS_0        -- no Peripheral Pin Selection
--
const word USB_BDT_ADDRESS    = 0x2000
--
-- - - - - - - - - - - - - - - - - - - - - - - - - - -
-- Change analog I/O pins into digital I/O pins.
procedure analog_off() is
   pragma inline
   ANSELA = 0b0000_0000        -- digital I/O
   ANSELC = 0b0000_0000        -- digital I/O
end procedure
--
-- - - - - - - - - - - - - - - - - - - - - - - - - - -
-- Disable ADC module
procedure adc_off() is
   pragma inline
   ADCON0 = 0b0000_0000         -- disable ADC
   ADCON1 = 0b0000_0000
   ADCON2 = 0b0000_0000
end procedure
--
-- - - - - - - - - - - - - - - - - - - - - - - - - - -
-- Disable comparator module
procedure comparator_off() is
   pragma inline
   CM1CON0 = 0b0000_0000       -- disable comparator
   CM1CON1 = 0b0000_0000
   CM2CON0 = 0b0000_0000       -- disable 2nd comparator
   CM2CON1 = 0b0000_0000
end procedure
--
-- - - - - - - - - - - - - - - - - - - - - - - - - - -
-- Switch analog ports to digital mode (if analog module present).
procedure enable_digital_io() is
   pragma inline
   analog_off()
   adc_off()
   comparator_off()
end procedure
--
-- ==================================================
--
-- Symbolic Fuse definitions
-- -------------------------
--
-- CONFIG1 (0x8007)
--
pragma fuse_def OSC:0 0x7 {                -- oscillator selection bits
       ECH_NOCLKOUT = 0x7                  -- ech, external clock, high power mode (4-20 mhz): device clock supplied to clkin pins
       ECM_NOCLKOUT = 0x6                  -- ecm, external clock, medium power mode (0.5-4 mhz): device clock supplied to clkin pins
       ECL_NOCLKOUT = 0x5                  -- ecl, external clock, low power mode (0-0.5 mhz): device clock supplied to clkin pins
       INTOSC_NOCLKOUT = 0x4               -- intosc oscillator: i/o function on clkin pin
       RC_NOCLKOUT = 0x3                   -- extrc oscillator: external rc circuit connected to clkin pin
       HS = 0x2                            -- hs oscillator, high-speed crystal/resonator connected between osc1 and osc2 pins
       XT = 0x1                            -- xt oscillator, crystal/resonator connected between osc1 and osc2 pins
       LP = 0x0                            -- lp oscillator, low-power crystal connected between osc1 and osc2 pins
       }
pragma fuse_def WDT:0 0x18 {               -- watchdog timer enable
       ENABLED = 0x18                      -- enabled
       RUNONLY = 0x10                      -- wdt enabled while running and disabled in sleep
       CONTROL = 0x8                       -- wdt controlled by the swdten bit in the wdtcon register
       DISABLED = 0x0                      -- disabled
       }
pragma fuse_def PWRTE:0 0x20 {             -- power-up timer enable
       DISABLED = 0x20                     -- disabled
       ENABLED = 0x0                       -- enabled
       }
pragma fuse_def MCLR:0 0x40 {              -- mclr pin function select
       EXTERNAL = 0x40                     -- enabled
       INTERNAL = 0x0                      -- disabled
       }
pragma fuse_def CP:0 0x80 {                -- flash program memory code protection
       DISABLED = 0x80                     -- disabled
       ENABLED = 0x0                       -- enabled
       }
pragma fuse_def BROWNOUT:0 0x600 {         -- brown-out reset enable
       ENABLED = 0x600                     -- enabled
       RUNONLY = 0x400                     -- brown-out reset enabled while running and disabled in sleep
       CONTROL = 0x200                     -- brown-out reset controlled by the sboren bit in the borcon register
       DISABLED = 0x0                      -- disabled
       }
pragma fuse_def CLKOUTEN:0 0x800 {         -- clock out enable
       DISABLED = 0x800                    -- disabled
       ENABLED = 0x0                       -- enabled
       }
pragma fuse_def IESO:0 0x1000 {            -- internal/external switchover mode
       ENABLED = 0x1000                    -- enabled
       DISABLED = 0x0                      -- disabled
       }
pragma fuse_def FCMEN:0 0x2000 {           -- fail-safe clock monitor enable
       ENABLED = 0x2000                    -- enabled
       DISABLED = 0x0                      -- disabled
       }
--
-- CONFIG2 (0x8008)
--
pragma fuse_def WRT:1 0x3 {                -- flash memory self-write protection
       NO_PROTECTION = 0x3                 -- disabled
       R0000_01FF = 0x2                    -- 000h to 1ffh write protected, 200h to 1fffh may be modified by pmcon control
       R0000_0FFF = 0x1                    -- 000h to 0fffh write protected, 1000h to 1fffh may be modified by pmcon control
       ALL_PROTECTED = 0x0                 -- 000h to 1fffh write protected, no addresses may be modified by pmcon control
       }
pragma fuse_def CPUDIV:1 0x30 {            -- cpu system clock selection bit
       P6 = 0x30                           -- cpu system clock divided by 6
       P3 = 0x20                           -- cpu system clock divided by 3
       P2 = 0x10                           -- cpu system clock divided by 2
       P1 = 0x0                            -- no cpu system divide
       }
pragma fuse_def USBLSCLK:1 0x40 {          -- usb low speed clock selection bit
       F48MHZ = 0x40                       -- system clock expects 48 mhz, fs/ls usb clkens divide-by is set to 8.
       F24MHZ = 0x0                        -- system clock expects 24 mhz, fs/ls usb clkens divide-by is set to 4.
       }
pragma fuse_def PLLMULT:1 0x80 {           -- pll multipler selection bit
       N3X = 0x80                          -- 3x output frequency selected
       N4X = 0x0                           -- 4x output frequency selected
       }
pragma fuse_def PLLEN:1 0x100 {            -- pll enable bit
       P4 = 0x100                          -- 3x or 4x pll enabled
       P1 = 0x0                            -- 3x or 4x pll disabled
       }
pragma fuse_def STVR:1 0x200 {             -- stack overflow/underflow reset enable
       ENABLED = 0x200                     -- enabled
       DISABLED = 0x0                      -- disabled
       }
pragma fuse_def VOLTAGE:1 0x400 {          -- brown-out reset voltage selection
       MINIMUM = 0x400                     -- brown-out reset voltage (vbor), low trip point selected.
       MAXIMUM = 0x0                       -- brown-out reset voltage (vbor), high trip point selected.
       }
pragma fuse_def LPBOR:1 0x800 {            -- low-power brown out reset
       DISABLED = 0x800                    -- disabled
       ENABLED = 0x0                       -- enabled
       }
pragma fuse_def DEBUG:1 0x1000 {           -- in-circuit debugger mode
       DISABLED = 0x1000                   -- disabled
       ENABLED = 0x0                       -- enabled
       }
pragma fuse_def LVP:1 0x2000 {             -- low-voltage programming enable
       ENABLED = 0x2000                    -- enabled
       DISABLED = 0x0                      -- disabled
       }
--
