-- ===================================================
-- Title: JalV2 device include file for PIC 18F66J93
--
-- Author: Rob Hamerling, Copyright (c) 2008..2012, all rights reserved.
--
-- Adapted-by:
--
-- Revision: $Revision$
--
-- Compiler: 2.4o
--
-- This file is part of jallib  (http://jallib.googlecode.com)
-- Released under the ZLIB license  (http://www.opensource.org/licenses/zlib-license.html)
--
-- Description:
--    Device include file for pic18f66j93, containing:
--    - Declaration of ports and pins of the chip.
--    - Procedures to force the use of the LATx register
--      when PORTx is addressed for output.
--    - Symbolic definitions for configuration bits (fuses)
--    - Some device dependent procedures for common
--      operations, like:
--      . enable_digital_io()
--
-- Sources:
--  - x:/mplab883/mplab ide/device/pic18f66j93.dev
--
-- Notes:
--  - Created with Dev2Jal Rexx script version 0.1.31
--  - File creation date/time: 8 Feb 2012 11:11
--
-- ===================================================
--
const word DEVICE_ID   = 0x5040
const byte PICTYPE[]   = "18F66J93"
const byte DATASHEET[] = "39948A"
const byte PGMSPEC[]   = "39644L"
--
-- Vdd Range: 2.125-3.500 Nominal: 3.250
-- Vpp Range: 2.125-3.500 Default: 3.250
--
-- ---------------------------------------------------
--
include chipdef_jallib                  -- common constants
--
pragma  target  cpu   PIC_16            -- (banks=16)
pragma  target  chip  18f66j93
pragma  target  bank  0x0100
pragma  stack   31
pragma  code    65528
pragma  data    0x1-0xF53
pragma  shared  0x0-0x0
--
var volatile byte _pic_accum shared at 0x0      -- (compiler)
--
const word  _FUSES_CT             = 8
const dword _FUSE_BASE[_FUSES_CT] = { 0x00FFF8,
                                      0x00FFF9,
                                      0x00FFFA,
                                      0x00FFFB,
                                      0x00FFFC,
                                      0x00FFFD,
                                      0x00FFFE,
                                      0x00FFFF }
const byte  _FUSES[_FUSES_CT]     = { 0b_1110_0001,         -- CONFIG1L
                                      0b_1111_0100,         -- CONFIG1H
                                      0b_1100_0111,         -- CONFIG2L
                                      0b_1111_1111,         -- CONFIG2H
                                      0b_0000_0000,         -- CONFIG3L
                                      0b_1111_0011,         -- CONFIG3H
                                      0b_0000_0000,         -- CONFIG4L
                                      0b_1111_0000 }        -- CONFIG4H
--
-- ------------------------------------------------
var volatile byte   PADCFG1                          at 0xF54
var volatile bit    PADCFG1_RTSECSEL1                at PADCFG1 : 2
var volatile bit    PADCFG1_RTSECSEL0                at PADCFG1 : 1
var volatile bit*2  PADCFG1_RTSECSEL                 at PADCFG1 : 1
-- ------------------------------------------------
var volatile byte   CTMUICON                         at 0xF55
var volatile bit*6  CTMUICON_ITRIM                   at CTMUICON : 2
var volatile bit*2  CTMUICON_IRNG                    at CTMUICON : 0
-- ------------------------------------------------
var volatile byte   CTMUCONL                         at 0xF56
var volatile bit    CTMUCONL_EDG2POL                 at CTMUCONL : 7
var volatile bit    CTMUCONL_EDG2SEL1                at CTMUCONL : 6
var volatile bit    CTMUCONL_EDG2SEL0                at CTMUCONL : 5
var volatile bit    CTMUCONL_EDG1POL                 at CTMUCONL : 4
var volatile bit    CTMUCONL_EDG1SEL1                at CTMUCONL : 3
var volatile bit    CTMUCONL_EDG1SEL0                at CTMUCONL : 2
var volatile bit    CTMUCONL_EDG2STAT                at CTMUCONL : 1
var volatile bit    CTMUCONL_EDG1STAT                at CTMUCONL : 0
-- ------------------------------------------------
var volatile byte   CTMUCONH                         at 0xF57
var volatile bit    CTMUCONH_CTMUEN                  at CTMUCONH : 7
var volatile bit    CTMUCONH_CTMUSIDL                at CTMUCONH : 5
var volatile bit    CTMUCONH_TGEN                    at CTMUCONH : 4
var volatile bit    CTMUCONH_EDGEN                   at CTMUCONH : 3
var volatile bit    CTMUCONH_EDGSEQEN                at CTMUCONH : 2
var volatile bit    CTMUCONH_IDISSEN                 at CTMUCONH : 1
var volatile bit    CTMUCONH_CTTRIG                  at CTMUCONH : 0
-- ------------------------------------------------
var volatile byte   ALRMVALL                         at 0xF58
-- ------------------------------------------------
var volatile byte   ALRMVALH                         at 0xF59
-- ------------------------------------------------
var volatile byte   ALRMRPT                          at 0xF5A
-- ------------------------------------------------
var volatile byte   ALRMCFG                          at 0xF5B
var volatile bit    ALRMCFG_ALRMEN                   at ALRMCFG : 7
var volatile bit    ALRMCFG_CHIME                    at ALRMCFG : 6
var volatile bit*4  ALRMCFG_AMASK                    at ALRMCFG : 2
var volatile bit*2  ALRMCFG_ALRMPTR                  at ALRMCFG : 0
var volatile bit    ALRMCFG_ALRMPTR1                 at ALRMCFG : 1
var volatile bit    ALRMCFG_ALRMPTR0                 at ALRMCFG : 0
-- ------------------------------------------------
var volatile byte   RTCVALL                          at 0xF5C
-- ------------------------------------------------
var volatile byte   RTCVALH                          at 0xF5D
-- ------------------------------------------------
var volatile byte   RTCCAL                           at 0xF5E
-- ------------------------------------------------
var volatile byte   RTCCFG                           at 0xF5F
var volatile bit    RTCCFG_RTCEN                     at RTCCFG : 7
var volatile bit    RTCCFG_RTCWREN                   at RTCCFG : 5
var volatile bit    RTCCFG_RTCSYNC                   at RTCCFG : 4
var volatile bit    RTCCFG_HALFSEC                   at RTCCFG : 3
var volatile bit    RTCCFG_RTCOE                     at RTCCFG : 2
var volatile bit    RTCCFG_RTCPTR1                   at RTCCFG : 1
var volatile bit    RTCCFG_RTCPTR0                   at RTCCFG : 0
var volatile bit*2  RTCCFG_RTCPTR                    at RTCCFG : 0
-- ------------------------------------------------
var volatile byte   RCSTA2                    shared at 0xF60
var volatile bit    RCSTA2_SPEN               shared at RCSTA2 : 7
var volatile bit    RCSTA2_RX9                shared at RCSTA2 : 6
var volatile bit    RCSTA2_SREN               shared at RCSTA2 : 5
var volatile bit    RCSTA2_CREN               shared at RCSTA2 : 4
var volatile bit    RCSTA2_ADDEN              shared at RCSTA2 : 3
var volatile bit    RCSTA2_FERR               shared at RCSTA2 : 2
var volatile bit    RCSTA2_OERR               shared at RCSTA2 : 1
var volatile bit    RCSTA2_RX9D               shared at RCSTA2 : 0
-- ------------------------------------------------
var volatile byte   TXSTA2                    shared at 0xF61
var volatile bit    TXSTA2_CSRC               shared at TXSTA2 : 7
var volatile bit    TXSTA2_TX9                shared at TXSTA2 : 6
var volatile bit    TXSTA2_TXEN               shared at TXSTA2 : 5
var volatile bit    TXSTA2_SYNC               shared at TXSTA2 : 4
var volatile bit    TXSTA2_BRGH               shared at TXSTA2 : 2
var volatile bit    TXSTA2_TRMT               shared at TXSTA2 : 1
var volatile bit    TXSTA2_TX9D               shared at TXSTA2 : 0
-- ------------------------------------------------
var volatile byte   TXREG2                    shared at 0xF62
-- ------------------------------------------------
var volatile byte   RCREG2                    shared at 0xF63
-- ------------------------------------------------
var volatile byte   SPBRG2                    shared at 0xF64
-- ------------------------------------------------
var volatile byte   CCP2CON                   shared at 0xF65
var volatile bit*2  CCP2CON_DC2B              shared at CCP2CON : 4
var volatile bit*4  CCP2CON_CCP2M             shared at CCP2CON : 0
-- ------------------------------------------------
var volatile word   CCPR2                     shared at 0xF66
-- ------------------------------------------------
var volatile byte   CCPR2L                    shared at 0xF66
-- ------------------------------------------------
var volatile byte   CCPR2H                    shared at 0xF67
-- ------------------------------------------------
var volatile byte   CCP1CON                   shared at 0xF68
var volatile bit*2  CCP1CON_DC1B              shared at CCP1CON : 4
var volatile bit*4  CCP1CON_CCP1M             shared at CCP1CON : 0
-- ------------------------------------------------
var volatile word   CCPR1                     shared at 0xF69
-- ------------------------------------------------
var volatile byte   CCPR1L                    shared at 0xF69
-- ------------------------------------------------
var volatile byte   CCPR1H                    shared at 0xF6A
-- ------------------------------------------------
var volatile byte   LCDDATA6                  shared at 0xF6C
-- ------------------------------------------------
var volatile byte   LCDDATA7                  shared at 0xF6D
-- ------------------------------------------------
var volatile byte   LCDDATA8                  shared at 0xF6E
-- ------------------------------------------------
var volatile byte   LCDDATA9                  shared at 0xF6F
-- ------------------------------------------------
var volatile byte   LCDDATA10                 shared at 0xF70
-- ------------------------------------------------
var volatile byte   LCDDATA12                 shared at 0xF72
-- ------------------------------------------------
var volatile byte   LCDDATA13                 shared at 0xF73
-- ------------------------------------------------
var volatile byte   LCDDATA14                 shared at 0xF74
-- ------------------------------------------------
var volatile byte   LCDDATA15                 shared at 0xF75
-- ------------------------------------------------
var volatile byte   LCDDATA16                 shared at 0xF76
-- ------------------------------------------------
var volatile byte   LCDDATA18                 shared at 0xF78
-- ------------------------------------------------
var volatile byte   LCDDATA19                 shared at 0xF79
-- ------------------------------------------------
var volatile byte   LCDDATA20                 shared at 0xF7A
-- ------------------------------------------------
var volatile byte   LCDDATA21                 shared at 0xF7B
-- ------------------------------------------------
var volatile byte   LCDDATA22                 shared at 0xF7C
-- ------------------------------------------------
var volatile byte   BAUDCON1                  shared at 0xF7E
var volatile bit    BAUDCON1_ABDOVF           shared at BAUDCON1 : 7
var volatile bit    BAUDCON1_RCMT             shared at BAUDCON1 : 6
var volatile bit    BAUDCON1_RXDTP            shared at BAUDCON1 : 5
var volatile bit    BAUDCON1_TXCKP            shared at BAUDCON1 : 4
var volatile bit    BAUDCON1_BRG16            shared at BAUDCON1 : 3
var volatile bit    BAUDCON1_WUE              shared at BAUDCON1 : 1
var volatile bit    BAUDCON1_ABDEN            shared at BAUDCON1 : 0
--
alias               BAUDCON                          is BAUDCON1
alias               BAUDCON_ABDOVF                   is BAUDCON1_ABDOVF
alias               BAUDCON_RCMT                     is BAUDCON1_RCMT
alias               BAUDCON_RXDTP                    is BAUDCON1_RXDTP
alias               BAUDCON_TXCKP                    is BAUDCON1_TXCKP
alias               BAUDCON_BRG16                    is BAUDCON1_BRG16
alias               BAUDCON_WUE                      is BAUDCON1_WUE
alias               BAUDCON_ABDEN                    is BAUDCON1_ABDEN
-- ------------------------------------------------
var volatile byte   SPBRGH1                   shared at 0xF7F
--
alias               SPBRGH                           is SPBRGH1
-- ------------------------------------------------
var volatile byte   PORTA                     shared at 0xF80
var volatile bit    PORTA_RA7                 shared at PORTA : 7
var volatile bit    PORTA_RA6                 shared at PORTA : 6
var volatile bit    PORTA_RA5                 shared at PORTA : 5
var volatile bit    PORTA_RA4                 shared at PORTA : 4
var volatile bit    PORTA_RA3                 shared at PORTA : 3
var volatile bit    PORTA_RA2                 shared at PORTA : 2
var volatile bit    PORTA_RA1                 shared at PORTA : 1
var volatile bit    PORTA_RA0                 shared at PORTA : 0
-- ------------------------------------------------
var volatile byte   PORTB                     shared at 0xF81
var volatile bit    PORTB_RB7                 shared at PORTB : 7
var volatile bit    PORTB_RB6                 shared at PORTB : 6
var volatile bit    PORTB_RB5                 shared at PORTB : 5
var volatile bit    PORTB_RB4                 shared at PORTB : 4
var volatile bit    PORTB_RB3                 shared at PORTB : 3
var volatile bit    PORTB_RB2                 shared at PORTB : 2
var volatile bit    PORTB_RB1                 shared at PORTB : 1
var volatile bit    PORTB_RB0                 shared at PORTB : 0
-- ------------------------------------------------
var volatile byte   PORTC                     shared at 0xF82
var volatile bit    PORTC_RC7                 shared at PORTC : 7
var volatile bit    PORTC_RC6                 shared at PORTC : 6
var volatile bit    PORTC_RC5                 shared at PORTC : 5
var volatile bit    PORTC_RC4                 shared at PORTC : 4
var volatile bit    PORTC_RC3                 shared at PORTC : 3
var volatile bit    PORTC_RC2                 shared at PORTC : 2
var volatile bit    PORTC_RC1                 shared at PORTC : 1
var volatile bit    PORTC_RC0                 shared at PORTC : 0
-- ------------------------------------------------
var volatile byte   PORTD                     shared at 0xF83
var volatile bit    PORTD_RD7                 shared at PORTD : 7
var volatile bit    PORTD_RD6                 shared at PORTD : 6
var volatile bit    PORTD_RD5                 shared at PORTD : 5
var volatile bit    PORTD_RD4                 shared at PORTD : 4
var volatile bit    PORTD_RD3                 shared at PORTD : 3
var volatile bit    PORTD_RD2                 shared at PORTD : 2
var volatile bit    PORTD_RD1                 shared at PORTD : 1
var volatile bit    PORTD_RD0                 shared at PORTD : 0
-- ------------------------------------------------
var volatile byte   PORTE                     shared at 0xF84
var volatile bit    PORTE_RE7                 shared at PORTE : 7
var volatile bit    PORTE_RE6                 shared at PORTE : 6
var volatile bit    PORTE_RE5                 shared at PORTE : 5
var volatile bit    PORTE_RE4                 shared at PORTE : 4
var volatile bit    PORTE_RE3                 shared at PORTE : 3
var volatile bit    PORTE_RE1                 shared at PORTE : 1
var volatile bit    PORTE_RE0                 shared at PORTE : 0
-- ------------------------------------------------
var volatile byte   PORTF                     shared at 0xF85
var volatile bit    PORTF_RF7                 shared at PORTF : 7
var volatile bit    PORTF_RF6                 shared at PORTF : 6
var volatile bit    PORTF_RF5                 shared at PORTF : 5
var volatile bit    PORTF_RF4                 shared at PORTF : 4
var volatile bit    PORTF_RF3                 shared at PORTF : 3
var volatile bit    PORTF_RF2                 shared at PORTF : 2
var volatile bit    PORTF_RF1                 shared at PORTF : 1
-- ------------------------------------------------
var volatile byte   PORTG                     shared at 0xF86
var volatile bit    PORTG_RDPU                shared at PORTG : 7
var volatile bit    PORTG_REPU                shared at PORTG : 6
var volatile bit    PORTG_RJPU                shared at PORTG : 5
var volatile bit    PORTG_RG4                 shared at PORTG : 4
var volatile bit    PORTG_RG3                 shared at PORTG : 3
var volatile bit    PORTG_RG2                 shared at PORTG : 2
var volatile bit    PORTG_RG1                 shared at PORTG : 1
var volatile bit    PORTG_RG0                 shared at PORTG : 0
-- ------------------------------------------------
var volatile byte   LATA                      shared at 0xF89
--
procedure PORTA'put(byte in x at LATA) is
   pragma inline
end procedure
--
procedure PORTA_low'put(byte in x) is
   pragma inline
   LATA = (LATA & 0xF0) | (x & 0x0F)
end procedure
function PORTA_low'get() return byte is
   pragma inline
   return (PORTA & 0x0F)
end function
--
procedure PORTA_high'put(byte in x) is
   pragma inline
   LATA = (LATA & 0x0F) | (x << 4)
end procedure
function PORTA_high'get() return byte is
   pragma inline
   return (PORTA >> 4)
end function
--
var volatile bit    LATA_LATA7                shared at LATA : 7
var volatile bit    pin_A7                    shared at PORTA : 7
--
procedure pin_A7'put(bit in x at LATA : 7) is
   pragma inline
end procedure
--
var volatile bit    LATA_LATA6                shared at LATA : 6
var volatile bit    pin_A6                    shared at PORTA : 6
--
procedure pin_A6'put(bit in x at LATA : 6) is
   pragma inline
end procedure
--
var volatile bit    LATA_LATA5                shared at LATA : 5
var volatile bit    pin_A5                    shared at PORTA : 5
alias               pin_AN4                          is pin_A5
alias               pin_SEG15                        is pin_A5
--
procedure pin_A5'put(bit in x at LATA : 5) is
   pragma inline
end procedure
--
var volatile bit    LATA_LATA4                shared at LATA : 4
var volatile bit    pin_A4                    shared at PORTA : 4
alias               pin_T0CKI                        is pin_A4
alias               pin_SEG14                        is pin_A4
--
procedure pin_A4'put(bit in x at LATA : 4) is
   pragma inline
end procedure
--
var volatile bit    LATA_LATA3                shared at LATA : 3
var volatile bit    pin_A3                    shared at PORTA : 3
alias               pin_AN3                          is pin_A3
alias               pin_VREF_POS                     is pin_A3
--
procedure pin_A3'put(bit in x at LATA : 3) is
   pragma inline
end procedure
--
var volatile bit    LATA_LATA2                shared at LATA : 2
var volatile bit    pin_A2                    shared at PORTA : 2
alias               pin_AN2                          is pin_A2
alias               pin_VREF_NEG                     is pin_A2
--
procedure pin_A2'put(bit in x at LATA : 2) is
   pragma inline
end procedure
--
var volatile bit    LATA_LATA1                shared at LATA : 1
var volatile bit    pin_A1                    shared at PORTA : 1
alias               pin_AN1                          is pin_A1
alias               pin_SEG18                        is pin_A1
--
procedure pin_A1'put(bit in x at LATA : 1) is
   pragma inline
end procedure
--
var volatile bit    LATA_LATA0                shared at LATA : 0
var volatile bit    pin_A0                    shared at PORTA : 0
alias               pin_AN0                          is pin_A0
--
procedure pin_A0'put(bit in x at LATA : 0) is
   pragma inline
end procedure
--
-- ------------------------------------------------
var volatile byte   LATB                      shared at 0xF8A
--
procedure PORTB'put(byte in x at LATB) is
   pragma inline
end procedure
--
procedure PORTB_low'put(byte in x) is
   pragma inline
   LATB = (LATB & 0xF0) | (x & 0x0F)
end procedure
function PORTB_low'get() return byte is
   pragma inline
   return (PORTB & 0x0F)
end function
--
procedure PORTB_high'put(byte in x) is
   pragma inline
   LATB = (LATB & 0x0F) | (x << 4)
end procedure
function PORTB_high'get() return byte is
   pragma inline
   return (PORTB >> 4)
end function
--
var volatile bit    LATB_LATB7                shared at LATB : 7
var volatile bit    pin_B7                    shared at PORTB : 7
alias               pin_KBI3                         is pin_B7
alias               pin_PGD                          is pin_B7
--
procedure pin_B7'put(bit in x at LATB : 7) is
   pragma inline
end procedure
--
var volatile bit    LATB_LATB6                shared at LATB : 6
var volatile bit    pin_B6                    shared at PORTB : 6
alias               pin_KBI2                         is pin_B6
alias               pin_PGC                          is pin_B6
--
procedure pin_B6'put(bit in x at LATB : 6) is
   pragma inline
end procedure
--
var volatile bit    LATB_LATB5                shared at LATB : 5
var volatile bit    pin_B5                    shared at PORTB : 5
alias               pin_KBI1                         is pin_B5
alias               pin_SEG29                        is pin_B5
--
procedure pin_B5'put(bit in x at LATB : 5) is
   pragma inline
end procedure
--
var volatile bit    LATB_LATB4                shared at LATB : 4
var volatile bit    pin_B4                    shared at PORTB : 4
alias               pin_KBI0                         is pin_B4
alias               pin_SEG11                        is pin_B4
--
procedure pin_B4'put(bit in x at LATB : 4) is
   pragma inline
end procedure
--
var volatile bit    LATB_LATB3                shared at LATB : 3
var volatile bit    pin_B3                    shared at PORTB : 3
alias               pin_INT3                         is pin_B3
alias               pin_SEG10                        is pin_B3
alias               pin_CTED2                        is pin_B3
--
procedure pin_B3'put(bit in x at LATB : 3) is
   pragma inline
end procedure
--
var volatile bit    LATB_LATB2                shared at LATB : 2
var volatile bit    pin_B2                    shared at PORTB : 2
alias               pin_INT2                         is pin_B2
alias               pin_SEG9                         is pin_B2
alias               pin_CTED1                        is pin_B2
--
procedure pin_B2'put(bit in x at LATB : 2) is
   pragma inline
end procedure
--
var volatile bit    LATB_LATB1                shared at LATB : 1
var volatile bit    pin_B1                    shared at PORTB : 1
alias               pin_INT1                         is pin_B1
alias               pin_SEG8                         is pin_B1
--
procedure pin_B1'put(bit in x at LATB : 1) is
   pragma inline
end procedure
--
var volatile bit    LATB_LATB0                shared at LATB : 0
var volatile bit    pin_B0                    shared at PORTB : 0
alias               pin_INT0                         is pin_B0
alias               pin_SEG30                        is pin_B0
--
procedure pin_B0'put(bit in x at LATB : 0) is
   pragma inline
end procedure
--
-- ------------------------------------------------
var volatile byte   LATC                      shared at 0xF8B
--
procedure PORTC'put(byte in x at LATC) is
   pragma inline
end procedure
--
procedure PORTC_low'put(byte in x) is
   pragma inline
   LATC = (LATC & 0xF0) | (x & 0x0F)
end procedure
function PORTC_low'get() return byte is
   pragma inline
   return (PORTC & 0x0F)
end function
--
procedure PORTC_high'put(byte in x) is
   pragma inline
   LATC = (LATC & 0x0F) | (x << 4)
end procedure
function PORTC_high'get() return byte is
   pragma inline
   return (PORTC >> 4)
end function
--
var volatile bit    LATC_LATC7                shared at LATC : 7
var volatile bit    pin_C7                    shared at PORTC : 7
alias               pin_RX1                          is pin_C7
alias               pin_RX                           is pin_C7
alias               pin_DT1                          is pin_C7
alias               pin_SEG28                        is pin_C7
--
procedure pin_C7'put(bit in x at LATC : 7) is
   pragma inline
end procedure
--
var volatile bit    LATC_LATC6                shared at LATC : 6
var volatile bit    pin_C6                    shared at PORTC : 6
alias               pin_TX1                          is pin_C6
alias               pin_TX                           is pin_C6
alias               pin_CK1                          is pin_C6
alias               pin_SEG27                        is pin_C6
--
procedure pin_C6'put(bit in x at LATC : 6) is
   pragma inline
end procedure
--
var volatile bit    LATC_LATC5                shared at LATC : 5
var volatile bit    pin_C5                    shared at PORTC : 5
alias               pin_SDO                          is pin_C5
alias               pin_SEG12                        is pin_C5
--
procedure pin_C5'put(bit in x at LATC : 5) is
   pragma inline
end procedure
--
var volatile bit    LATC_LATC4                shared at LATC : 4
var volatile bit    pin_C4                    shared at PORTC : 4
alias               pin_SDI                          is pin_C4
alias               pin_SDA                          is pin_C4
alias               pin_SEG16                        is pin_C4
--
procedure pin_C4'put(bit in x at LATC : 4) is
   pragma inline
end procedure
--
var volatile bit    LATC_LATC3                shared at LATC : 3
var volatile bit    pin_C3                    shared at PORTC : 3
alias               pin_SCK                          is pin_C3
alias               pin_SCL                          is pin_C3
alias               pin_SEG17                        is pin_C3
--
procedure pin_C3'put(bit in x at LATC : 3) is
   pragma inline
end procedure
--
var volatile bit    LATC_LATC2                shared at LATC : 2
var volatile bit    pin_C2                    shared at PORTC : 2
alias               pin_CCP1                         is pin_C2
alias               pin_SEG13                        is pin_C2
--
procedure pin_C2'put(bit in x at LATC : 2) is
   pragma inline
end procedure
--
var volatile bit    LATC_LATC1                shared at LATC : 1
var volatile bit    pin_C1                    shared at PORTC : 1
alias               pin_T1OSI                        is pin_C1
alias               pin_CCP2_RC1                     is pin_C1
--
procedure pin_C1'put(bit in x at LATC : 1) is
   pragma inline
end procedure
--
var volatile bit    LATC_LATC0                shared at LATC : 0
var volatile bit    pin_C0                    shared at PORTC : 0
alias               pin_T1OSO                        is pin_C0
alias               pin_T13CKI                       is pin_C0
--
procedure pin_C0'put(bit in x at LATC : 0) is
   pragma inline
end procedure
--
-- ------------------------------------------------
var volatile byte   LATD                      shared at 0xF8C
--
procedure PORTD'put(byte in x at LATD) is
   pragma inline
end procedure
--
procedure PORTD_low'put(byte in x) is
   pragma inline
   LATD = (LATD & 0xF0) | (x & 0x0F)
end procedure
function PORTD_low'get() return byte is
   pragma inline
   return (PORTD & 0x0F)
end function
--
procedure PORTD_high'put(byte in x) is
   pragma inline
   LATD = (LATD & 0x0F) | (x << 4)
end procedure
function PORTD_high'get() return byte is
   pragma inline
   return (PORTD >> 4)
end function
--
var volatile bit    LATD_LATD7                shared at LATD : 7
var volatile bit    pin_D7                    shared at PORTD : 7
alias               pin_SEG7                         is pin_D7
--
procedure pin_D7'put(bit in x at LATD : 7) is
   pragma inline
end procedure
--
var volatile bit    LATD_LATD6                shared at LATD : 6
var volatile bit    pin_D6                    shared at PORTD : 6
alias               pin_SEG6                         is pin_D6
--
procedure pin_D6'put(bit in x at LATD : 6) is
   pragma inline
end procedure
--
var volatile bit    LATD_LATD5                shared at LATD : 5
var volatile bit    pin_D5                    shared at PORTD : 5
alias               pin_SEG5                         is pin_D5
--
procedure pin_D5'put(bit in x at LATD : 5) is
   pragma inline
end procedure
--
var volatile bit    LATD_LATD4                shared at LATD : 4
var volatile bit    pin_D4                    shared at PORTD : 4
alias               pin_SEG4                         is pin_D4
--
procedure pin_D4'put(bit in x at LATD : 4) is
   pragma inline
end procedure
--
var volatile bit    LATD_LATD3                shared at LATD : 3
var volatile bit    pin_D3                    shared at PORTD : 3
alias               pin_SEG3                         is pin_D3
--
procedure pin_D3'put(bit in x at LATD : 3) is
   pragma inline
end procedure
--
var volatile bit    LATD_LATD2                shared at LATD : 2
var volatile bit    pin_D2                    shared at PORTD : 2
alias               pin_SEG2                         is pin_D2
--
procedure pin_D2'put(bit in x at LATD : 2) is
   pragma inline
end procedure
--
var volatile bit    LATD_LATD1                shared at LATD : 1
var volatile bit    pin_D1                    shared at PORTD : 1
alias               pin_SEG1                         is pin_D1
--
procedure pin_D1'put(bit in x at LATD : 1) is
   pragma inline
end procedure
--
var volatile bit    LATD_LATD0                shared at LATD : 0
var volatile bit    pin_D0                    shared at PORTD : 0
alias               pin_SEG0                         is pin_D0
alias               pin_CTPLS                        is pin_D0
--
procedure pin_D0'put(bit in x at LATD : 0) is
   pragma inline
end procedure
--
-- ------------------------------------------------
var volatile byte   LATE                      shared at 0xF8D
--
procedure PORTE'put(byte in x at LATE) is
   pragma inline
end procedure
--
procedure PORTE_low'put(byte in x) is
   pragma inline
   LATE = (LATE & 0xF0) | (x & 0x0F)
end procedure
function PORTE_low'get() return byte is
   pragma inline
   return (PORTE & 0x0F)
end function
--
procedure PORTE_high'put(byte in x) is
   pragma inline
   LATE = (LATE & 0x0F) | (x << 4)
end procedure
function PORTE_high'get() return byte is
   pragma inline
   return (PORTE >> 4)
end function
--
var volatile bit    LATE_LATE7                shared at LATE : 7
var volatile bit    pin_E7                    shared at PORTE : 7
alias               pin_CCP2_RE7                     is pin_E7
--
procedure pin_E7'put(bit in x at LATE : 7) is
   pragma inline
end procedure
--
var volatile bit    LATE_LATE6                shared at LATE : 6
var volatile bit    pin_E6                    shared at PORTE : 6
alias               pin_COM3                         is pin_E6
--
procedure pin_E6'put(bit in x at LATE : 6) is
   pragma inline
end procedure
--
var volatile bit    LATE_LATE5                shared at LATE : 5
var volatile bit    pin_E5                    shared at PORTE : 5
alias               pin_COM2                         is pin_E5
--
procedure pin_E5'put(bit in x at LATE : 5) is
   pragma inline
end procedure
--
var volatile bit    LATE_LATE4                shared at LATE : 4
var volatile bit    pin_E4                    shared at PORTE : 4
alias               pin_COM1                         is pin_E4
--
procedure pin_E4'put(bit in x at LATE : 4) is
   pragma inline
end procedure
--
var volatile bit    LATE_LATE3                shared at LATE : 3
var volatile bit    pin_E3                    shared at PORTE : 3
alias               pin_COM0                         is pin_E3
--
procedure pin_E3'put(bit in x at LATE : 3) is
   pragma inline
end procedure
--
var volatile bit    LATE_LATE1                shared at LATE : 1
var volatile bit    pin_E1                    shared at PORTE : 1
alias               pin_LCDBIAS2                     is pin_E1
--
procedure pin_E1'put(bit in x at LATE : 1) is
   pragma inline
end procedure
--
var volatile bit    LATE_LATE0                shared at LATE : 0
var volatile bit    pin_E0                    shared at PORTE : 0
alias               pin_LCDBIAS1                     is pin_E0
--
procedure pin_E0'put(bit in x at LATE : 0) is
   pragma inline
end procedure
--
-- ------------------------------------------------
var volatile byte   LATF                      shared at 0xF8E
--
procedure PORTF'put(byte in x at LATF) is
   pragma inline
end procedure
--
procedure PORTF_low'put(byte in x) is
   pragma inline
   LATF = (LATF & 0xF0) | (x & 0x0F)
end procedure
function PORTF_low'get() return byte is
   pragma inline
   return (PORTF & 0x0F)
end function
--
procedure PORTF_high'put(byte in x) is
   pragma inline
   LATF = (LATF & 0x0F) | (x << 4)
end procedure
function PORTF_high'get() return byte is
   pragma inline
   return (PORTF >> 4)
end function
--
var volatile bit    LATF_LATF7                shared at LATF : 7
var volatile bit    pin_F7                    shared at PORTF : 7
alias               pin_AN5                          is pin_F7
alias               pin_SS                           is pin_F7
alias               pin_SEG25                        is pin_F7
--
procedure pin_F7'put(bit in x at LATF : 7) is
   pragma inline
end procedure
--
var volatile bit    LATF_LATF6                shared at LATF : 6
var volatile bit    pin_F6                    shared at PORTF : 6
alias               pin_AN11                         is pin_F6
alias               pin_SEG24                        is pin_F6
alias               pin_C1INA                        is pin_F6
--
procedure pin_F6'put(bit in x at LATF : 6) is
   pragma inline
end procedure
--
var volatile bit    LATF_LATF5                shared at LATF : 5
var volatile bit    pin_F5                    shared at PORTF : 5
alias               pin_AN10                         is pin_F5
alias               pin_CVREF                        is pin_F5
alias               pin_SEG23                        is pin_F5
alias               pin_C1INB                        is pin_F5
--
procedure pin_F5'put(bit in x at LATF : 5) is
   pragma inline
end procedure
--
var volatile bit    LATF_LATF4                shared at LATF : 4
var volatile bit    pin_F4                    shared at PORTF : 4
alias               pin_AN9                          is pin_F4
alias               pin_SEG22                        is pin_F4
alias               pin_C2INA                        is pin_F4
--
procedure pin_F4'put(bit in x at LATF : 4) is
   pragma inline
end procedure
--
var volatile bit    LATF_LATF3                shared at LATF : 3
var volatile bit    pin_F3                    shared at PORTF : 3
alias               pin_AN8                          is pin_F3
alias               pin_SEG21                        is pin_F3
alias               pin_C2INB                        is pin_F3
--
procedure pin_F3'put(bit in x at LATF : 3) is
   pragma inline
end procedure
--
var volatile bit    LATF_LATF2                shared at LATF : 2
var volatile bit    pin_F2                    shared at PORTF : 2
alias               pin_AN7                          is pin_F2
alias               pin_C1OUT                        is pin_F2
alias               pin_SEG20                        is pin_F2
--
procedure pin_F2'put(bit in x at LATF : 2) is
   pragma inline
end procedure
--
var volatile bit    LATF_LATF1                shared at LATF : 1
var volatile bit    pin_F1                    shared at PORTF : 1
alias               pin_AN6                          is pin_F1
alias               pin_C2OUT                        is pin_F1
alias               pin_SEG19                        is pin_F1
--
procedure pin_F1'put(bit in x at LATF : 1) is
   pragma inline
end procedure
--
-- ------------------------------------------------
var volatile byte   LATG                      shared at 0xF8F
--
procedure PORTG'put(byte in x at LATG) is
   pragma inline
end procedure
--
procedure PORTG_low'put(byte in x) is
   pragma inline
   LATG = (LATG & 0xF0) | (x & 0x0F)
end procedure
function PORTG_low'get() return byte is
   pragma inline
   return (PORTG & 0x0F)
end function
--
procedure PORTG_high'put(byte in x) is
   pragma inline
   LATG = (LATG & 0x0F) | (x << 4)
end procedure
function PORTG_high'get() return byte is
   pragma inline
   return (PORTG >> 4)
end function
--
var volatile bit    LATG_U2OD                 shared at LATG : 7
var volatile bit    LATG_U1OD                 shared at LATG : 6
var volatile bit    LATG_LATG4                shared at LATG : 4
var volatile bit    pin_G4                    shared at PORTG : 4
alias               pin_SEG26                        is pin_G4
alias               pin_RTCC                         is pin_G4
--
procedure pin_G4'put(bit in x at LATG : 4) is
   pragma inline
end procedure
--
var volatile bit    LATG_LATG3                shared at LATG : 3
var volatile bit    pin_G3                    shared at PORTG : 3
alias               pin_VLCAP2                       is pin_G3
--
procedure pin_G3'put(bit in x at LATG : 3) is
   pragma inline
end procedure
--
var volatile bit    LATG_LATG2                shared at LATG : 2
var volatile bit    pin_G2                    shared at PORTG : 2
alias               pin_RX2                          is pin_G2
alias               pin_DT2                          is pin_G2
alias               pin_VLCAP1                       is pin_G2
--
procedure pin_G2'put(bit in x at LATG : 2) is
   pragma inline
end procedure
--
var volatile bit    LATG_LATG1                shared at LATG : 1
var volatile bit    pin_G1                    shared at PORTG : 1
alias               pin_TX2                          is pin_G1
alias               pin_CK2                          is pin_G1
--
procedure pin_G1'put(bit in x at LATG : 1) is
   pragma inline
end procedure
--
var volatile bit    LATG_LATG0                shared at LATG : 0
var volatile bit    pin_G0                    shared at PORTG : 0
alias               pin_LCDBIAS0                     is pin_G0
--
procedure pin_G0'put(bit in x at LATG : 0) is
   pragma inline
end procedure
--
-- ------------------------------------------------
var volatile byte   TRISA                     shared at 0xF92
alias               PORTA_direction                  is TRISA
--
procedure PORTA_low_direction'put(byte in x) is
   pragma inline
   TRISA = (TRISA & 0xF0) | (x & 0x0F)
end procedure
function PORTA_low_direction'get() return byte is
   pragma inline
   return (TRISA & 0x0F)
end function
--
procedure PORTA_high_direction'put(byte in x) is
   pragma inline
   TRISA = (TRISA & 0x0F) | (x << 4)
end procedure
function PORTA_high_direction'get() return byte is
   pragma inline
   return (TRISA >> 4)
end function
--
var volatile bit    TRISA_TRISA7              shared at TRISA : 7
alias               pin_A7_direction                 is TRISA_TRISA7
--
var volatile bit    TRISA_TRISA6              shared at TRISA : 6
alias               pin_A6_direction                 is TRISA_TRISA6
--
var volatile bit    TRISA_TRISA5              shared at TRISA : 5
alias               pin_A5_direction                 is TRISA_TRISA5
alias               pin_AN4_direction                is pin_A5_direction
alias               pin_SEG15_direction              is pin_A5_direction
--
var volatile bit    TRISA_TRISA4              shared at TRISA : 4
alias               pin_A4_direction                 is TRISA_TRISA4
alias               pin_T0CKI_direction              is pin_A4_direction
alias               pin_SEG14_direction              is pin_A4_direction
--
var volatile bit    TRISA_TRISA3              shared at TRISA : 3
alias               pin_A3_direction                 is TRISA_TRISA3
alias               pin_AN3_direction                is pin_A3_direction
alias               pin_VREF_POS_direction           is pin_A3_direction
--
var volatile bit    TRISA_TRISA2              shared at TRISA : 2
alias               pin_A2_direction                 is TRISA_TRISA2
alias               pin_AN2_direction                is pin_A2_direction
alias               pin_VREF_NEG_direction           is pin_A2_direction
--
var volatile bit    TRISA_TRISA1              shared at TRISA : 1
alias               pin_A1_direction                 is TRISA_TRISA1
alias               pin_AN1_direction                is pin_A1_direction
alias               pin_SEG18_direction              is pin_A1_direction
--
var volatile bit    TRISA_TRISA0              shared at TRISA : 0
alias               pin_A0_direction                 is TRISA_TRISA0
alias               pin_AN0_direction                is pin_A0_direction
--
-- ------------------------------------------------
var volatile byte   TRISB                     shared at 0xF93
alias               PORTB_direction                  is TRISB
--
procedure PORTB_low_direction'put(byte in x) is
   pragma inline
   TRISB = (TRISB & 0xF0) | (x & 0x0F)
end procedure
function PORTB_low_direction'get() return byte is
   pragma inline
   return (TRISB & 0x0F)
end function
--
procedure PORTB_high_direction'put(byte in x) is
   pragma inline
   TRISB = (TRISB & 0x0F) | (x << 4)
end procedure
function PORTB_high_direction'get() return byte is
   pragma inline
   return (TRISB >> 4)
end function
--
var volatile bit    TRISB_TRISB7              shared at TRISB : 7
alias               pin_B7_direction                 is TRISB_TRISB7
alias               pin_KBI3_direction               is pin_B7_direction
alias               pin_PGD_direction                is pin_B7_direction
--
var volatile bit    TRISB_TRISB6              shared at TRISB : 6
alias               pin_B6_direction                 is TRISB_TRISB6
alias               pin_KBI2_direction               is pin_B6_direction
alias               pin_PGC_direction                is pin_B6_direction
--
var volatile bit    TRISB_TRISB5              shared at TRISB : 5
alias               pin_B5_direction                 is TRISB_TRISB5
alias               pin_KBI1_direction               is pin_B5_direction
alias               pin_SEG29_direction              is pin_B5_direction
--
var volatile bit    TRISB_TRISB4              shared at TRISB : 4
alias               pin_B4_direction                 is TRISB_TRISB4
alias               pin_KBI0_direction               is pin_B4_direction
alias               pin_SEG11_direction              is pin_B4_direction
--
var volatile bit    TRISB_TRISB3              shared at TRISB : 3
alias               pin_B3_direction                 is TRISB_TRISB3
alias               pin_INT3_direction               is pin_B3_direction
alias               pin_SEG10_direction              is pin_B3_direction
alias               pin_CTED2_direction              is pin_B3_direction
--
var volatile bit    TRISB_TRISB2              shared at TRISB : 2
alias               pin_B2_direction                 is TRISB_TRISB2
alias               pin_INT2_direction               is pin_B2_direction
alias               pin_SEG9_direction               is pin_B2_direction
alias               pin_CTED1_direction              is pin_B2_direction
--
var volatile bit    TRISB_TRISB1              shared at TRISB : 1
alias               pin_B1_direction                 is TRISB_TRISB1
alias               pin_INT1_direction               is pin_B1_direction
alias               pin_SEG8_direction               is pin_B1_direction
--
var volatile bit    TRISB_TRISB0              shared at TRISB : 0
alias               pin_B0_direction                 is TRISB_TRISB0
alias               pin_INT0_direction               is pin_B0_direction
alias               pin_SEG30_direction              is pin_B0_direction
--
-- ------------------------------------------------
var volatile byte   TRISC                     shared at 0xF94
alias               PORTC_direction                  is TRISC
--
procedure PORTC_low_direction'put(byte in x) is
   pragma inline
   TRISC = (TRISC & 0xF0) | (x & 0x0F)
end procedure
function PORTC_low_direction'get() return byte is
   pragma inline
   return (TRISC & 0x0F)
end function
--
procedure PORTC_high_direction'put(byte in x) is
   pragma inline
   TRISC = (TRISC & 0x0F) | (x << 4)
end procedure
function PORTC_high_direction'get() return byte is
   pragma inline
   return (TRISC >> 4)
end function
--
var volatile bit    TRISC_TRISC7              shared at TRISC : 7
alias               pin_C7_direction                 is TRISC_TRISC7
alias               pin_RX1_direction                is pin_C7_direction
alias               pin_RX_direction                 is pin_C7_direction
alias               pin_DT1_direction                is pin_C7_direction
alias               pin_SEG28_direction              is pin_C7_direction
--
var volatile bit    TRISC_TRISC6              shared at TRISC : 6
alias               pin_C6_direction                 is TRISC_TRISC6
alias               pin_TX1_direction                is pin_C6_direction
alias               pin_TX_direction                 is pin_C6_direction
alias               pin_CK1_direction                is pin_C6_direction
alias               pin_SEG27_direction              is pin_C6_direction
--
var volatile bit    TRISC_TRISC5              shared at TRISC : 5
alias               pin_C5_direction                 is TRISC_TRISC5
alias               pin_SDO_direction                is pin_C5_direction
alias               pin_SEG12_direction              is pin_C5_direction
--
var volatile bit    TRISC_TRISC4              shared at TRISC : 4
alias               pin_C4_direction                 is TRISC_TRISC4
alias               pin_SDI_direction                is pin_C4_direction
alias               pin_SDA_direction                is pin_C4_direction
alias               pin_SEG16_direction              is pin_C4_direction
--
var volatile bit    TRISC_TRISC3              shared at TRISC : 3
alias               pin_C3_direction                 is TRISC_TRISC3
alias               pin_SCK_direction                is pin_C3_direction
alias               pin_SCL_direction                is pin_C3_direction
alias               pin_SEG17_direction              is pin_C3_direction
--
var volatile bit    TRISC_TRISC2              shared at TRISC : 2
alias               pin_C2_direction                 is TRISC_TRISC2
alias               pin_CCP1_direction               is pin_C2_direction
alias               pin_SEG13_direction              is pin_C2_direction
--
var volatile bit    TRISC_TRISC1              shared at TRISC : 1
alias               pin_C1_direction                 is TRISC_TRISC1
alias               pin_T1OSI_direction              is pin_C1_direction
alias               pin_CCP2_RC1_direction           is pin_C1_direction
--
var volatile bit    TRISC_TRISC0              shared at TRISC : 0
alias               pin_C0_direction                 is TRISC_TRISC0
alias               pin_T1OSO_direction              is pin_C0_direction
alias               pin_T13CKI_direction             is pin_C0_direction
--
-- ------------------------------------------------
var volatile byte   TRISD                     shared at 0xF95
alias               PORTD_direction                  is TRISD
--
procedure PORTD_low_direction'put(byte in x) is
   pragma inline
   TRISD = (TRISD & 0xF0) | (x & 0x0F)
end procedure
function PORTD_low_direction'get() return byte is
   pragma inline
   return (TRISD & 0x0F)
end function
--
procedure PORTD_high_direction'put(byte in x) is
   pragma inline
   TRISD = (TRISD & 0x0F) | (x << 4)
end procedure
function PORTD_high_direction'get() return byte is
   pragma inline
   return (TRISD >> 4)
end function
--
var volatile bit    TRISD_TRISD7              shared at TRISD : 7
alias               pin_D7_direction                 is TRISD_TRISD7
alias               pin_SEG7_direction               is pin_D7_direction
--
var volatile bit    TRISD_TRISD6              shared at TRISD : 6
alias               pin_D6_direction                 is TRISD_TRISD6
alias               pin_SEG6_direction               is pin_D6_direction
--
var volatile bit    TRISD_TRISD5              shared at TRISD : 5
alias               pin_D5_direction                 is TRISD_TRISD5
alias               pin_SEG5_direction               is pin_D5_direction
--
var volatile bit    TRISD_TRISD4              shared at TRISD : 4
alias               pin_D4_direction                 is TRISD_TRISD4
alias               pin_SEG4_direction               is pin_D4_direction
--
var volatile bit    TRISD_TRISD3              shared at TRISD : 3
alias               pin_D3_direction                 is TRISD_TRISD3
alias               pin_SEG3_direction               is pin_D3_direction
--
var volatile bit    TRISD_TRISD2              shared at TRISD : 2
alias               pin_D2_direction                 is TRISD_TRISD2
alias               pin_SEG2_direction               is pin_D2_direction
--
var volatile bit    TRISD_TRISD1              shared at TRISD : 1
alias               pin_D1_direction                 is TRISD_TRISD1
alias               pin_SEG1_direction               is pin_D1_direction
--
var volatile bit    TRISD_TRISD0              shared at TRISD : 0
alias               pin_D0_direction                 is TRISD_TRISD0
alias               pin_SEG0_direction               is pin_D0_direction
alias               pin_CTPLS_direction              is pin_D0_direction
--
-- ------------------------------------------------
var volatile byte   TRISE                     shared at 0xF96
alias               PORTE_direction                  is TRISE
--
procedure PORTE_low_direction'put(byte in x) is
   pragma inline
   TRISE = (TRISE & 0xF0) | (x & 0x0F)
end procedure
function PORTE_low_direction'get() return byte is
   pragma inline
   return (TRISE & 0x0F)
end function
--
procedure PORTE_high_direction'put(byte in x) is
   pragma inline
   TRISE = (TRISE & 0x0F) | (x << 4)
end procedure
function PORTE_high_direction'get() return byte is
   pragma inline
   return (TRISE >> 4)
end function
--
var volatile bit    TRISE_TRISE7              shared at TRISE : 7
alias               pin_E7_direction                 is TRISE_TRISE7
alias               pin_CCP2_RE7_direction           is pin_E7_direction
--
var volatile bit    TRISE_TRISE6              shared at TRISE : 6
alias               pin_E6_direction                 is TRISE_TRISE6
alias               pin_COM3_direction               is pin_E6_direction
--
var volatile bit    TRISE_TRISE5              shared at TRISE : 5
alias               pin_E5_direction                 is TRISE_TRISE5
alias               pin_COM2_direction               is pin_E5_direction
--
var volatile bit    TRISE_TRISE4              shared at TRISE : 4
alias               pin_E4_direction                 is TRISE_TRISE4
alias               pin_COM1_direction               is pin_E4_direction
--
var volatile bit    TRISE_TRISE3              shared at TRISE : 3
alias               pin_E3_direction                 is TRISE_TRISE3
alias               pin_COM0_direction               is pin_E3_direction
--
var volatile bit    TRISE_TRISE1              shared at TRISE : 1
alias               pin_E1_direction                 is TRISE_TRISE1
alias               pin_LCDBIAS2_direction           is pin_E1_direction
--
var volatile bit    TRISE_TRISE0              shared at TRISE : 0
alias               pin_E0_direction                 is TRISE_TRISE0
alias               pin_LCDBIAS1_direction           is pin_E0_direction
--
-- ------------------------------------------------
var volatile byte   TRISF                     shared at 0xF97
alias               PORTF_direction                  is TRISF
--
procedure PORTF_low_direction'put(byte in x) is
   pragma inline
   TRISF = (TRISF & 0xF0) | (x & 0x0F)
end procedure
function PORTF_low_direction'get() return byte is
   pragma inline
   return (TRISF & 0x0F)
end function
--
procedure PORTF_high_direction'put(byte in x) is
   pragma inline
   TRISF = (TRISF & 0x0F) | (x << 4)
end procedure
function PORTF_high_direction'get() return byte is
   pragma inline
   return (TRISF >> 4)
end function
--
var volatile bit    TRISF_TRISF7              shared at TRISF : 7
alias               pin_F7_direction                 is TRISF_TRISF7
alias               pin_AN5_direction                is pin_F7_direction
alias               pin_SS_direction                 is pin_F7_direction
alias               pin_SEG25_direction              is pin_F7_direction
--
var volatile bit    TRISF_TRISF6              shared at TRISF : 6
alias               pin_F6_direction                 is TRISF_TRISF6
alias               pin_AN11_direction               is pin_F6_direction
alias               pin_SEG24_direction              is pin_F6_direction
alias               pin_C1INA_direction              is pin_F6_direction
--
var volatile bit    TRISF_TRISF5              shared at TRISF : 5
alias               pin_F5_direction                 is TRISF_TRISF5
alias               pin_AN10_direction               is pin_F5_direction
alias               pin_CVREF_direction              is pin_F5_direction
alias               pin_SEG23_direction              is pin_F5_direction
alias               pin_C1INB_direction              is pin_F5_direction
--
var volatile bit    TRISF_TRISF4              shared at TRISF : 4
alias               pin_F4_direction                 is TRISF_TRISF4
alias               pin_AN9_direction                is pin_F4_direction
alias               pin_SEG22_direction              is pin_F4_direction
alias               pin_C2INA_direction              is pin_F4_direction
--
var volatile bit    TRISF_TRISF3              shared at TRISF : 3
alias               pin_F3_direction                 is TRISF_TRISF3
alias               pin_AN8_direction                is pin_F3_direction
alias               pin_SEG21_direction              is pin_F3_direction
alias               pin_C2INB_direction              is pin_F3_direction
--
var volatile bit    TRISF_TRISF2              shared at TRISF : 2
alias               pin_F2_direction                 is TRISF_TRISF2
alias               pin_AN7_direction                is pin_F2_direction
alias               pin_C1OUT_direction              is pin_F2_direction
alias               pin_SEG20_direction              is pin_F2_direction
--
var volatile bit    TRISF_TRISF1              shared at TRISF : 1
alias               pin_F1_direction                 is TRISF_TRISF1
alias               pin_AN6_direction                is pin_F1_direction
alias               pin_C2OUT_direction              is pin_F1_direction
alias               pin_SEG19_direction              is pin_F1_direction
--
-- ------------------------------------------------
var volatile byte   TRISG                     shared at 0xF98
alias               PORTG_direction                  is TRISG
--
procedure PORTG_low_direction'put(byte in x) is
   pragma inline
   TRISG = (TRISG & 0xF0) | (x & 0x0F)
end procedure
function PORTG_low_direction'get() return byte is
   pragma inline
   return (TRISG & 0x0F)
end function
--
procedure PORTG_high_direction'put(byte in x) is
   pragma inline
   TRISG = (TRISG & 0x0F) | (x << 4)
end procedure
function PORTG_high_direction'get() return byte is
   pragma inline
   return (TRISG >> 4)
end function
--
var volatile bit    TRISG_SPIOD               shared at TRISG : 7
var volatile bit    TRISG_CCP2OD              shared at TRISG : 6
var volatile bit    TRISG_CCP1OD              shared at TRISG : 5
var volatile bit    TRISG_TRISG4              shared at TRISG : 4
alias               pin_G4_direction                 is TRISG_TRISG4
alias               pin_SEG26_direction              is pin_G4_direction
alias               pin_RTCC_direction               is pin_G4_direction
--
var volatile bit    TRISG_TRISG3              shared at TRISG : 3
alias               pin_G3_direction                 is TRISG_TRISG3
alias               pin_VLCAP2_direction             is pin_G3_direction
--
var volatile bit    TRISG_TRISG2              shared at TRISG : 2
alias               pin_G2_direction                 is TRISG_TRISG2
alias               pin_RX2_direction                is pin_G2_direction
alias               pin_DT2_direction                is pin_G2_direction
alias               pin_VLCAP1_direction             is pin_G2_direction
--
var volatile bit    TRISG_TRISG1              shared at TRISG : 1
alias               pin_G1_direction                 is TRISG_TRISG1
alias               pin_TX2_direction                is pin_G1_direction
alias               pin_CK2_direction                is pin_G1_direction
--
var volatile bit    TRISG_TRISG0              shared at TRISG : 0
alias               pin_G0_direction                 is TRISG_TRISG0
alias               pin_LCDBIAS0_direction           is pin_G0_direction
--
-- ------------------------------------------------
var volatile byte   OSCTUNE                   shared at 0xF9B
var volatile bit    OSCTUNE_INTSRC            shared at OSCTUNE : 7
var volatile bit    OSCTUNE_PLLEN             shared at OSCTUNE : 6
var volatile bit*6  OSCTUNE_TUN               shared at OSCTUNE : 0
-- ------------------------------------------------
var volatile byte   PIE1                      shared at 0xF9D
var volatile bit    PIE1_ADIE                 shared at PIE1 : 6
var volatile bit    PIE1_RC1IE                shared at PIE1 : 5
alias               PIE1_RCIE                        is PIE1_RC1IE
var volatile bit    PIE1_TX1IE                shared at PIE1 : 4
alias               PIE1_TXIE                        is PIE1_TX1IE
var volatile bit    PIE1_SSPIE                shared at PIE1 : 3
var volatile bit    PIE1_TMR2IE               shared at PIE1 : 1
var volatile bit    PIE1_TMR1IE               shared at PIE1 : 0
-- ------------------------------------------------
var volatile byte   PIR1                      shared at 0xF9E
var volatile bit    PIR1_ADIF                 shared at PIR1 : 6
var volatile bit    PIR1_RC1IF                shared at PIR1 : 5
alias               PIR1_RCIF                        is PIR1_RC1IF
var volatile bit    PIR1_TX1IF                shared at PIR1 : 4
alias               PIR1_TXIF                        is PIR1_TX1IF
var volatile bit    PIR1_SSPIF                shared at PIR1 : 3
var volatile bit    PIR1_TMR2IF               shared at PIR1 : 1
var volatile bit    PIR1_TMR1IF               shared at PIR1 : 0
-- ------------------------------------------------
var volatile byte   IPR1                      shared at 0xF9F
var volatile bit    IPR1_ADIP                 shared at IPR1 : 6
var volatile bit    IPR1_RC1IP                shared at IPR1 : 5
alias               IPR1_RCIP                        is IPR1_RC1IP
var volatile bit    IPR1_TX1IP                shared at IPR1 : 4
alias               IPR1_TXIP                        is IPR1_TX1IP
var volatile bit    IPR1_SSPIP                shared at IPR1 : 3
var volatile bit    IPR1_TMR2IP               shared at IPR1 : 1
var volatile bit    IPR1_TMR1IP               shared at IPR1 : 0
-- ------------------------------------------------
var volatile byte   PIE2                      shared at 0xFA0
var volatile bit    PIE2_OSCFIE               shared at PIE2 : 7
var volatile bit    PIE2_CMIE                 shared at PIE2 : 6
var volatile bit    PIE2_BCLIE                shared at PIE2 : 3
var volatile bit    PIE2_LVDIE                shared at PIE2 : 2
var volatile bit    PIE2_TMR3IE               shared at PIE2 : 1
-- ------------------------------------------------
var volatile byte   PIR2                      shared at 0xFA1
var volatile bit    PIR2_OSCFIF               shared at PIR2 : 7
var volatile bit    PIR2_CMIF                 shared at PIR2 : 6
var volatile bit    PIR2_BCLIF                shared at PIR2 : 3
var volatile bit    PIR2_LVDIF                shared at PIR2 : 2
var volatile bit    PIR2_TMR3IF               shared at PIR2 : 1
-- ------------------------------------------------
var volatile byte   IPR2                      shared at 0xFA2
var volatile bit    IPR2_OSCFIP               shared at IPR2 : 7
var volatile bit    IPR2_CMIP                 shared at IPR2 : 6
var volatile bit    IPR2_BCLIP                shared at IPR2 : 3
var volatile bit    IPR2_LVDIP                shared at IPR2 : 2
var volatile bit    IPR2_TMR3IP               shared at IPR2 : 1
-- ------------------------------------------------
var volatile byte   PIE3                      shared at 0xFA3
var volatile bit    PIE3_LCDIE                shared at PIE3 : 6
var volatile bit    PIE3_RC2IE                shared at PIE3 : 5
alias               PIE3_RCIE2                       is PIE3_RC2IE
var volatile bit    PIE3_TX2IE                shared at PIE3 : 4
alias               PIE3_TXIE2                       is PIE3_TX2IE
var volatile bit    PIE3_CTMUIE               shared at PIE3 : 3
var volatile bit    PIE3_CCP2IE               shared at PIE3 : 2
var volatile bit    PIE3_CCP1IE               shared at PIE3 : 1
var volatile bit    PIE3_RTCCIE               shared at PIE3 : 0
-- ------------------------------------------------
var volatile byte   PIR3                      shared at 0xFA4
var volatile bit    PIR3_LCDIF                shared at PIR3 : 6
var volatile bit    PIR3_RC2IF                shared at PIR3 : 5
alias               PIR3_RCIF2                       is PIR3_RC2IF
var volatile bit    PIR3_TX2IF                shared at PIR3 : 4
alias               PIR3_TXIF2                       is PIR3_TX2IF
var volatile bit    PIR3_CTMUIF               shared at PIR3 : 3
var volatile bit    PIR3_CCP2IF               shared at PIR3 : 2
var volatile bit    PIR3_CCP1IF               shared at PIR3 : 1
var volatile bit    PIR3_RTCCIF               shared at PIR3 : 0
-- ------------------------------------------------
var volatile byte   IPR3                      shared at 0xFA5
var volatile bit    IPR3_LCDIP                shared at IPR3 : 6
var volatile bit    IPR3_RC2IP                shared at IPR3 : 5
alias               IPR3_RCIP2                       is IPR3_RC2IP
var volatile bit    IPR3_TX2IP                shared at IPR3 : 4
alias               IPR3_TXIP2                       is IPR3_TX2IP
var volatile bit    IPR3_CTMUIP               shared at IPR3 : 3
var volatile bit    IPR3_CCP2IP               shared at IPR3 : 2
var volatile bit    IPR3_CCP1IP               shared at IPR3 : 1
var volatile bit    IPR3_RTCCIP               shared at IPR3 : 0
-- ------------------------------------------------
var volatile byte   EECON1                    shared at 0xFA6
var volatile bit    EECON1_WPROG              shared at EECON1 : 5
var volatile bit    EECON1_FREE               shared at EECON1 : 4
var volatile bit    EECON1_WRERR              shared at EECON1 : 3
var volatile bit    EECON1_WREN               shared at EECON1 : 2
var volatile bit    EECON1_WR                 shared at EECON1 : 1
-- ------------------------------------------------
var volatile byte   EECON2                    shared at 0xFA7
-- ------------------------------------------------
var volatile byte   LCDCON                    shared at 0xFA8
var volatile bit    LCDCON_LCDEN              shared at LCDCON : 7
var volatile bit    LCDCON_SLPEN              shared at LCDCON : 6
var volatile bit    LCDCON_WERR               shared at LCDCON : 5
var volatile bit    LCDCON_CS1                shared at LCDCON : 3
var volatile bit    LCDCON_CS0                shared at LCDCON : 2
var volatile bit    LCDCON_LMUX1              shared at LCDCON : 1
var volatile bit    LCDCON_LMUX0              shared at LCDCON : 0
-- ------------------------------------------------
var volatile byte   LCDSE0                    shared at 0xFA9
-- ------------------------------------------------
var volatile byte   LCDPS                     shared at 0xFAA
var volatile bit    LCDPS_WFT                 shared at LCDPS : 7
var volatile bit    LCDPS_BIASMD              shared at LCDPS : 6
var volatile bit    LCDPS_LCDA                shared at LCDPS : 5
var volatile bit    LCDPS_WA                  shared at LCDPS : 4
var volatile bit    LCDPS_LP3                 shared at LCDPS : 3
var volatile bit    LCDPS_LP2                 shared at LCDPS : 2
var volatile bit    LCDPS_LP1                 shared at LCDPS : 1
var volatile bit    LCDPS_LP0                 shared at LCDPS : 0
-- ------------------------------------------------
var volatile byte   RCSTA1                    shared at 0xFAB
var volatile bit    RCSTA1_SPEN               shared at RCSTA1 : 7
var volatile bit    RCSTA1_RX9                shared at RCSTA1 : 6
var volatile bit    RCSTA1_SREN               shared at RCSTA1 : 5
var volatile bit    RCSTA1_CREN               shared at RCSTA1 : 4
var volatile bit    RCSTA1_ADDEN              shared at RCSTA1 : 3
var volatile bit    RCSTA1_FERR               shared at RCSTA1 : 2
var volatile bit    RCSTA1_OERR               shared at RCSTA1 : 1
var volatile bit    RCSTA1_RX9D               shared at RCSTA1 : 0
--
alias               RCSTA                            is RCSTA1
alias               RCSTA_SPEN                       is RCSTA1_SPEN
alias               RCSTA_RX9                        is RCSTA1_RX9
alias               RCSTA_SREN                       is RCSTA1_SREN
alias               RCSTA_CREN                       is RCSTA1_CREN
alias               RCSTA_ADDEN                      is RCSTA1_ADDEN
alias               RCSTA_FERR                       is RCSTA1_FERR
alias               RCSTA_OERR                       is RCSTA1_OERR
alias               RCSTA_RX9D                       is RCSTA1_RX9D
-- ------------------------------------------------
var volatile byte   TXSTA1                    shared at 0xFAC
var volatile bit    TXSTA1_CSRC               shared at TXSTA1 : 7
var volatile bit    TXSTA1_TX9                shared at TXSTA1 : 6
var volatile bit    TXSTA1_TXEN               shared at TXSTA1 : 5
var volatile bit    TXSTA1_SYNC               shared at TXSTA1 : 4
var volatile bit    TXSTA1_SENDB              shared at TXSTA1 : 3
var volatile bit    TXSTA1_BRGH               shared at TXSTA1 : 2
var volatile bit    TXSTA1_TRMT               shared at TXSTA1 : 1
var volatile bit    TXSTA1_TX9D               shared at TXSTA1 : 0
--
alias               TXSTA                            is TXSTA1
alias               TXSTA_CSRC                       is TXSTA1_CSRC
alias               TXSTA_TX9                        is TXSTA1_TX9
alias               TXSTA_TXEN                       is TXSTA1_TXEN
alias               TXSTA_SYNC                       is TXSTA1_SYNC
alias               TXSTA_SENDB                      is TXSTA1_SENDB
alias               TXSTA_BRGH                       is TXSTA1_BRGH
alias               TXSTA_TRMT                       is TXSTA1_TRMT
alias               TXSTA_TX9D                       is TXSTA1_TX9D
-- ------------------------------------------------
var volatile byte   TXREG1                    shared at 0xFAD
--
alias               TXREG                            is TXREG1
-- ------------------------------------------------
var volatile byte   RCREG1                    shared at 0xFAE
--
alias               RCREG                            is RCREG1
-- ------------------------------------------------
var volatile byte   SPBRG1                    shared at 0xFAF
--
alias               SPBRG                            is SPBRG1
-- ------------------------------------------------
var volatile byte   T3CON                     shared at 0xFB1
var volatile bit    T3CON_RD16                shared at T3CON : 7
var volatile bit    T3CON_T3CCP2              shared at T3CON : 6
var volatile bit*2  T3CON_T3CKPS              shared at T3CON : 4
var volatile bit    T3CON_T3CCP1              shared at T3CON : 3
var volatile bit    T3CON_NT3SYNC             shared at T3CON : 2
var volatile bit    T3CON_TMR3CS              shared at T3CON : 1
var volatile bit    T3CON_TMR3ON              shared at T3CON : 0
-- ------------------------------------------------
var volatile word   TMR3                      shared at 0xFB2
-- ------------------------------------------------
var volatile byte   TMR3L                     shared at 0xFB2
-- ------------------------------------------------
var volatile byte   TMR3H                     shared at 0xFB3
-- ------------------------------------------------
var volatile byte   CMCON                     shared at 0xFB4
var volatile bit    CMCON_C2OUT               shared at CMCON : 7
var volatile bit    CMCON_C1OUT               shared at CMCON : 6
var volatile bit    CMCON_C2INV               shared at CMCON : 5
var volatile bit    CMCON_C1INV               shared at CMCON : 4
var volatile bit    CMCON_CIS                 shared at CMCON : 3
var volatile bit*3  CMCON_CM                  shared at CMCON : 0
-- ------------------------------------------------
var volatile byte   CVRCON                    shared at 0xFB5
var volatile bit    CVRCON_CVREN              shared at CVRCON : 7
var volatile bit    CVRCON_CVROE              shared at CVRCON : 6
var volatile bit    CVRCON_CVRR               shared at CVRCON : 5
var volatile bit    CVRCON_CVRSS              shared at CVRCON : 4
var volatile bit*4  CVRCON_CVR                shared at CVRCON : 0
-- ------------------------------------------------
var volatile byte   LCDSE1                    shared at 0xFB6
-- ------------------------------------------------
var volatile byte   LCDSE2                    shared at 0xFB7
-- ------------------------------------------------
var volatile byte   LCDSE3                    shared at 0xFB8
-- ------------------------------------------------
var volatile byte   LCDSE4                    shared at 0xFB9
-- ------------------------------------------------
var volatile byte   LCDDATA0                  shared at 0xFBB
-- ------------------------------------------------
var volatile byte   LCDDATA1                  shared at 0xFBC
-- ------------------------------------------------
var volatile byte   LCDDATA2                  shared at 0xFBD
-- ------------------------------------------------
var volatile byte   LCDDATA3                  shared at 0xFBE
-- ------------------------------------------------
var volatile byte   LCDDATA4                  shared at 0xFBF
-- ------------------------------------------------
var volatile byte   ADCON2                    shared at 0xFC0
var volatile bit    ADCON2_ADFM               shared at ADCON2 : 7
var volatile bit*3  ADCON2_ACQT               shared at ADCON2 : 3
var volatile bit*3  ADCON2_ADCS               shared at ADCON2 : 0
-- ------------------------------------------------
var volatile byte   ADCON1                    shared at 0xFC1
var volatile bit    ADCON1_TRIGSEL            shared at ADCON1 : 7
var volatile bit    ADCON1_VCFG1              shared at ADCON1 : 5
var volatile bit    ADCON1_VCFG0              shared at ADCON1 : 4
var volatile bit*2  ADCON1_VCFG               shared at ADCON1 : 4
var volatile bit*4  ADCON1_PCFG               shared at ADCON1 : 0
-- ------------------------------------------------
var volatile byte   ADCON0                    shared at 0xFC2
var volatile bit    ADCON0_ADCAL              shared at ADCON0 : 7
var volatile bit*4  ADCON0_CHS                shared at ADCON0 : 2
var volatile bit    ADCON0_GO                 shared at ADCON0 : 1
var volatile bit    ADCON0_NDONE              shared at ADCON0 : 1
var volatile bit    ADCON0_ADON               shared at ADCON0 : 0
-- ------------------------------------------------
var volatile word   ADRES                     shared at 0xFC3
-- ------------------------------------------------
var volatile byte   ADRESL                    shared at 0xFC3
-- ------------------------------------------------
var volatile byte   ADRESH                    shared at 0xFC4
-- ------------------------------------------------
var volatile byte   SSP1CON2                  shared at 0xFC5
var volatile bit    SSP1CON2_GCEN             shared at SSP1CON2 : 7
var volatile bit    SSP1CON2_ACKSTAT          shared at SSP1CON2 : 6
var volatile bit    SSP1CON2_ACKDT            shared at SSP1CON2 : 5
var volatile bit    SSP1CON2_ACKEN            shared at SSP1CON2 : 4
var volatile bit    SSP1CON2_RCEN             shared at SSP1CON2 : 3
var volatile bit    SSP1CON2_PEN              shared at SSP1CON2 : 2
var volatile bit    SSP1CON2_RSEN             shared at SSP1CON2 : 1
var volatile bit    SSP1CON2_SEN              shared at SSP1CON2 : 0
--
alias               SSPCON2                          is SSP1CON2
alias               SSPCON2_GCEN                     is SSP1CON2_GCEN
alias               SSPCON2_ACKSTAT                  is SSP1CON2_ACKSTAT
alias               SSPCON2_ACKDT                    is SSP1CON2_ACKDT
alias               SSPCON2_ACKEN                    is SSP1CON2_ACKEN
alias               SSPCON2_RCEN                     is SSP1CON2_RCEN
alias               SSPCON2_PEN                      is SSP1CON2_PEN
alias               SSPCON2_RSEN                     is SSP1CON2_RSEN
alias               SSPCON2_SEN                      is SSP1CON2_SEN
-- ------------------------------------------------
var volatile byte   SSP1CON1                  shared at 0xFC6
var volatile bit    SSP1CON1_WCOL             shared at SSP1CON1 : 7
var volatile bit    SSP1CON1_SSPOV            shared at SSP1CON1 : 6
var volatile bit    SSP1CON1_SSPEN            shared at SSP1CON1 : 5
var volatile bit    SSP1CON1_CKP              shared at SSP1CON1 : 4
var volatile bit*4  SSP1CON1_SSPM             shared at SSP1CON1 : 0
--
alias               SSPCON1                          is SSP1CON1
alias               SSPCON1_WCOL                     is SSP1CON1_WCOL
alias               SSPCON1_SSPOV                    is SSP1CON1_SSPOV
alias               SSPCON1_SSPEN                    is SSP1CON1_SSPEN
alias               SSPCON1_CKP                      is SSP1CON1_CKP
alias               SSPCON1_SSPM                     is SSP1CON1_SSPM
-- ------------------------------------------------
var volatile byte   SSP1STAT                  shared at 0xFC7
var volatile bit    SSP1STAT_SMP              shared at SSP1STAT : 7
var volatile bit    SSP1STAT_CKE              shared at SSP1STAT : 6
var volatile bit    SSP1STAT_D                shared at SSP1STAT : 5
var volatile bit    SSP1STAT_NA               shared at SSP1STAT : 5
var volatile bit    SSP1STAT_P                shared at SSP1STAT : 4
var volatile bit    SSP1STAT_S                shared at SSP1STAT : 3
var volatile bit    SSP1STAT_R                shared at SSP1STAT : 2
var volatile bit    SSP1STAT_NW               shared at SSP1STAT : 2
var volatile bit    SSP1STAT_UA               shared at SSP1STAT : 1
var volatile bit    SSP1STAT_BF               shared at SSP1STAT : 0
--
alias               SSPSTAT                          is SSP1STAT
alias               SSPSTAT_SMP                      is SSP1STAT_SMP
alias               SSPSTAT_CKE                      is SSP1STAT_CKE
alias               SSPSTAT_D                        is SSP1STAT_D
alias               SSPSTAT_NA                       is SSP1STAT_NA
alias               SSPSTAT_P                        is SSP1STAT_P
alias               SSPSTAT_S                        is SSP1STAT_S
alias               SSPSTAT_R                        is SSP1STAT_R
alias               SSPSTAT_NW                       is SSP1STAT_NW
alias               SSPSTAT_UA                       is SSP1STAT_UA
alias               SSPSTAT_BF                       is SSP1STAT_BF
-- ------------------------------------------------
var volatile byte   SSP1ADD                   shared at 0xFC8
--
alias               SSPADD                           is SSP1ADD
-- ------------------------------------------------
var volatile byte   SSP1BUF                   shared at 0xFC9
--
alias               SSPBUF                           is SSP1BUF
-- ------------------------------------------------
var volatile byte   T2CON                     shared at 0xFCA
var volatile bit*4  T2CON_T2OUTPS             shared at T2CON : 3
var volatile bit    T2CON_TMR2ON              shared at T2CON : 2
var volatile bit*2  T2CON_T2CKPS              shared at T2CON : 0
-- ------------------------------------------------
var volatile byte   PR2                       shared at 0xFCB
-- ------------------------------------------------
var volatile byte   TMR2                      shared at 0xFCC
-- ------------------------------------------------
var volatile byte   T1CON                     shared at 0xFCD
var volatile bit    T1CON_RD16                shared at T1CON : 7
var volatile bit    T1CON_T1RUN               shared at T1CON : 6
var volatile bit*2  T1CON_T1CKPS              shared at T1CON : 4
var volatile bit    T1CON_T1OSCEN             shared at T1CON : 3
var volatile bit    T1CON_NT1SYNC             shared at T1CON : 2
var volatile bit    T1CON_TMR1CS              shared at T1CON : 1
var volatile bit    T1CON_TMR1ON              shared at T1CON : 0
-- ------------------------------------------------
var volatile word   TMR1                      shared at 0xFCE
-- ------------------------------------------------
var volatile byte   TMR1L                     shared at 0xFCE
-- ------------------------------------------------
var volatile byte   TMR1H                     shared at 0xFCF
-- ------------------------------------------------
var volatile byte   RCON                      shared at 0xFD0
var volatile bit    RCON_IPEN                 shared at RCON : 7
var volatile bit    RCON_NCM                  shared at RCON : 5
var volatile bit    RCON_NRI                  shared at RCON : 4
var volatile bit    RCON_NTO                  shared at RCON : 3
var volatile bit    RCON_NPD                  shared at RCON : 2
var volatile bit    RCON_NPOR                 shared at RCON : 1
var volatile bit    RCON_NBOR                 shared at RCON : 0
-- ------------------------------------------------
var volatile byte   WDTCON                    shared at 0xFD1
var volatile bit    WDTCON_REGSLP             shared at WDTCON : 7
var volatile bit    WDTCON_SWDTEN             shared at WDTCON : 0
-- ------------------------------------------------
var volatile byte   LCDREG                    shared at 0xFD2
var volatile bit    LCDREG_CPEN               shared at LCDREG : 6
var volatile bit*3  LCDREG_BIAS               shared at LCDREG : 3
var volatile bit    LCDREG_MODE13             shared at LCDREG : 2
var volatile bit*2  LCDREG_CKSEL              shared at LCDREG : 0
-- ------------------------------------------------
var volatile byte   OSCCON                    shared at 0xFD3
var volatile bit    OSCCON_IDLEN              shared at OSCCON : 7
var volatile bit*3  OSCCON_IRCF               shared at OSCCON : 4
var volatile bit    OSCCON_OSTS               shared at OSCCON : 3
var volatile bit    OSCCON_IOFS               shared at OSCCON : 2
var volatile bit*2  OSCCON_SCS                shared at OSCCON : 0
-- ------------------------------------------------
var volatile byte   T0CON                     shared at 0xFD5
var volatile bit    T0CON_TMR0ON              shared at T0CON : 7
var volatile bit    T0CON_T08BIT              shared at T0CON : 6
var volatile bit    T0CON_T0CS                shared at T0CON : 5
var volatile bit    T0CON_T0SE                shared at T0CON : 4
var volatile bit    T0CON_PSA                 shared at T0CON : 3
var volatile bit*3  T0CON_T0PS                shared at T0CON : 0
-- ------------------------------------------------
var volatile word   TMR0                      shared at 0xFD6
-- ------------------------------------------------
var volatile byte   TMR0L                     shared at 0xFD6
-- ------------------------------------------------
var volatile byte   TMR0H                     shared at 0xFD7
-- ------------------------------------------------
var volatile byte   STATUS                    shared at 0xFD8
var volatile bit    STATUS_N                  shared at STATUS : 4
var volatile bit    STATUS_OV                 shared at STATUS : 3
var volatile bit    STATUS_Z                  shared at STATUS : 2
var volatile bit    STATUS_DC                 shared at STATUS : 1
var volatile bit    STATUS_C                  shared at STATUS : 0
var volatile byte   _status                   shared at 0xFD8
const        byte   _n                               =  4
const        byte   _ov                              =  3
const        byte   _z                               =  2
const        byte   _dc                              =  1
const        byte   _c                               =  0
const        byte   _banked                          =  1
const        byte   _access                          =  0
-- ------------------------------------------------
var volatile word   FSR2                      shared at 0xFD9
-- ------------------------------------------------
var volatile byte   FSR2L                     shared at 0xFD9
-- ------------------------------------------------
var volatile byte   FSR2H                     shared at 0xFDA
var volatile bit*4  FSR2H_FSR2H               shared at FSR2H : 0
-- ------------------------------------------------
var volatile byte   PLUSW2                    shared at 0xFDB
-- ------------------------------------------------
var volatile byte   PREINC2                   shared at 0xFDC
-- ------------------------------------------------
var volatile byte   POSTDEC2                  shared at 0xFDD
-- ------------------------------------------------
var volatile byte   POSTINC2                  shared at 0xFDE
-- ------------------------------------------------
var volatile byte   INDF2                     shared at 0xFDF
-- ------------------------------------------------
var volatile byte   BSR                       shared at 0xFE0
var volatile bit*4  BSR_BSR                   shared at BSR : 0
-- ------------------------------------------------
var volatile word   FSR1                      shared at 0xFE1
-- ------------------------------------------------
var volatile byte   FSR1L                     shared at 0xFE1
-- ------------------------------------------------
var volatile byte   FSR1H                     shared at 0xFE2
var volatile bit*4  FSR1H_FSR1H               shared at FSR1H : 0
-- ------------------------------------------------
var volatile byte   PLUSW1                    shared at 0xFE3
-- ------------------------------------------------
var volatile byte   PREINC1                   shared at 0xFE4
-- ------------------------------------------------
var volatile byte   POSTDEC1                  shared at 0xFE5
-- ------------------------------------------------
var volatile byte   POSTINC1                  shared at 0xFE6
-- ------------------------------------------------
var volatile byte   INDF1                     shared at 0xFE7
-- ------------------------------------------------
var volatile byte   WREG                      shared at 0xFE8
-- ------------------------------------------------
var volatile word   FSR0                      shared at 0xFE9
var volatile word   _fsr0                     shared at 0xFE9
-- ------------------------------------------------
var volatile byte   FSR0L                     shared at 0xFE9
var volatile byte   _fsr0l                    shared at 0xFE9
-- ------------------------------------------------
var volatile byte   FSR0H                     shared at 0xFEA
var volatile bit*4  FSR0H_FSR0H               shared at FSR0H : 0
var volatile byte   _fsr0h                    shared at 0xFEA
-- ------------------------------------------------
var volatile byte   PLUSW0                    shared at 0xFEB
-- ------------------------------------------------
var volatile byte   PREINC0                   shared at 0xFEC
-- ------------------------------------------------
var volatile byte   POSTDEC0                  shared at 0xFED
-- ------------------------------------------------
var volatile byte   POSTINC0                  shared at 0xFEE
-- ------------------------------------------------
var volatile byte   INDF0                     shared at 0xFEF
var volatile byte   _ind                      shared at 0xFEF
-- ------------------------------------------------
var volatile byte   INTCON3                   shared at 0xFF0
var volatile bit    INTCON3_INT2IP            shared at INTCON3 : 7
var volatile bit    INTCON3_INT1IP            shared at INTCON3 : 6
var volatile bit    INTCON3_INT3IE            shared at INTCON3 : 5
var volatile bit    INTCON3_INT2IE            shared at INTCON3 : 4
var volatile bit    INTCON3_INT1IE            shared at INTCON3 : 3
var volatile bit    INTCON3_INT3IF            shared at INTCON3 : 2
var volatile bit    INTCON3_INT2IF            shared at INTCON3 : 1
var volatile bit    INTCON3_INT1IF            shared at INTCON3 : 0
-- ------------------------------------------------
var volatile byte   INTCON2                   shared at 0xFF1
var volatile bit    INTCON2_NRBPU             shared at INTCON2 : 7
var volatile bit    INTCON2_INTEDG0           shared at INTCON2 : 6
var volatile bit    INTCON2_INTEDG1           shared at INTCON2 : 5
var volatile bit    INTCON2_INTEDG2           shared at INTCON2 : 4
var volatile bit    INTCON2_INTEDG3           shared at INTCON2 : 3
var volatile bit    INTCON2_TMR0IP            shared at INTCON2 : 2
var volatile bit    INTCON2_INT3IP            shared at INTCON2 : 1
var volatile bit    INTCON2_RBIP              shared at INTCON2 : 0
-- ------------------------------------------------
var volatile byte   INTCON                    shared at 0xFF2
var volatile bit    INTCON_GIE                shared at INTCON : 7
var volatile bit    INTCON_GIEH               shared at INTCON : 7
var volatile bit    INTCON_PEIE               shared at INTCON : 6
var volatile bit    INTCON_GIEL               shared at INTCON : 6
var volatile bit    INTCON_TMR0IE             shared at INTCON : 5
var volatile bit    INTCON_INT0IE             shared at INTCON : 4
var volatile bit    INTCON_RBIE               shared at INTCON : 3
var volatile bit    INTCON_TMR0IF             shared at INTCON : 2
var volatile bit    INTCON_INT0IF             shared at INTCON : 1
var volatile bit    INTCON_RBIF               shared at INTCON : 0
-- ------------------------------------------------
var volatile word   PROD                      shared at 0xFF3
-- ------------------------------------------------
var volatile byte   PRODL                     shared at 0xFF3
-- ------------------------------------------------
var volatile byte   PRODH                     shared at 0xFF4
-- ------------------------------------------------
var volatile byte   TABLAT                    shared at 0xFF5
var volatile byte   _tablat                   shared at 0xFF5
-- ------------------------------------------------
var volatile byte*3 TBLPTR                    shared at 0xFF6
var volatile bit    TBLPTR_ACSS               shared at TBLPTR : 5
var volatile byte*3 _tblptr                   shared at 0xFF6
-- ------------------------------------------------
var volatile byte   TBLPTRL                   shared at 0xFF6
-- ------------------------------------------------
var volatile byte   TBLPTRH                   shared at 0xFF7
-- ------------------------------------------------
var volatile byte   TBLPTRU                   shared at 0xFF8
var volatile bit    TBLPTRU_ACSS              shared at TBLPTRU : 5
var volatile bit*5  TBLPTRU_TBLPTRU           shared at TBLPTRU : 0
-- ------------------------------------------------
var volatile byte*3 PCLAT                     shared at 0xFF9
-- ------------------------------------------------
var volatile byte   PCL                       shared at 0xFF9
var volatile byte   _pcl                      shared at 0xFF9
-- ------------------------------------------------
var volatile byte   PCLATH                    shared at 0xFFA
var volatile byte   _pclath                   shared at 0xFFA
-- ------------------------------------------------
var volatile byte   PCLATU                    shared at 0xFFB
var volatile bit*5  PCLATU_PCU                shared at PCLATU : 0
var volatile byte   _pclatu                   shared at 0xFFB
-- ------------------------------------------------
var volatile byte   STKPTR                    shared at 0xFFC
var volatile bit    STKPTR_STKFUL             shared at STKPTR : 7
var volatile bit    STKPTR_STKUNF             shared at STKPTR : 6
var volatile bit*5  STKPTR_STKPTR             shared at STKPTR : 0
-- ------------------------------------------------
var volatile word   TOS                       shared at 0xFFD
-- ------------------------------------------------
var volatile byte   TOSL                      shared at 0xFFD
-- ------------------------------------------------
var volatile byte   TOSH                      shared at 0xFFE
-- ------------------------------------------------
var volatile byte   TOSU                      shared at 0xFFF
var volatile bit*5  TOSU_TOSU                 shared at TOSU : 0
--
-- ===================================================
--
-- Special (device specific) constants and procedures
--
const ADC_GROUP = ADC_V12
const byte ADC_NTOTAL_CHANNEL = 12
const byte ADC_ADCS_BITCOUNT  = 3
--
const PPS_GROUP  = PPS_0        -- no Peripheral Pin Selection
--
-- - - - - - - - - - - - - - - - - - - - - - - - - - -
-- Disable ADC module
procedure adc_off() is
   pragma inline
   ADCON0 = 0b0000_0000         -- disable ADC
   ADCON1 = 0b0000_1111
   ADCON2 = 0b0000_0000
end procedure
--
-- - - - - - - - - - - - - - - - - - - - - - - - - - -
-- Disable comparator module
procedure comparator_off() is
   pragma inline
   CMCON  = 0b0000_0111        -- disable comparator
end procedure
--
-- - - - - - - - - - - - - - - - - - - - - - - - - - -
-- Switch analog ports to digital mode (if analog module present).
procedure enable_digital_io() is
   pragma inline
   adc_off()
   comparator_off()
end procedure
--
-- ==================================================
--
-- Symbolic Fuse definitions
-- -------------------------
--
-- CONFIG1L (0xFFF8)
--
pragma fuse_def WDT:0 0x1 {                -- watchdog timer
       ENABLED = 0x1                       -- enabled
       DISABLED = 0x0                      -- disabled
       }
pragma fuse_def STVR:0 0x20 {              -- stack overflow reset
       ENABLED = 0x20                      -- enabled
       DISABLED = 0x0                      -- disabled
       }
pragma fuse_def XINST:0 0x40 {             -- extended instruction set enable bit
       ENABLED = 0x40                      -- enabled
       DISABLED = 0x0                      -- disabled
       }
pragma fuse_def DEBUG:0 0x80 {             -- background debugger enable bit
       DISABLED = 0x80                     -- disabled
       ENABLED = 0x0                       -- enabled
       }
--
-- CONFIG1H (0xFFF9)
--
pragma fuse_def CP0:1 0x4 {                -- code protect
       DISABLED = 0x4                      -- disabled
       ENABLED = 0x0                       -- enabled
       }
pragma fuse_def SIGN:1 0x8 {               -- config word signature bit
       NOT_CONDUCATED = 0x8                -- bulk erase of memory not conducated
       AREA_COMPLETE = 0x0                 -- bulk erase of memory area complete
       }
--
-- CONFIG2L (0xFFFA)
--
pragma fuse_def OSC:2 0x7 {                -- oscillator selection bits
       EC_NOCLKOUT_PLL = 0x7               -- ec oscillator with pll
       EC_CLKOUT = 0x6                     -- ec oscillator with clock out on ra6
       HS_PLL = 0x5                        -- hs oscillator, pll enabled
       HS = 0x4                            -- hs oscillator
       INTOSC_CLKOUT_PLL = 0x3             -- intosc with pll enabled, clkout on ra6 and port function on ra7
       INTOSC_CLKOUT = 0x2                 -- internal oscillator, clkout on ra6 and port function on ra7
       INTOSC_NOCLKOUT_PLL = 0x1           -- intosc with pll enabled, port function on ra6 and ra7
       INTOSC_NOCLKOUT = 0x0               -- internal oscillator, port function on ra6 and ra7
       }
pragma fuse_def T1DIG:2 0x8 {              -- secondary clock source t1oscen enforcement
       ENABLED = 0x8                       -- enabled
       DISABLED = 0x0                      -- disabled
       }
pragma fuse_def LPT1OSC:2 0x10 {           -- low-power timer1 oscillator enable bit
       LOW_POWER = 0x0                     -- enabled
       HIGH_POWER = 0x10                   -- disabled
       }
pragma fuse_def FCMEN:2 0x40 {             -- fail-safe clock monitor enable bit
       DISABLED = 0x0                      -- disabled
       ENABLED = 0x40                      -- enabled
       }
pragma fuse_def IESO:2 0x80 {              -- two-speed start-up (internal/external oscillator switchover) control bit
       DISABLED = 0x0                      -- disabled
       ENABLED = 0x80                      -- enabled
       }
--
-- CONFIG2H (0xFFFB)
--
pragma fuse_def WDTPS:3 0xF {              -- watchdog timer postscaler select bits
       P32K = 0xF                          -- 1:32768
       P16K = 0xE                          -- 1:16384
       P8K = 0xD                           -- 1:8192
       P4K = 0xC                           -- 1:4096
       P2K = 0xB                           -- 1:2048
       P1K = 0xA                           -- 1:1024
       P512  = 0x9                         -- 1:512
       P256  = 0x8                         -- 1:256
       P128  = 0x7                         -- 1:128
       P64  = 0x6                          -- 1:64
       P32  = 0x5                          -- 1:32
       P16  = 0x4                          -- 1:16
       P8  = 0x3                           -- 1:8
       P4  = 0x2                           -- 1:4
       P2  = 0x1                           -- 1:2
       P1  = 0x0                           -- 1:1
       }
--
-- CONFIG3L (0xFFFC)
--
pragma fuse_def RTCOSC:4 0x2 {             -- rtcc reference clock select bit
       T1OSC = 0x2                         -- rtcc uses t1osc/t1cki as reference clock
       INTRC = 0x0                         -- rtcc uses intosc/intrc as reference clock
       }
--
-- CONFIG3H (0xFFFD)
--
pragma fuse_def CCP2MUX:5 0x1 {            -- ccp2 mux
       pin_E7 = 0x0                        -- re7
       pin_C1 = 0x1                        -- rc1
       }
--
