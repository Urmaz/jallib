-- ===================================================
-- Title: JalV2 device include file for PIC18F85J50
--
-- Author: Rob Hamerling, Copyright (c) 2008..2012, all rights reserved.
--
-- Adapted-by:
--
-- Revision: $Revision$
--
-- Compiler: 2.4p
--
-- This file is part of jallib  (http://jallib.googlecode.com)
-- Released under the ZLIB license  (http://www.opensource.org/licenses/zlib-license.html)
--
-- Description:
--    Device include file for pic18f85j50, containing:
--    - Declaration of ports and pins of the chip.
--    - Procedures to force the use of the LATx register
--      when PORTx is addressed for output.
--    - Symbolic definitions for configuration bits (fuses)
--    - Some device dependent procedures for common
--      operations, like:
--      . enable_digital_io()
--
-- Sources:
--  - x:/mplab889/mplab ide/device/pic18f85j50.dev
--
-- Notes:
--  - Created with Dev2Jal Rexx script version 0.1.41
--  - File creation date/time: 25 Jan 2013 13:34
--
-- ===================================================
--
const word DEVICE_ID   = 0x41A0
const byte PICTYPE[]   = "18F85J50"
const byte DATASHEET[] = "39775C"
const byte PGMSPEC[]   = "39644L"
--
-- Vdd Range: 2.125-3.500 Nominal: 3.250
-- Vpp Range: 2.125-3.500 Default: 3.250
--
-- ---------------------------------------------------
--
include chipdef_jallib                  -- common constants
--
pragma  target  cpu   PIC_16            -- (banks=16)
pragma  target  chip  18f85j50
pragma  target  bank  0x0100
pragma  stack   31
pragma  code    32760
pragma  data    0x1-0xF3F
pragma  shared  0x0-0x0
--
var volatile byte _pic_accum shared at 0x0      -- (compiler)
--
const word  _FUSES_CT             = 6
const dword _FUSE_BASE[_FUSES_CT] = { 0x7FF8,
                                      0x7FF9,
                                      0x7FFA,
                                      0x7FFB,
                                      0x7FFC,
                                      0x7FFD }
const byte  _FUSES[_FUSES_CT]     = { 0b_1110_1111,         -- CONFIG1L
                                      0b_1111_0111,         -- CONFIG1H
                                      0b_1100_0111,         -- CONFIG2L
                                      0b_1111_1111,         -- CONFIG2H
                                      0b_1111_1000,         -- CONFIG3L
                                      0b_1111_1111 }        -- CONFIG3H
--
-- ------------------------------------------------
var volatile word   PMSTAT                           at 0xF40
-- ------------------------------------------------
var volatile byte   PMSTATL                          at 0xF40
var volatile bit    PMSTATL_OBE                      at PMSTATL : 7
var volatile bit    PMSTATL_OBUF                     at PMSTATL : 6
var volatile bit    PMSTATL_OB3E                     at PMSTATL : 3
var volatile bit    PMSTATL_OB2E                     at PMSTATL : 2
var volatile bit    PMSTATL_OB1E                     at PMSTATL : 1
var volatile bit    PMSTATL_OB0E                     at PMSTATL : 0
-- ------------------------------------------------
var volatile byte   PMSTATH                          at 0xF41
var volatile bit    PMSTATH_IBF                      at PMSTATH : 7
var volatile bit    PMSTATH_IBOV                     at PMSTATH : 6
var volatile bit    PMSTATH_IB3F                     at PMSTATH : 3
var volatile bit    PMSTATH_IB2F                     at PMSTATH : 2
var volatile bit    PMSTATH_IB1F                     at PMSTATH : 1
var volatile bit    PMSTATH_IB0F                     at PMSTATH : 0
-- ------------------------------------------------
var volatile word   PMEN                             at 0xF42
-- ------------------------------------------------
var volatile byte   PMEL                             at 0xF42
-- ------------------------------------------------
var volatile byte   PMEH                             at 0xF43
-- ------------------------------------------------
var volatile word   PMDIN2                           at 0xF44
-- ------------------------------------------------
var volatile byte   PMDIN2L                          at 0xF44
-- ------------------------------------------------
var volatile byte   PMDIN2H                          at 0xF45
-- ------------------------------------------------
var volatile word   PMDOUT2                          at 0xF46
-- ------------------------------------------------
var volatile byte   PMDOUT2L                         at 0xF46
-- ------------------------------------------------
var volatile byte   PMDOUT2H                         at 0xF47
-- ------------------------------------------------
var volatile word   PMMODE                           at 0xF48
-- ------------------------------------------------
var volatile byte   PMMODEL                          at 0xF48
var volatile bit*2  PMMODEL_WAITB                    at PMMODEL : 6
var volatile bit*4  PMMODEL_WAITM                    at PMMODEL : 2
var volatile bit*2  PMMODEL_WAITE                    at PMMODEL : 0
-- ------------------------------------------------
var volatile byte   PMMODEH                          at 0xF49
var volatile bit    PMMODEH_BUSY                     at PMMODEH : 7
var volatile bit*2  PMMODEH_IRQM                     at PMMODEH : 5
var volatile bit*2  PMMODEH_INCM                     at PMMODEH : 3
var volatile bit    PMMODEH_MODE16                   at PMMODEH : 2
var volatile bit*2  PMMODEH_MODE                     at PMMODEH : 0
-- ------------------------------------------------
var volatile word   PMCON                            at 0xF4A
-- ------------------------------------------------
var volatile byte   PMCONL                           at 0xF4A
var volatile bit    PMCONL_CSF1                      at PMCONL : 7
var volatile bit    PMCONL_CSF0                      at PMCONL : 6
var volatile bit    PMCONL_ALP                       at PMCONL : 5
var volatile bit    PMCONL_CS2P                      at PMCONL : 4
var volatile bit    PMCONL_CS1P                      at PMCONL : 3
var volatile bit    PMCONL_BEP                       at PMCONL : 2
var volatile bit    PMCONL_WRSP                      at PMCONL : 1
var volatile bit    PMCONL_RDSP                      at PMCONL : 0
-- ------------------------------------------------
var volatile byte   PMCONH                           at 0xF4B
var volatile bit    PMCONH_PMPEN                     at PMCONH : 7
var volatile bit    PMCONH_PSIDL                     at PMCONH : 5
var volatile bit    PMCONH_ADRMUX1                   at PMCONH : 4
var volatile bit    PMCONH_ADRMUX0                   at PMCONH : 3
var volatile bit    PMCONH_PTBEEN                    at PMCONH : 2
var volatile bit    PMCONH_PTWREN                    at PMCONH : 1
var volatile bit    PMCONH_PTRDEN                    at PMCONH : 0
-- ------------------------------------------------
var volatile byte   UEP0                             at 0xF4C
var volatile bit    UEP0_EPHSHK                      at UEP0 : 4
var volatile bit    UEP0_EPCONDIS                    at UEP0 : 3
var volatile bit    UEP0_EPOUTEN                     at UEP0 : 2
var volatile bit    UEP0_EPINEN                      at UEP0 : 1
var volatile bit    UEP0_EPSTALL                     at UEP0 : 0
-- ------------------------------------------------
var volatile byte   UEP1                             at 0xF4D
var volatile bit    UEP1_EPHSHK                      at UEP1 : 4
var volatile bit    UEP1_EPCONDIS                    at UEP1 : 3
var volatile bit    UEP1_EPOUTEN                     at UEP1 : 2
var volatile bit    UEP1_EPINEN                      at UEP1 : 1
var volatile bit    UEP1_EPSTALL                     at UEP1 : 0
-- ------------------------------------------------
var volatile byte   UEP2                             at 0xF4E
var volatile bit    UEP2_EPHSHK                      at UEP2 : 4
var volatile bit    UEP2_EPCONDIS                    at UEP2 : 3
var volatile bit    UEP2_EPOUTEN                     at UEP2 : 2
var volatile bit    UEP2_EPINEN                      at UEP2 : 1
var volatile bit    UEP2_EPSTALL                     at UEP2 : 0
-- ------------------------------------------------
var volatile byte   UEP3                             at 0xF4F
var volatile bit    UEP3_EPHSHK                      at UEP3 : 4
var volatile bit    UEP3_EPCONDIS                    at UEP3 : 3
var volatile bit    UEP3_EPOUTEN                     at UEP3 : 2
var volatile bit    UEP3_EPINEN                      at UEP3 : 1
var volatile bit    UEP3_EPSTALL                     at UEP3 : 0
-- ------------------------------------------------
var volatile byte   UEP4                             at 0xF50
var volatile bit    UEP4_EPHSHK                      at UEP4 : 4
var volatile bit    UEP4_EPCONDIS                    at UEP4 : 3
var volatile bit    UEP4_EPOUTEN                     at UEP4 : 2
var volatile bit    UEP4_EPINEN                      at UEP4 : 1
var volatile bit    UEP4_EPSTALL                     at UEP4 : 0
-- ------------------------------------------------
var volatile byte   UEP5                             at 0xF51
var volatile bit    UEP5_EPHSHK                      at UEP5 : 4
var volatile bit    UEP5_EPCONDIS                    at UEP5 : 3
var volatile bit    UEP5_EPOUTEN                     at UEP5 : 2
var volatile bit    UEP5_EPINEN                      at UEP5 : 1
var volatile bit    UEP5_EPSTALL                     at UEP5 : 0
-- ------------------------------------------------
var volatile byte   UEP6                             at 0xF52
var volatile bit    UEP6_EPHSHK                      at UEP6 : 4
var volatile bit    UEP6_EPCONDIS                    at UEP6 : 3
var volatile bit    UEP6_EPOUTEN                     at UEP6 : 2
var volatile bit    UEP6_EPINEN                      at UEP6 : 1
var volatile bit    UEP6_EPSTALL                     at UEP6 : 0
-- ------------------------------------------------
var volatile byte   UEP7                             at 0xF53
var volatile bit    UEP7_EPHSHK                      at UEP7 : 4
var volatile bit    UEP7_EPCONDIS                    at UEP7 : 3
var volatile bit    UEP7_EPOUTEN                     at UEP7 : 2
var volatile bit    UEP7_EPINEN                      at UEP7 : 1
var volatile bit    UEP7_EPSTALL                     at UEP7 : 0
-- ------------------------------------------------
var volatile byte   UEP8                             at 0xF54
var volatile bit    UEP8_EPHSHK                      at UEP8 : 4
var volatile bit    UEP8_EPCONDIS                    at UEP8 : 3
var volatile bit    UEP8_EPOUTEN                     at UEP8 : 2
var volatile bit    UEP8_EPINEN                      at UEP8 : 1
var volatile bit    UEP8_EPSTALL                     at UEP8 : 0
-- ------------------------------------------------
var volatile byte   UEP9                             at 0xF55
var volatile bit    UEP9_EPHSHK                      at UEP9 : 4
var volatile bit    UEP9_EPCONDIS                    at UEP9 : 3
var volatile bit    UEP9_EPOUTEN                     at UEP9 : 2
var volatile bit    UEP9_EPINEN                      at UEP9 : 1
var volatile bit    UEP9_EPSTALL                     at UEP9 : 0
-- ------------------------------------------------
var volatile byte   UEP10                            at 0xF56
var volatile bit    UEP10_EPHSHK                     at UEP10 : 4
var volatile bit    UEP10_EPCONDIS                   at UEP10 : 3
var volatile bit    UEP10_EPOUTEN                    at UEP10 : 2
var volatile bit    UEP10_EPINEN                     at UEP10 : 1
var volatile bit    UEP10_EPSTALL                    at UEP10 : 0
-- ------------------------------------------------
var volatile byte   UEP11                            at 0xF57
var volatile bit    UEP11_EPHSHK                     at UEP11 : 4
var volatile bit    UEP11_EPCONDIS                   at UEP11 : 3
var volatile bit    UEP11_EPOUTEN                    at UEP11 : 2
var volatile bit    UEP11_EPINEN                     at UEP11 : 1
var volatile bit    UEP11_EPSTALL                    at UEP11 : 0
-- ------------------------------------------------
var volatile byte   UEP12                            at 0xF58
var volatile bit    UEP12_EPHSHK                     at UEP12 : 4
var volatile bit    UEP12_EPCONDIS                   at UEP12 : 3
var volatile bit    UEP12_EPOUTEN                    at UEP12 : 2
var volatile bit    UEP12_EPINEN                     at UEP12 : 1
var volatile bit    UEP12_EPSTALL                    at UEP12 : 0
-- ------------------------------------------------
var volatile byte   UEP13                            at 0xF59
var volatile bit    UEP13_EPHSHK                     at UEP13 : 4
var volatile bit    UEP13_EPCONDIS                   at UEP13 : 3
var volatile bit    UEP13_EPOUTEN                    at UEP13 : 2
var volatile bit    UEP13_EPINEN                     at UEP13 : 1
var volatile bit    UEP13_EPSTALL                    at UEP13 : 0
-- ------------------------------------------------
var volatile byte   UEP14                            at 0xF5A
var volatile bit    UEP14_EPHSHK                     at UEP14 : 4
var volatile bit    UEP14_EPCONDIS                   at UEP14 : 3
var volatile bit    UEP14_EPOUTEN                    at UEP14 : 2
var volatile bit    UEP14_EPINEN                     at UEP14 : 1
var volatile bit    UEP14_EPSTALL                    at UEP14 : 0
-- ------------------------------------------------
var volatile byte   UEP15                            at 0xF5B
var volatile bit    UEP15_EPHSHK                     at UEP15 : 4
var volatile bit    UEP15_EPCONDIS                   at UEP15 : 3
var volatile bit    UEP15_EPOUTEN                    at UEP15 : 2
var volatile bit    UEP15_EPINEN                     at UEP15 : 1
var volatile bit    UEP15_EPSTALL                    at UEP15 : 0
-- ------------------------------------------------
var volatile byte   UIE                              at 0xF5C
var volatile bit    UIE_SOFIE                        at UIE : 6
var volatile bit    UIE_STALLIE                      at UIE : 5
var volatile bit    UIE_IDLEIE                       at UIE : 4
var volatile bit    UIE_TRNIE                        at UIE : 3
var volatile bit    UIE_ACTVIE                       at UIE : 2
var volatile bit    UIE_UERRIE                       at UIE : 1
var volatile bit    UIE_URSTIE                       at UIE : 0
-- ------------------------------------------------
var volatile byte   UEIE                             at 0xF5D
var volatile bit    UEIE_BTSEE                       at UEIE : 7
var volatile bit    UEIE_BTOEE                       at UEIE : 4
var volatile bit    UEIE_DFN8EE                      at UEIE : 3
var volatile bit    UEIE_CRC16EE                     at UEIE : 2
var volatile bit    UEIE_CRC5EE                      at UEIE : 1
var volatile bit    UEIE_PIDEE                       at UEIE : 0
-- ------------------------------------------------
var volatile byte   UADDR                            at 0xF5E
var volatile bit*7  UADDR_ADDR                       at UADDR : 0
-- ------------------------------------------------
var volatile byte   UCFG                             at 0xF5F
var volatile bit    UCFG_UTEYE                       at UCFG : 7
var volatile bit    UCFG_UOEMON                      at UCFG : 6
var volatile bit    UCFG_UPUEN                       at UCFG : 4
var volatile bit    UCFG_UTRDIS                      at UCFG : 3
var volatile bit    UCFG_FSEN                        at UCFG : 2
var volatile bit*2  UCFG_PPB                         at UCFG : 0
-- ------------------------------------------------
var volatile word   UFRM                      shared at 0xF60
-- ------------------------------------------------
var volatile byte   UFRML                     shared at 0xF60
-- ------------------------------------------------
var volatile byte   UFRMH                     shared at 0xF61
var volatile bit*3  UFRMH_FRM                 shared at UFRMH : 0
-- ------------------------------------------------
var volatile byte   UIR                       shared at 0xF62
var volatile bit    UIR_SOFIF                 shared at UIR : 6
var volatile bit    UIR_STALLIF               shared at UIR : 5
var volatile bit    UIR_IDLEIF                shared at UIR : 4
var volatile bit    UIR_TRNIF                 shared at UIR : 3
var volatile bit    UIR_ACTVIF                shared at UIR : 2
var volatile bit    UIR_UERRIF                shared at UIR : 1
var volatile bit    UIR_URSTIF                shared at UIR : 0
-- ------------------------------------------------
var volatile byte   UEIR                      shared at 0xF63
var volatile bit    UEIR_BTSEF                shared at UEIR : 7
var volatile bit    UEIR_BTOEF                shared at UEIR : 4
var volatile bit    UEIR_DFN8EF               shared at UEIR : 3
var volatile bit    UEIR_CRC16EF              shared at UEIR : 2
var volatile bit    UEIR_CRC5EF               shared at UEIR : 1
var volatile bit    UEIR_PIDEF                shared at UEIR : 0
-- ------------------------------------------------
var volatile byte   USTAT                     shared at 0xF64
var volatile bit*4  USTAT_ENDP                shared at USTAT : 3
var volatile bit    USTAT_DIR                 shared at USTAT : 2
var volatile bit    USTAT_PPBI                shared at USTAT : 1
-- ------------------------------------------------
var volatile byte   UCON                      shared at 0xF65
var volatile bit    UCON_PPBRST               shared at UCON : 6
var volatile bit    UCON_SE0                  shared at UCON : 5
var volatile bit    UCON_PKTDIS               shared at UCON : 4
var volatile bit    UCON_USBEN                shared at UCON : 3
var volatile bit    UCON_RESUME               shared at UCON : 2
var volatile bit    UCON_SUSPND               shared at UCON : 1
-- ------------------------------------------------
var volatile word   PMDIN1                    shared at 0xF66
-- ------------------------------------------------
var volatile byte   PMDIN1L                   shared at 0xF66
-- ------------------------------------------------
var volatile byte   PMDIN1H                   shared at 0xF67
-- ------------------------------------------------
var volatile word   PMADDR                    shared at 0xF68
-- ------------------------------------------------
var volatile byte   PMADDRL                   shared at 0xF68
-- ------------------------------------------------
var volatile byte   PMADDRH                   shared at 0xF69
var volatile bit    PMADDRH_CS2               shared at PMADDRH : 7
var volatile bit    PMADDRH_CS1               shared at PMADDRH : 6
var volatile bit*6  PMADDRH_ADDRH             shared at PMADDRH : 0
-- ------------------------------------------------
var volatile byte   CMSTAT                    shared at 0xF6A
var volatile bit    CMSTAT_COUT2              shared at CMSTAT : 1
var volatile bit    CMSTAT_COUT1              shared at CMSTAT : 0
-- ------------------------------------------------
var volatile byte   SSP2CON2                  shared at 0xF6B
var volatile bit    SSP2CON2_GCEN             shared at SSP2CON2 : 7
var volatile bit    SSP2CON2_ACKSTAT          shared at SSP2CON2 : 6
var volatile bit    SSP2CON2_ACKDT            shared at SSP2CON2 : 5
var volatile bit    SSP2CON2_ACKEN            shared at SSP2CON2 : 4
var volatile bit    SSP2CON2_RCEN             shared at SSP2CON2 : 3
var volatile bit    SSP2CON2_PEN              shared at SSP2CON2 : 2
var volatile bit    SSP2CON2_RSEN             shared at SSP2CON2 : 1
var volatile bit    SSP2CON2_SEN              shared at SSP2CON2 : 0
-- ------------------------------------------------
var volatile byte   SSP2CON1                  shared at 0xF6C
var volatile bit    SSP2CON1_WCOL             shared at SSP2CON1 : 7
var volatile bit    SSP2CON1_SSPOV            shared at SSP2CON1 : 6
var volatile bit    SSP2CON1_SSPEN            shared at SSP2CON1 : 5
var volatile bit    SSP2CON1_CKP              shared at SSP2CON1 : 4
var volatile bit*4  SSP2CON1_SSPM             shared at SSP2CON1 : 0
-- ------------------------------------------------
var volatile byte   SSP2STAT                  shared at 0xF6D
var volatile bit    SSP2STAT_SMP              shared at SSP2STAT : 7
var volatile bit    SSP2STAT_CKE              shared at SSP2STAT : 6
var volatile bit    SSP2STAT_D                shared at SSP2STAT : 5
var volatile bit    SSP2STAT_NA               shared at SSP2STAT : 5
var volatile bit    SSP2STAT_P                shared at SSP2STAT : 4
var volatile bit    SSP2STAT_S                shared at SSP2STAT : 3
var volatile bit    SSP2STAT_R                shared at SSP2STAT : 2
var volatile bit    SSP2STAT_NW               shared at SSP2STAT : 2
var volatile bit    SSP2STAT_UA               shared at SSP2STAT : 1
var volatile bit    SSP2STAT_BF               shared at SSP2STAT : 0
-- ------------------------------------------------
var volatile byte   SSP2ADD                   shared at 0xF6E
-- ------------------------------------------------
var volatile byte   SSP2BUF                   shared at 0xF6F
-- ------------------------------------------------
var volatile byte   CCP5CON                   shared at 0xF70
var volatile bit*2  CCP5CON_DC5B              shared at CCP5CON : 4
var volatile bit*4  CCP5CON_CCP5M             shared at CCP5CON : 0
-- ------------------------------------------------
var volatile word   CCPR5                     shared at 0xF71
-- ------------------------------------------------
var volatile byte   CCPR5L                    shared at 0xF71
-- ------------------------------------------------
var volatile byte   CCPR5H                    shared at 0xF72
-- ------------------------------------------------
var volatile byte   CCP4CON                   shared at 0xF73
var volatile bit*2  CCP4CON_DC4B              shared at CCP4CON : 4
var volatile bit*4  CCP4CON_CCP4M             shared at CCP4CON : 0
-- ------------------------------------------------
var volatile word   CCPR4                     shared at 0xF74
-- ------------------------------------------------
var volatile byte   CCPR4L                    shared at 0xF74
-- ------------------------------------------------
var volatile byte   CCPR4H                    shared at 0xF75
-- ------------------------------------------------
var volatile byte   T4CON                     shared at 0xF76
var volatile bit*4  T4CON_T4OUTPS             shared at T4CON : 3
var volatile bit    T4CON_TMR4ON              shared at T4CON : 2
var volatile bit*2  T4CON_T4CKPS              shared at T4CON : 0
-- ------------------------------------------------
var volatile byte   PR4                       shared at 0xF77
-- ------------------------------------------------
var volatile byte   TMR4                      shared at 0xF78
-- ------------------------------------------------
var volatile byte   T3CON                     shared at 0xF79
var volatile bit    T3CON_RD16                shared at T3CON : 7
var volatile bit    T3CON_T3CCP2              shared at T3CON : 6
var volatile bit*2  T3CON_T3CKPS              shared at T3CON : 4
var volatile bit    T3CON_T3CCP1              shared at T3CON : 3
var volatile bit    T3CON_NT3SYNC             shared at T3CON : 2
var volatile bit    T3CON_TMR3CS              shared at T3CON : 1
var volatile bit    T3CON_TMR3ON              shared at T3CON : 0
-- ------------------------------------------------
var volatile word   TMR3                      shared at 0xF7A
-- ------------------------------------------------
var volatile byte   TMR3L                     shared at 0xF7A
-- ------------------------------------------------
var volatile byte   TMR3H                     shared at 0xF7B
-- ------------------------------------------------
var volatile byte   BAUDCON2                  shared at 0xF7C
var volatile bit    BAUDCON2_ABDOVF           shared at BAUDCON2 : 7
var volatile bit    BAUDCON2_RCIDL            shared at BAUDCON2 : 6
var volatile bit    BAUDCON2_RXDTP            shared at BAUDCON2 : 5
var volatile bit    BAUDCON2_TXCKP            shared at BAUDCON2 : 4
var volatile bit    BAUDCON2_BRG16            shared at BAUDCON2 : 3
var volatile bit    BAUDCON2_WUE              shared at BAUDCON2 : 1
var volatile bit    BAUDCON2_ABDEN            shared at BAUDCON2 : 0
-- ------------------------------------------------
var volatile byte   SPBRGH2                   shared at 0xF7D
-- ------------------------------------------------
var volatile byte   BAUDCON1                  shared at 0xF7E
var volatile bit    BAUDCON1_ABDOVF           shared at BAUDCON1 : 7
var volatile bit    BAUDCON1_RCIDL            shared at BAUDCON1 : 6
var volatile bit    BAUDCON1_RXDTP            shared at BAUDCON1 : 5
var volatile bit    BAUDCON1_TXCKP            shared at BAUDCON1 : 4
var volatile bit    BAUDCON1_BRG16            shared at BAUDCON1 : 3
var volatile bit    BAUDCON1_WUE              shared at BAUDCON1 : 1
var volatile bit    BAUDCON1_ABDEN            shared at BAUDCON1 : 0
--
alias               BAUDCON                          is BAUDCON1
alias               BAUDCON_ABDOVF                   is BAUDCON1_ABDOVF
alias               BAUDCON_RCIDL                    is BAUDCON1_RCIDL
alias               BAUDCON_RXDTP                    is BAUDCON1_RXDTP
alias               BAUDCON_TXCKP                    is BAUDCON1_TXCKP
alias               BAUDCON_BRG16                    is BAUDCON1_BRG16
alias               BAUDCON_WUE                      is BAUDCON1_WUE
alias               BAUDCON_ABDEN                    is BAUDCON1_ABDEN
-- ------------------------------------------------
var volatile byte   SPBRGH1                   shared at 0xF7F
--
alias               SPBRGH                           is SPBRGH1
-- ------------------------------------------------
var volatile byte   PORTA                     shared at 0xF80
var volatile bit    PORTA_RA7                 shared at PORTA : 7
var volatile bit    PORTA_RA6                 shared at PORTA : 6
var volatile bit    PORTA_RA5                 shared at PORTA : 5
var volatile bit    PORTA_RA4                 shared at PORTA : 4
var volatile bit    PORTA_RA3                 shared at PORTA : 3
var volatile bit    PORTA_RA2                 shared at PORTA : 2
var volatile bit    PORTA_RA1                 shared at PORTA : 1
var volatile bit    PORTA_RA0                 shared at PORTA : 0
-- ------------------------------------------------
var volatile byte   PORTB                     shared at 0xF81
var volatile bit    PORTB_RB7                 shared at PORTB : 7
var volatile bit    PORTB_RB6                 shared at PORTB : 6
var volatile bit    PORTB_RB5                 shared at PORTB : 5
var volatile bit    PORTB_RB4                 shared at PORTB : 4
var volatile bit    PORTB_RB3                 shared at PORTB : 3
var volatile bit    PORTB_RB2                 shared at PORTB : 2
var volatile bit    PORTB_RB1                 shared at PORTB : 1
var volatile bit    PORTB_RB0                 shared at PORTB : 0
-- ------------------------------------------------
var volatile byte   PORTC                     shared at 0xF82
var volatile bit    PORTC_RC7                 shared at PORTC : 7
var volatile bit    PORTC_RC6                 shared at PORTC : 6
var volatile bit    PORTC_RC5                 shared at PORTC : 5
var volatile bit    PORTC_RC4                 shared at PORTC : 4
var volatile bit    PORTC_RC3                 shared at PORTC : 3
var volatile bit    PORTC_RC2                 shared at PORTC : 2
var volatile bit    PORTC_RC1                 shared at PORTC : 1
var volatile bit    PORTC_RC0                 shared at PORTC : 0
-- ------------------------------------------------
var volatile byte   PORTD                     shared at 0xF83
var volatile bit    PORTD_RD7                 shared at PORTD : 7
var volatile bit    PORTD_RD6                 shared at PORTD : 6
var volatile bit    PORTD_RD5                 shared at PORTD : 5
var volatile bit    PORTD_RD4                 shared at PORTD : 4
var volatile bit    PORTD_RD3                 shared at PORTD : 3
var volatile bit    PORTD_RD2                 shared at PORTD : 2
var volatile bit    PORTD_RD1                 shared at PORTD : 1
var volatile bit    PORTD_RD0                 shared at PORTD : 0
-- ------------------------------------------------
var volatile byte   PORTE                     shared at 0xF84
var volatile bit    PORTE_RE7                 shared at PORTE : 7
var volatile bit    PORTE_RE6                 shared at PORTE : 6
var volatile bit    PORTE_RE5                 shared at PORTE : 5
var volatile bit    PORTE_RE4                 shared at PORTE : 4
var volatile bit    PORTE_RE3                 shared at PORTE : 3
var volatile bit    PORTE_RE2                 shared at PORTE : 2
var volatile bit    PORTE_RE1                 shared at PORTE : 1
var volatile bit    PORTE_RE0                 shared at PORTE : 0
-- ------------------------------------------------
var volatile byte   PORTF                     shared at 0xF85
var volatile bit    PORTF_RF7                 shared at PORTF : 7
var volatile bit    PORTF_RF6                 shared at PORTF : 6
var volatile bit    PORTF_RF5                 shared at PORTF : 5
var volatile bit    PORTF_RF4                 shared at PORTF : 4
var volatile bit    PORTF_RF3                 shared at PORTF : 3
var volatile bit    PORTF_RF2                 shared at PORTF : 2
-- ------------------------------------------------
var volatile byte   PORTG                     shared at 0xF86
var volatile bit    PORTG_RDPU                shared at PORTG : 7
var volatile bit    PORTG_REPU                shared at PORTG : 6
var volatile bit    PORTG_RJPU                shared at PORTG : 5
var volatile bit    PORTG_RG4                 shared at PORTG : 4
var volatile bit    PORTG_RG3                 shared at PORTG : 3
var volatile bit    PORTG_RG2                 shared at PORTG : 2
var volatile bit    PORTG_RG1                 shared at PORTG : 1
var volatile bit    PORTG_RG0                 shared at PORTG : 0
-- ------------------------------------------------
var volatile byte   PORTH                     shared at 0xF87
var volatile bit    PORTH_RH7                 shared at PORTH : 7
var volatile bit    PORTH_RH6                 shared at PORTH : 6
var volatile bit    PORTH_RH5                 shared at PORTH : 5
var volatile bit    PORTH_RH4                 shared at PORTH : 4
var volatile bit    PORTH_RH3                 shared at PORTH : 3
var volatile bit    PORTH_RH2                 shared at PORTH : 2
var volatile bit    PORTH_RH1                 shared at PORTH : 1
var volatile bit    PORTH_RH0                 shared at PORTH : 0
-- ------------------------------------------------
var volatile byte   PORTJ                     shared at 0xF88
var volatile bit    PORTJ_RJ7                 shared at PORTJ : 7
var volatile bit    PORTJ_RJ6                 shared at PORTJ : 6
var volatile bit    PORTJ_RJ5                 shared at PORTJ : 5
var volatile bit    PORTJ_RJ4                 shared at PORTJ : 4
var volatile bit    PORTJ_RJ3                 shared at PORTJ : 3
var volatile bit    PORTJ_RJ2                 shared at PORTJ : 2
var volatile bit    PORTJ_RJ1                 shared at PORTJ : 1
var volatile bit    PORTJ_RJ0                 shared at PORTJ : 0
-- ------------------------------------------------
var volatile byte   LATA                      shared at 0xF89
--
procedure PORTA'put(byte in x at LATA) is
   pragma inline
end procedure
--
procedure PORTA_low'put(byte in x) is
   pragma inline
   LATA = (LATA & 0xF0) | (x & 0x0F)
end procedure
function PORTA_low'get() return byte is
   pragma inline
   return (PORTA & 0x0F)
end function
--
procedure PORTA_high'put(byte in x) is
   pragma inline
   LATA = (LATA & 0x0F) | (x << 4)
end procedure
function PORTA_high'get() return byte is
   pragma inline
   return (PORTA >> 4)
end function
--
var volatile bit    LATA_LATA7                shared at LATA : 7
var volatile bit    pin_A7                    shared at PORTA : 7
alias               pin_OSC1                         is pin_A7
alias               pin_CLKI                         is pin_A7
--
procedure pin_A7'put(bit in x at LATA : 7) is
   pragma inline
end procedure
--
var volatile bit    LATA_LATA6                shared at LATA : 6
var volatile bit    pin_A6                    shared at PORTA : 6
alias               pin_OSC2                         is pin_A6
alias               pin_CLKO                         is pin_A6
--
procedure pin_A6'put(bit in x at LATA : 6) is
   pragma inline
end procedure
--
var volatile bit    LATA_LATA5                shared at LATA : 5
var volatile bit    pin_A5                    shared at PORTA : 5
alias               pin_AN4                          is pin_A5
alias               pin_C2INA                        is pin_A5
--
procedure pin_A5'put(bit in x at LATA : 5) is
   pragma inline
end procedure
--
var volatile bit    LATA_LATA4                shared at LATA : 4
var volatile bit    pin_A4                    shared at PORTA : 4
alias               pin_T0CKI                        is pin_A4
--
procedure pin_A4'put(bit in x at LATA : 4) is
   pragma inline
end procedure
--
var volatile bit    LATA_LATA3                shared at LATA : 3
var volatile bit    pin_A3                    shared at PORTA : 3
alias               pin_AN3                          is pin_A3
alias               pin_VREF_POS                     is pin_A3
--
procedure pin_A3'put(bit in x at LATA : 3) is
   pragma inline
end procedure
--
var volatile bit    LATA_LATA2                shared at LATA : 2
var volatile bit    pin_A2                    shared at PORTA : 2
alias               pin_AN2                          is pin_A2
alias               pin_VREF                         is pin_A2
--
procedure pin_A2'put(bit in x at LATA : 2) is
   pragma inline
end procedure
--
var volatile bit    LATA_LATA1                shared at LATA : 1
var volatile bit    pin_A1                    shared at PORTA : 1
alias               pin_AN1                          is pin_A1
--
procedure pin_A1'put(bit in x at LATA : 1) is
   pragma inline
end procedure
--
var volatile bit    LATA_LATA0                shared at LATA : 0
var volatile bit    pin_A0                    shared at PORTA : 0
alias               pin_AN0                          is pin_A0
--
procedure pin_A0'put(bit in x at LATA : 0) is
   pragma inline
end procedure
--
-- ------------------------------------------------
var volatile byte   LATB                      shared at 0xF8A
--
procedure PORTB'put(byte in x at LATB) is
   pragma inline
end procedure
--
procedure PORTB_low'put(byte in x) is
   pragma inline
   LATB = (LATB & 0xF0) | (x & 0x0F)
end procedure
function PORTB_low'get() return byte is
   pragma inline
   return (PORTB & 0x0F)
end function
--
procedure PORTB_high'put(byte in x) is
   pragma inline
   LATB = (LATB & 0x0F) | (x << 4)
end procedure
function PORTB_high'get() return byte is
   pragma inline
   return (PORTB >> 4)
end function
--
var volatile bit    LATB_LATB7                shared at LATB : 7
var volatile bit    pin_B7                    shared at PORTB : 7
alias               pin_KBI3                         is pin_B7
alias               pin_PGD                          is pin_B7
--
procedure pin_B7'put(bit in x at LATB : 7) is
   pragma inline
end procedure
--
var volatile bit    LATB_LATB6                shared at LATB : 6
var volatile bit    pin_B6                    shared at PORTB : 6
alias               pin_KBI2                         is pin_B6
alias               pin_PGC                          is pin_B6
--
procedure pin_B6'put(bit in x at LATB : 6) is
   pragma inline
end procedure
--
var volatile bit    LATB_LATB5                shared at LATB : 5
var volatile bit    pin_B5                    shared at PORTB : 5
alias               pin_KBI1                         is pin_B5
alias               pin_PMA0                         is pin_B5
--
procedure pin_B5'put(bit in x at LATB : 5) is
   pragma inline
end procedure
--
var volatile bit    LATB_LATB4                shared at LATB : 4
var volatile bit    pin_B4                    shared at PORTB : 4
alias               pin_KBI0                         is pin_B4
alias               pin_PMA1                         is pin_B4
--
procedure pin_B4'put(bit in x at LATB : 4) is
   pragma inline
end procedure
--
var volatile bit    LATB_LATB3                shared at LATB : 3
var volatile bit    pin_B3                    shared at PORTB : 3
alias               pin_INT3                         is pin_B3
alias               pin_PMA2                         is pin_B3
--
procedure pin_B3'put(bit in x at LATB : 3) is
   pragma inline
end procedure
--
var volatile bit    LATB_LATB2                shared at LATB : 2
var volatile bit    pin_B2                    shared at PORTB : 2
alias               pin_INT2                         is pin_B2
alias               pin_PMA3                         is pin_B2
--
procedure pin_B2'put(bit in x at LATB : 2) is
   pragma inline
end procedure
--
var volatile bit    LATB_LATB1                shared at LATB : 1
var volatile bit    pin_B1                    shared at PORTB : 1
alias               pin_INT1                         is pin_B1
alias               pin_PMA4                         is pin_B1
--
procedure pin_B1'put(bit in x at LATB : 1) is
   pragma inline
end procedure
--
var volatile bit    LATB_LATB0                shared at LATB : 0
var volatile bit    pin_B0                    shared at PORTB : 0
alias               pin_FLT0                         is pin_B0
alias               pin_INT0                         is pin_B0
--
procedure pin_B0'put(bit in x at LATB : 0) is
   pragma inline
end procedure
--
-- ------------------------------------------------
var volatile byte   LATC                      shared at 0xF8B
--
procedure PORTC'put(byte in x at LATC) is
   pragma inline
end procedure
--
procedure PORTC_low'put(byte in x) is
   pragma inline
   LATC = (LATC & 0xF0) | (x & 0x0F)
end procedure
function PORTC_low'get() return byte is
   pragma inline
   return (PORTC & 0x0F)
end function
--
procedure PORTC_high'put(byte in x) is
   pragma inline
   LATC = (LATC & 0x0F) | (x << 4)
end procedure
function PORTC_high'get() return byte is
   pragma inline
   return (PORTC >> 4)
end function
--
var volatile bit    LATC_LATC7                shared at LATC : 7
var volatile bit    pin_C7                    shared at PORTC : 7
alias               pin_RX1                          is pin_C7
alias               pin_RX                           is pin_C7
alias               pin_DT1                          is pin_C7
--
procedure pin_C7'put(bit in x at LATC : 7) is
   pragma inline
end procedure
--
var volatile bit    LATC_LATC6                shared at LATC : 6
var volatile bit    pin_C6                    shared at PORTC : 6
alias               pin_TX1                          is pin_C6
alias               pin_TX                           is pin_C6
alias               pin_CK1                          is pin_C6
--
procedure pin_C6'put(bit in x at LATC : 6) is
   pragma inline
end procedure
--
var volatile bit    LATC_LATC5                shared at LATC : 5
var volatile bit    pin_C5                    shared at PORTC : 5
alias               pin_SDO1                         is pin_C5
alias               pin_SDO                          is pin_C5
alias               pin_C2OUT                        is pin_C5
--
procedure pin_C5'put(bit in x at LATC : 5) is
   pragma inline
end procedure
--
var volatile bit    LATC_LATC4                shared at LATC : 4
var volatile bit    pin_C4                    shared at PORTC : 4
alias               pin_SDI1                         is pin_C4
alias               pin_SDI                          is pin_C4
alias               pin_SDA1                         is pin_C4
alias               pin_SDA                          is pin_C4
--
procedure pin_C4'put(bit in x at LATC : 4) is
   pragma inline
end procedure
--
var volatile bit    LATC_LATC3                shared at LATC : 3
var volatile bit    pin_C3                    shared at PORTC : 3
alias               pin_SCK1                         is pin_C3
alias               pin_SCK                          is pin_C3
alias               pin_SCL1                         is pin_C3
alias               pin_SCL                          is pin_C3
--
procedure pin_C3'put(bit in x at LATC : 3) is
   pragma inline
end procedure
--
var volatile bit    LATC_LATC2                shared at LATC : 2
var volatile bit    pin_C2                    shared at PORTC : 2
alias               pin_ECCP1                        is pin_C2
alias               pin_P1A                          is pin_C2
--
procedure pin_C2'put(bit in x at LATC : 2) is
   pragma inline
end procedure
--
var volatile bit    LATC_LATC1                shared at LATC : 1
var volatile bit    pin_C1                    shared at PORTC : 1
alias               pin_T1OSI                        is pin_C1
alias               pin_ECCP2_RC1                    is pin_C1
--
procedure pin_C1'put(bit in x at LATC : 1) is
   pragma inline
end procedure
--
var volatile bit    LATC_LATC0                shared at LATC : 0
var volatile bit    pin_C0                    shared at PORTC : 0
alias               pin_T1OSO                        is pin_C0
alias               pin_T13CKI                       is pin_C0
--
procedure pin_C0'put(bit in x at LATC : 0) is
   pragma inline
end procedure
--
-- ------------------------------------------------
var volatile byte   LATD                      shared at 0xF8C
--
procedure PORTD'put(byte in x at LATD) is
   pragma inline
end procedure
--
procedure PORTD_low'put(byte in x) is
   pragma inline
   LATD = (LATD & 0xF0) | (x & 0x0F)
end procedure
function PORTD_low'get() return byte is
   pragma inline
   return (PORTD & 0x0F)
end function
--
procedure PORTD_high'put(byte in x) is
   pragma inline
   LATD = (LATD & 0x0F) | (x << 4)
end procedure
function PORTD_high'get() return byte is
   pragma inline
   return (PORTD >> 4)
end function
--
var volatile bit    LATD_LATD7                shared at LATD : 7
var volatile bit    pin_D7                    shared at PORTD : 7
alias               pin_PMD7_RD7                     is pin_D7
alias               pin_SS2                          is pin_D7
--
procedure pin_D7'put(bit in x at LATD : 7) is
   pragma inline
end procedure
--
var volatile bit    LATD_LATD6                shared at LATD : 6
var volatile bit    pin_D6                    shared at PORTD : 6
alias               pin_PMD6_RD6                     is pin_D6
alias               pin_SCK2                         is pin_D6
alias               pin_SCL2                         is pin_D6
--
procedure pin_D6'put(bit in x at LATD : 6) is
   pragma inline
end procedure
--
var volatile bit    LATD_LATD5                shared at LATD : 5
var volatile bit    pin_D5                    shared at PORTD : 5
alias               pin_PMD5                         is pin_D5
alias               pin_SDI2                         is pin_D5
alias               pin_SDA2                         is pin_D5
--
procedure pin_D5'put(bit in x at LATD : 5) is
   pragma inline
end procedure
--
var volatile bit    LATD_LATD4                shared at LATD : 4
var volatile bit    pin_D4                    shared at PORTD : 4
alias               pin_PMD4                         is pin_D4
alias               pin_SDO2                         is pin_D4
--
procedure pin_D4'put(bit in x at LATD : 4) is
   pragma inline
end procedure
--
var volatile bit    LATD_LATD3                shared at LATD : 3
var volatile bit    pin_D3                    shared at PORTD : 3
alias               pin_PMD3_RD3                     is pin_D3
--
procedure pin_D3'put(bit in x at LATD : 3) is
   pragma inline
end procedure
--
var volatile bit    LATD_LATD2                shared at LATD : 2
var volatile bit    pin_D2                    shared at PORTD : 2
alias               pin_PMD2                         is pin_D2
--
procedure pin_D2'put(bit in x at LATD : 2) is
   pragma inline
end procedure
--
var volatile bit    LATD_LATD1                shared at LATD : 1
var volatile bit    pin_D1                    shared at PORTD : 1
alias               pin_PMD1                         is pin_D1
--
procedure pin_D1'put(bit in x at LATD : 1) is
   pragma inline
end procedure
--
var volatile bit    LATD_LATD0                shared at LATD : 0
var volatile bit    pin_D0                    shared at PORTD : 0
alias               pin_PMD0                         is pin_D0
--
procedure pin_D0'put(bit in x at LATD : 0) is
   pragma inline
end procedure
--
-- ------------------------------------------------
var volatile byte   LATE                      shared at 0xF8D
--
procedure PORTE'put(byte in x at LATE) is
   pragma inline
end procedure
--
procedure PORTE_low'put(byte in x) is
   pragma inline
   LATE = (LATE & 0xF0) | (x & 0x0F)
end procedure
function PORTE_low'get() return byte is
   pragma inline
   return (PORTE & 0x0F)
end function
--
procedure PORTE_high'put(byte in x) is
   pragma inline
   LATE = (LATE & 0x0F) | (x << 4)
end procedure
function PORTE_high'get() return byte is
   pragma inline
   return (PORTE >> 4)
end function
--
var volatile bit    LATE_LATE7                shared at LATE : 7
var volatile bit    pin_E7                    shared at PORTE : 7
alias               pin_PMA9                         is pin_E7
alias               pin_ECCP2_RE7                    is pin_E7
--
procedure pin_E7'put(bit in x at LATE : 7) is
   pragma inline
end procedure
--
var volatile bit    LATE_LATE6                shared at LATE : 6
var volatile bit    pin_E6                    shared at PORTE : 6
alias               pin_PMA10                        is pin_E6
alias               pin_P1B                          is pin_E6
--
procedure pin_E6'put(bit in x at LATE : 6) is
   pragma inline
end procedure
--
var volatile bit    LATE_LATE5                shared at LATE : 5
var volatile bit    pin_E5                    shared at PORTE : 5
alias               pin_PMA11                        is pin_E5
alias               pin_P1C                          is pin_E5
--
procedure pin_E5'put(bit in x at LATE : 5) is
   pragma inline
end procedure
--
var volatile bit    LATE_LATE4                shared at LATE : 4
var volatile bit    pin_E4                    shared at PORTE : 4
alias               pin_PMA12                        is pin_E4
alias               pin_P3B                          is pin_E4
--
procedure pin_E4'put(bit in x at LATE : 4) is
   pragma inline
end procedure
--
var volatile bit    LATE_LATE3                shared at LATE : 3
var volatile bit    pin_E3                    shared at PORTE : 3
alias               pin_PMA13                        is pin_E3
alias               pin_P3C                          is pin_E3
alias               pin_REFO                         is pin_E3
--
procedure pin_E3'put(bit in x at LATE : 3) is
   pragma inline
end procedure
--
var volatile bit    LATE_LATE2                shared at LATE : 2
var volatile bit    pin_E2                    shared at PORTE : 2
alias               pin_PMBE_RE2                     is pin_E2
alias               pin_P2B                          is pin_E2
--
procedure pin_E2'put(bit in x at LATE : 2) is
   pragma inline
end procedure
--
var volatile bit    LATE_LATE1                shared at LATE : 1
var volatile bit    pin_E1                    shared at PORTE : 1
alias               pin_PMWR_RE1                     is pin_E1
alias               pin_P2C                          is pin_E1
--
procedure pin_E1'put(bit in x at LATE : 1) is
   pragma inline
end procedure
--
var volatile bit    LATE_LATE0                shared at LATE : 0
var volatile bit    pin_E0                    shared at PORTE : 0
alias               pin_PMRD_RE0                     is pin_E0
alias               pin_P2D                          is pin_E0
--
procedure pin_E0'put(bit in x at LATE : 0) is
   pragma inline
end procedure
--
-- ------------------------------------------------
var volatile byte   LATF                      shared at 0xF8E
--
procedure PORTF'put(byte in x at LATF) is
   pragma inline
end procedure
--
procedure PORTF_low'put(byte in x) is
   pragma inline
   LATF = (LATF & 0xF0) | (x & 0x0F)
end procedure
function PORTF_low'get() return byte is
   pragma inline
   return (PORTF & 0x0F)
end function
--
procedure PORTF_high'put(byte in x) is
   pragma inline
   LATF = (LATF & 0x0F) | (x << 4)
end procedure
function PORTF_high'get() return byte is
   pragma inline
   return (PORTF >> 4)
end function
--
var volatile bit    LATF_LATF7                shared at LATF : 7
var volatile bit    pin_F7                    shared at PORTF : 7
alias               pin_SS1                          is pin_F7
alias               pin_SS                           is pin_F7
alias               pin_C1OUT                        is pin_F7
--
procedure pin_F7'put(bit in x at LATF : 7) is
   pragma inline
end procedure
--
var volatile bit    LATF_LATF6                shared at LATF : 6
var volatile bit    pin_F6                    shared at PORTF : 6
alias               pin_AN11                         is pin_F6
alias               pin_C1INA                        is pin_F6
--
procedure pin_F6'put(bit in x at LATF : 6) is
   pragma inline
end procedure
--
var volatile bit    LATF_LATF5                shared at LATF : 5
var volatile bit    pin_F5                    shared at PORTF : 5
alias               pin_AN10                         is pin_F5
alias               pin_C1INB                        is pin_F5
alias               pin_CVREF                        is pin_F5
--
procedure pin_F5'put(bit in x at LATF : 5) is
   pragma inline
end procedure
--
var volatile bit    LATF_LATF4                shared at LATF : 4
var volatile bit    pin_F4                    shared at PORTF : 4
alias               pin_D_POS                        is pin_F4
--
procedure pin_F4'put(bit in x at LATF : 4) is
   pragma inline
end procedure
--
var volatile bit    LATF_LATF3                shared at LATF : 3
var volatile bit    pin_F3                    shared at PORTF : 3
alias               pin_D                            is pin_F3
--
procedure pin_F3'put(bit in x at LATF : 3) is
   pragma inline
end procedure
--
var volatile bit    LATF_LATF2                shared at LATF : 2
var volatile bit    pin_F2                    shared at PORTF : 2
alias               pin_PMA5                         is pin_F2
alias               pin_AN7                          is pin_F2
alias               pin_C2INB                        is pin_F2
--
procedure pin_F2'put(bit in x at LATF : 2) is
   pragma inline
end procedure
--
-- ------------------------------------------------
var volatile byte   LATG                      shared at 0xF8F
--
procedure PORTG'put(byte in x at LATG) is
   pragma inline
end procedure
--
procedure PORTG_low'put(byte in x) is
   pragma inline
   LATG = (LATG & 0xF0) | (x & 0x0F)
end procedure
function PORTG_low'get() return byte is
   pragma inline
   return (PORTG & 0x0F)
end function
--
procedure PORTG_high'put(byte in x) is
   pragma inline
   LATG = (LATG & 0x0F) | (x << 4)
end procedure
function PORTG_high'get() return byte is
   pragma inline
   return (PORTG >> 4)
end function
--
var volatile bit    LATG_LATG4                shared at LATG : 4
var volatile bit    pin_G4                    shared at PORTG : 4
alias               pin_PMCS2                        is pin_G4
alias               pin_CCP5                         is pin_G4
alias               pin_P1D                          is pin_G4
--
procedure pin_G4'put(bit in x at LATG : 4) is
   pragma inline
end procedure
--
var volatile bit    LATG_LATG3                shared at LATG : 3
var volatile bit    pin_G3                    shared at PORTG : 3
alias               pin_PMCS1                        is pin_G3
alias               pin_CCP4                         is pin_G3
alias               pin_P3D                          is pin_G3
--
procedure pin_G3'put(bit in x at LATG : 3) is
   pragma inline
end procedure
--
var volatile bit    LATG_LATG2                shared at LATG : 2
var volatile bit    pin_G2                    shared at PORTG : 2
alias               pin_PMA6                         is pin_G2
alias               pin_RX2                          is pin_G2
alias               pin_DT2                          is pin_G2
--
procedure pin_G2'put(bit in x at LATG : 2) is
   pragma inline
end procedure
--
var volatile bit    LATG_LATG1                shared at LATG : 1
var volatile bit    pin_G1                    shared at PORTG : 1
alias               pin_PMA7                         is pin_G1
alias               pin_TX2                          is pin_G1
alias               pin_CK2                          is pin_G1
--
procedure pin_G1'put(bit in x at LATG : 1) is
   pragma inline
end procedure
--
var volatile bit    LATG_LATG0                shared at LATG : 0
var volatile bit    pin_G0                    shared at PORTG : 0
alias               pin_PMA8                         is pin_G0
alias               pin_ECCP3                        is pin_G0
alias               pin_P3A                          is pin_G0
--
procedure pin_G0'put(bit in x at LATG : 0) is
   pragma inline
end procedure
--
-- ------------------------------------------------
var volatile byte   LATH                      shared at 0xF90
--
procedure PORTH'put(byte in x at LATH) is
   pragma inline
end procedure
--
procedure PORTH_low'put(byte in x) is
   pragma inline
   LATH = (LATH & 0xF0) | (x & 0x0F)
end procedure
function PORTH_low'get() return byte is
   pragma inline
   return (PORTH & 0x0F)
end function
--
procedure PORTH_high'put(byte in x) is
   pragma inline
   LATH = (LATH & 0x0F) | (x << 4)
end procedure
function PORTH_high'get() return byte is
   pragma inline
   return (PORTH >> 4)
end function
--
var volatile bit    LATH_LATH7                shared at LATH : 7
var volatile bit    pin_H7                    shared at PORTH : 7
alias               pin_PMWR_RH7                     is pin_H7
--
procedure pin_H7'put(bit in x at LATH : 7) is
   pragma inline
end procedure
--
var volatile bit    LATH_LATH6                shared at LATH : 6
var volatile bit    pin_H6                    shared at PORTH : 6
alias               pin_PMRD_RH6                     is pin_H6
--
procedure pin_H6'put(bit in x at LATH : 6) is
   pragma inline
end procedure
--
var volatile bit    LATH_LATH5                shared at LATH : 5
var volatile bit    pin_H5                    shared at PORTH : 5
alias               pin_PMBE_RH5                     is pin_H5
--
procedure pin_H5'put(bit in x at LATH : 5) is
   pragma inline
end procedure
--
var volatile bit    LATH_LATH4                shared at LATH : 4
var volatile bit    pin_H4                    shared at PORTH : 4
alias               pin_PMD3_RH4                     is pin_H4
--
procedure pin_H4'put(bit in x at LATH : 4) is
   pragma inline
end procedure
--
var volatile bit    LATH_LATH3                shared at LATH : 3
var volatile bit    pin_H3                    shared at PORTH : 3
alias               pin_A19                          is pin_H3
alias               pin_PMD6_RH3                     is pin_H3
--
procedure pin_H3'put(bit in x at LATH : 3) is
   pragma inline
end procedure
--
var volatile bit    LATH_LATH2                shared at LATH : 2
var volatile bit    pin_H2                    shared at PORTH : 2
alias               pin_A18                          is pin_H2
alias               pin_PMD7_RH2                     is pin_H2
--
procedure pin_H2'put(bit in x at LATH : 2) is
   pragma inline
end procedure
--
var volatile bit    LATH_LATH1                shared at LATH : 1
var volatile bit    pin_H1                    shared at PORTH : 1
alias               pin_A17                          is pin_H1
--
procedure pin_H1'put(bit in x at LATH : 1) is
   pragma inline
end procedure
--
var volatile bit    LATH_LATH0                shared at LATH : 0
var volatile bit    pin_H0                    shared at PORTH : 0
alias               pin_A16                          is pin_H0
--
procedure pin_H0'put(bit in x at LATH : 0) is
   pragma inline
end procedure
--
-- ------------------------------------------------
var volatile byte   LATJ                      shared at 0xF91
--
procedure PORTJ'put(byte in x at LATJ) is
   pragma inline
end procedure
--
procedure PORTJ_low'put(byte in x) is
   pragma inline
   LATJ = (LATJ & 0xF0) | (x & 0x0F)
end procedure
function PORTJ_low'get() return byte is
   pragma inline
   return (PORTJ & 0x0F)
end function
--
procedure PORTJ_high'put(byte in x) is
   pragma inline
   LATJ = (LATJ & 0x0F) | (x << 4)
end procedure
function PORTJ_high'get() return byte is
   pragma inline
   return (PORTJ >> 4)
end function
--
var volatile bit    LATJ_LATJ7                shared at LATJ : 7
var volatile bit    pin_J7                    shared at PORTJ : 7
alias               pin_UB                           is pin_J7
--
procedure pin_J7'put(bit in x at LATJ : 7) is
   pragma inline
end procedure
--
var volatile bit    LATJ_LATJ6                shared at LATJ : 6
var volatile bit    pin_J6                    shared at PORTJ : 6
alias               pin_LB                           is pin_J6
--
procedure pin_J6'put(bit in x at LATJ : 6) is
   pragma inline
end procedure
--
var volatile bit    LATJ_LATJ5                shared at LATJ : 5
var volatile bit    pin_J5                    shared at PORTJ : 5
alias               pin_CE                           is pin_J5
--
procedure pin_J5'put(bit in x at LATJ : 5) is
   pragma inline
end procedure
--
var volatile bit    LATJ_LATJ4                shared at LATJ : 4
var volatile bit    pin_J4                    shared at PORTJ : 4
alias               pin_BA0                          is pin_J4
--
procedure pin_J4'put(bit in x at LATJ : 4) is
   pragma inline
end procedure
--
var volatile bit    LATJ_LATJ3                shared at LATJ : 3
var volatile bit    pin_J3                    shared at PORTJ : 3
alias               pin_WRH                          is pin_J3
--
procedure pin_J3'put(bit in x at LATJ : 3) is
   pragma inline
end procedure
--
var volatile bit    LATJ_LATJ2                shared at LATJ : 2
var volatile bit    pin_J2                    shared at PORTJ : 2
alias               pin_WRL                          is pin_J2
--
procedure pin_J2'put(bit in x at LATJ : 2) is
   pragma inline
end procedure
--
var volatile bit    LATJ_LATJ1                shared at LATJ : 1
var volatile bit    pin_J1                    shared at PORTJ : 1
alias               pin_OE                           is pin_J1
--
procedure pin_J1'put(bit in x at LATJ : 1) is
   pragma inline
end procedure
--
var volatile bit    LATJ_LATJ0                shared at LATJ : 0
var volatile bit    pin_J0                    shared at PORTJ : 0
alias               pin_ALE                          is pin_J0
--
procedure pin_J0'put(bit in x at LATJ : 0) is
   pragma inline
end procedure
--
-- ------------------------------------------------
var volatile byte   TRISA                     shared at 0xF92
alias               PORTA_direction                  is TRISA
--
procedure PORTA_low_direction'put(byte in x) is
   pragma inline
   TRISA = (TRISA & 0xF0) | (x & 0x0F)
end procedure
function PORTA_low_direction'get() return byte is
   pragma inline
   return (TRISA & 0x0F)
end function
--
procedure PORTA_high_direction'put(byte in x) is
   pragma inline
   TRISA = (TRISA & 0x0F) | (x << 4)
end procedure
function PORTA_high_direction'get() return byte is
   pragma inline
   return (TRISA >> 4)
end function
--
var volatile bit    TRISA_TRISA7              shared at TRISA : 7
alias               pin_A7_direction                 is TRISA_TRISA7
alias               pin_OSC1_direction               is pin_A7_direction
alias               pin_CLKI_direction               is pin_A7_direction
--
var volatile bit    TRISA_TRISA6              shared at TRISA : 6
alias               pin_A6_direction                 is TRISA_TRISA6
alias               pin_OSC2_direction               is pin_A6_direction
alias               pin_CLKO_direction               is pin_A6_direction
--
var volatile bit    TRISA_TRISA5              shared at TRISA : 5
alias               pin_A5_direction                 is TRISA_TRISA5
alias               pin_AN4_direction                is pin_A5_direction
alias               pin_C2INA_direction              is pin_A5_direction
--
var volatile bit    TRISA_TRISA4              shared at TRISA : 4
alias               pin_A4_direction                 is TRISA_TRISA4
alias               pin_T0CKI_direction              is pin_A4_direction
--
var volatile bit    TRISA_TRISA3              shared at TRISA : 3
alias               pin_A3_direction                 is TRISA_TRISA3
alias               pin_AN3_direction                is pin_A3_direction
alias               pin_VREF_POS_direction           is pin_A3_direction
--
var volatile bit    TRISA_TRISA2              shared at TRISA : 2
alias               pin_A2_direction                 is TRISA_TRISA2
alias               pin_AN2_direction                is pin_A2_direction
alias               pin_VREF_direction               is pin_A2_direction
--
var volatile bit    TRISA_TRISA1              shared at TRISA : 1
alias               pin_A1_direction                 is TRISA_TRISA1
alias               pin_AN1_direction                is pin_A1_direction
--
var volatile bit    TRISA_TRISA0              shared at TRISA : 0
alias               pin_A0_direction                 is TRISA_TRISA0
alias               pin_AN0_direction                is pin_A0_direction
--
-- ------------------------------------------------
var volatile byte   TRISB                     shared at 0xF93
alias               PORTB_direction                  is TRISB
--
procedure PORTB_low_direction'put(byte in x) is
   pragma inline
   TRISB = (TRISB & 0xF0) | (x & 0x0F)
end procedure
function PORTB_low_direction'get() return byte is
   pragma inline
   return (TRISB & 0x0F)
end function
--
procedure PORTB_high_direction'put(byte in x) is
   pragma inline
   TRISB = (TRISB & 0x0F) | (x << 4)
end procedure
function PORTB_high_direction'get() return byte is
   pragma inline
   return (TRISB >> 4)
end function
--
var volatile bit    TRISB_TRISB7              shared at TRISB : 7
alias               pin_B7_direction                 is TRISB_TRISB7
alias               pin_KBI3_direction               is pin_B7_direction
alias               pin_PGD_direction                is pin_B7_direction
--
var volatile bit    TRISB_TRISB6              shared at TRISB : 6
alias               pin_B6_direction                 is TRISB_TRISB6
alias               pin_KBI2_direction               is pin_B6_direction
alias               pin_PGC_direction                is pin_B6_direction
--
var volatile bit    TRISB_TRISB5              shared at TRISB : 5
alias               pin_B5_direction                 is TRISB_TRISB5
alias               pin_KBI1_direction               is pin_B5_direction
alias               pin_PMA0_direction               is pin_B5_direction
--
var volatile bit    TRISB_TRISB4              shared at TRISB : 4
alias               pin_B4_direction                 is TRISB_TRISB4
alias               pin_KBI0_direction               is pin_B4_direction
alias               pin_PMA1_direction               is pin_B4_direction
--
var volatile bit    TRISB_TRISB3              shared at TRISB : 3
alias               pin_B3_direction                 is TRISB_TRISB3
alias               pin_INT3_direction               is pin_B3_direction
alias               pin_PMA2_direction               is pin_B3_direction
--
var volatile bit    TRISB_TRISB2              shared at TRISB : 2
alias               pin_B2_direction                 is TRISB_TRISB2
alias               pin_INT2_direction               is pin_B2_direction
alias               pin_PMA3_direction               is pin_B2_direction
--
var volatile bit    TRISB_TRISB1              shared at TRISB : 1
alias               pin_B1_direction                 is TRISB_TRISB1
alias               pin_INT1_direction               is pin_B1_direction
alias               pin_PMA4_direction               is pin_B1_direction
--
var volatile bit    TRISB_TRISB0              shared at TRISB : 0
alias               pin_B0_direction                 is TRISB_TRISB0
alias               pin_FLT0_direction               is pin_B0_direction
alias               pin_INT0_direction               is pin_B0_direction
--
-- ------------------------------------------------
var volatile byte   TRISC                     shared at 0xF94
alias               PORTC_direction                  is TRISC
--
procedure PORTC_low_direction'put(byte in x) is
   pragma inline
   TRISC = (TRISC & 0xF0) | (x & 0x0F)
end procedure
function PORTC_low_direction'get() return byte is
   pragma inline
   return (TRISC & 0x0F)
end function
--
procedure PORTC_high_direction'put(byte in x) is
   pragma inline
   TRISC = (TRISC & 0x0F) | (x << 4)
end procedure
function PORTC_high_direction'get() return byte is
   pragma inline
   return (TRISC >> 4)
end function
--
var volatile bit    TRISC_TRISC7              shared at TRISC : 7
alias               pin_C7_direction                 is TRISC_TRISC7
alias               pin_RX1_direction                is pin_C7_direction
alias               pin_RX_direction                 is pin_C7_direction
alias               pin_DT1_direction                is pin_C7_direction
--
var volatile bit    TRISC_TRISC6              shared at TRISC : 6
alias               pin_C6_direction                 is TRISC_TRISC6
alias               pin_TX1_direction                is pin_C6_direction
alias               pin_TX_direction                 is pin_C6_direction
alias               pin_CK1_direction                is pin_C6_direction
--
var volatile bit    TRISC_TRISC5              shared at TRISC : 5
alias               pin_C5_direction                 is TRISC_TRISC5
alias               pin_SDO1_direction               is pin_C5_direction
alias               pin_SDO_direction                is pin_C5_direction
alias               pin_C2OUT_direction              is pin_C5_direction
--
var volatile bit    TRISC_TRISC4              shared at TRISC : 4
alias               pin_C4_direction                 is TRISC_TRISC4
alias               pin_SDI1_direction               is pin_C4_direction
alias               pin_SDI_direction                is pin_C4_direction
alias               pin_SDA1_direction               is pin_C4_direction
alias               pin_SDA_direction                is pin_C4_direction
--
var volatile bit    TRISC_TRISC3              shared at TRISC : 3
alias               pin_C3_direction                 is TRISC_TRISC3
alias               pin_SCK1_direction               is pin_C3_direction
alias               pin_SCK_direction                is pin_C3_direction
alias               pin_SCL1_direction               is pin_C3_direction
alias               pin_SCL_direction                is pin_C3_direction
--
var volatile bit    TRISC_TRISC2              shared at TRISC : 2
alias               pin_C2_direction                 is TRISC_TRISC2
alias               pin_ECCP1_direction              is pin_C2_direction
alias               pin_P1A_direction                is pin_C2_direction
--
var volatile bit    TRISC_TRISC1              shared at TRISC : 1
alias               pin_C1_direction                 is TRISC_TRISC1
alias               pin_T1OSI_direction              is pin_C1_direction
alias               pin_ECCP2_RC1_direction          is pin_C1_direction
--
var volatile bit    TRISC_TRISC0              shared at TRISC : 0
alias               pin_C0_direction                 is TRISC_TRISC0
alias               pin_T1OSO_direction              is pin_C0_direction
alias               pin_T13CKI_direction             is pin_C0_direction
--
-- ------------------------------------------------
var volatile byte   TRISD                     shared at 0xF95
alias               PORTD_direction                  is TRISD
--
procedure PORTD_low_direction'put(byte in x) is
   pragma inline
   TRISD = (TRISD & 0xF0) | (x & 0x0F)
end procedure
function PORTD_low_direction'get() return byte is
   pragma inline
   return (TRISD & 0x0F)
end function
--
procedure PORTD_high_direction'put(byte in x) is
   pragma inline
   TRISD = (TRISD & 0x0F) | (x << 4)
end procedure
function PORTD_high_direction'get() return byte is
   pragma inline
   return (TRISD >> 4)
end function
--
var volatile bit    TRISD_TRISD7              shared at TRISD : 7
alias               pin_D7_direction                 is TRISD_TRISD7
alias               pin_PMD7_RD7_direction           is pin_D7_direction
alias               pin_SS2_direction                is pin_D7_direction
--
var volatile bit    TRISD_TRISD6              shared at TRISD : 6
alias               pin_D6_direction                 is TRISD_TRISD6
alias               pin_PMD6_RD6_direction           is pin_D6_direction
alias               pin_SCK2_direction               is pin_D6_direction
alias               pin_SCL2_direction               is pin_D6_direction
--
var volatile bit    TRISD_TRISD5              shared at TRISD : 5
alias               pin_D5_direction                 is TRISD_TRISD5
alias               pin_PMD5_direction               is pin_D5_direction
alias               pin_SDI2_direction               is pin_D5_direction
alias               pin_SDA2_direction               is pin_D5_direction
--
var volatile bit    TRISD_TRISD4              shared at TRISD : 4
alias               pin_D4_direction                 is TRISD_TRISD4
alias               pin_PMD4_direction               is pin_D4_direction
alias               pin_SDO2_direction               is pin_D4_direction
--
var volatile bit    TRISD_TRISD3              shared at TRISD : 3
alias               pin_D3_direction                 is TRISD_TRISD3
alias               pin_PMD3_RD3_direction           is pin_D3_direction
--
var volatile bit    TRISD_TRISD2              shared at TRISD : 2
alias               pin_D2_direction                 is TRISD_TRISD2
alias               pin_PMD2_direction               is pin_D2_direction
--
var volatile bit    TRISD_TRISD1              shared at TRISD : 1
alias               pin_D1_direction                 is TRISD_TRISD1
alias               pin_PMD1_direction               is pin_D1_direction
--
var volatile bit    TRISD_TRISD0              shared at TRISD : 0
alias               pin_D0_direction                 is TRISD_TRISD0
alias               pin_PMD0_direction               is pin_D0_direction
--
-- ------------------------------------------------
var volatile byte   TRISE                     shared at 0xF96
alias               PORTE_direction                  is TRISE
--
procedure PORTE_low_direction'put(byte in x) is
   pragma inline
   TRISE = (TRISE & 0xF0) | (x & 0x0F)
end procedure
function PORTE_low_direction'get() return byte is
   pragma inline
   return (TRISE & 0x0F)
end function
--
procedure PORTE_high_direction'put(byte in x) is
   pragma inline
   TRISE = (TRISE & 0x0F) | (x << 4)
end procedure
function PORTE_high_direction'get() return byte is
   pragma inline
   return (TRISE >> 4)
end function
--
var volatile bit    TRISE_TRISE7              shared at TRISE : 7
alias               pin_E7_direction                 is TRISE_TRISE7
alias               pin_PMA9_direction               is pin_E7_direction
alias               pin_ECCP2_RE7_direction          is pin_E7_direction
--
var volatile bit    TRISE_TRISE6              shared at TRISE : 6
alias               pin_E6_direction                 is TRISE_TRISE6
alias               pin_PMA10_direction              is pin_E6_direction
alias               pin_P1B_direction                is pin_E6_direction
--
var volatile bit    TRISE_TRISE5              shared at TRISE : 5
alias               pin_E5_direction                 is TRISE_TRISE5
alias               pin_PMA11_direction              is pin_E5_direction
alias               pin_P1C_direction                is pin_E5_direction
--
var volatile bit    TRISE_TRISE4              shared at TRISE : 4
alias               pin_E4_direction                 is TRISE_TRISE4
alias               pin_PMA12_direction              is pin_E4_direction
alias               pin_P3B_direction                is pin_E4_direction
--
var volatile bit    TRISE_TRISE3              shared at TRISE : 3
alias               pin_E3_direction                 is TRISE_TRISE3
alias               pin_PMA13_direction              is pin_E3_direction
alias               pin_P3C_direction                is pin_E3_direction
alias               pin_REFO_direction               is pin_E3_direction
--
var volatile bit    TRISE_TRISE2              shared at TRISE : 2
alias               pin_E2_direction                 is TRISE_TRISE2
alias               pin_PMBE_RE2_direction           is pin_E2_direction
alias               pin_P2B_direction                is pin_E2_direction
--
var volatile bit    TRISE_TRISE1              shared at TRISE : 1
alias               pin_E1_direction                 is TRISE_TRISE1
alias               pin_PMWR_RE1_direction           is pin_E1_direction
alias               pin_P2C_direction                is pin_E1_direction
--
var volatile bit    TRISE_TRISE0              shared at TRISE : 0
alias               pin_E0_direction                 is TRISE_TRISE0
alias               pin_PMRD_RE0_direction           is pin_E0_direction
alias               pin_P2D_direction                is pin_E0_direction
--
-- ------------------------------------------------
var volatile byte   TRISF                     shared at 0xF97
alias               PORTF_direction                  is TRISF
--
procedure PORTF_low_direction'put(byte in x) is
   pragma inline
   TRISF = (TRISF & 0xF0) | (x & 0x0F)
end procedure
function PORTF_low_direction'get() return byte is
   pragma inline
   return (TRISF & 0x0F)
end function
--
procedure PORTF_high_direction'put(byte in x) is
   pragma inline
   TRISF = (TRISF & 0x0F) | (x << 4)
end procedure
function PORTF_high_direction'get() return byte is
   pragma inline
   return (TRISF >> 4)
end function
--
var volatile bit    TRISF_TRISF7              shared at TRISF : 7
alias               pin_F7_direction                 is TRISF_TRISF7
alias               pin_SS1_direction                is pin_F7_direction
alias               pin_SS_direction                 is pin_F7_direction
alias               pin_C1OUT_direction              is pin_F7_direction
--
var volatile bit    TRISF_TRISF6              shared at TRISF : 6
alias               pin_F6_direction                 is TRISF_TRISF6
alias               pin_AN11_direction               is pin_F6_direction
alias               pin_C1INA_direction              is pin_F6_direction
--
var volatile bit    TRISF_TRISF5              shared at TRISF : 5
alias               pin_F5_direction                 is TRISF_TRISF5
alias               pin_AN10_direction               is pin_F5_direction
alias               pin_C1INB_direction              is pin_F5_direction
alias               pin_CVREF_direction              is pin_F5_direction
--
var volatile bit    TRISF_TRISF4              shared at TRISF : 4
alias               pin_F4_direction                 is TRISF_TRISF4
alias               pin_D_POS_direction              is pin_F4_direction
--
var volatile bit    TRISF_TRISF3              shared at TRISF : 3
alias               pin_F3_direction                 is TRISF_TRISF3
alias               pin_D_direction                  is pin_F3_direction
--
var volatile bit    TRISF_TRISF2              shared at TRISF : 2
alias               pin_F2_direction                 is TRISF_TRISF2
alias               pin_PMA5_direction               is pin_F2_direction
alias               pin_AN7_direction                is pin_F2_direction
alias               pin_C2INB_direction              is pin_F2_direction
--
-- ------------------------------------------------
var volatile byte   TRISG                     shared at 0xF98
alias               PORTG_direction                  is TRISG
--
procedure PORTG_low_direction'put(byte in x) is
   pragma inline
   TRISG = (TRISG & 0xF0) | (x & 0x0F)
end procedure
function PORTG_low_direction'get() return byte is
   pragma inline
   return (TRISG & 0x0F)
end function
--
procedure PORTG_high_direction'put(byte in x) is
   pragma inline
   TRISG = (TRISG & 0x0F) | (x << 4)
end procedure
function PORTG_high_direction'get() return byte is
   pragma inline
   return (TRISG >> 4)
end function
--
var volatile bit    TRISG_TRISG4              shared at TRISG : 4
alias               pin_G4_direction                 is TRISG_TRISG4
alias               pin_PMCS2_direction              is pin_G4_direction
alias               pin_CCP5_direction               is pin_G4_direction
alias               pin_P1D_direction                is pin_G4_direction
--
var volatile bit    TRISG_TRISG3              shared at TRISG : 3
alias               pin_G3_direction                 is TRISG_TRISG3
alias               pin_PMCS1_direction              is pin_G3_direction
alias               pin_CCP4_direction               is pin_G3_direction
alias               pin_P3D_direction                is pin_G3_direction
--
var volatile bit    TRISG_TRISG2              shared at TRISG : 2
alias               pin_G2_direction                 is TRISG_TRISG2
alias               pin_PMA6_direction               is pin_G2_direction
alias               pin_RX2_direction                is pin_G2_direction
alias               pin_DT2_direction                is pin_G2_direction
--
var volatile bit    TRISG_TRISG1              shared at TRISG : 1
alias               pin_G1_direction                 is TRISG_TRISG1
alias               pin_PMA7_direction               is pin_G1_direction
alias               pin_TX2_direction                is pin_G1_direction
alias               pin_CK2_direction                is pin_G1_direction
--
var volatile bit    TRISG_TRISG0              shared at TRISG : 0
alias               pin_G0_direction                 is TRISG_TRISG0
alias               pin_PMA8_direction               is pin_G0_direction
alias               pin_ECCP3_direction              is pin_G0_direction
alias               pin_P3A_direction                is pin_G0_direction
--
-- ------------------------------------------------
var volatile byte   TRISH                     shared at 0xF99
alias               PORTH_direction                  is TRISH
--
procedure PORTH_low_direction'put(byte in x) is
   pragma inline
   TRISH = (TRISH & 0xF0) | (x & 0x0F)
end procedure
function PORTH_low_direction'get() return byte is
   pragma inline
   return (TRISH & 0x0F)
end function
--
procedure PORTH_high_direction'put(byte in x) is
   pragma inline
   TRISH = (TRISH & 0x0F) | (x << 4)
end procedure
function PORTH_high_direction'get() return byte is
   pragma inline
   return (TRISH >> 4)
end function
--
var volatile bit    TRISH_TRISH7              shared at TRISH : 7
alias               pin_H7_direction                 is TRISH_TRISH7
alias               pin_PMWR_RH7_direction           is pin_H7_direction
--
var volatile bit    TRISH_TRISH6              shared at TRISH : 6
alias               pin_H6_direction                 is TRISH_TRISH6
alias               pin_PMRD_RH6_direction           is pin_H6_direction
--
var volatile bit    TRISH_TRISH5              shared at TRISH : 5
alias               pin_H5_direction                 is TRISH_TRISH5
alias               pin_PMBE_RH5_direction           is pin_H5_direction
--
var volatile bit    TRISH_TRISH4              shared at TRISH : 4
alias               pin_H4_direction                 is TRISH_TRISH4
alias               pin_PMD3_RH4_direction           is pin_H4_direction
--
var volatile bit    TRISH_TRISH3              shared at TRISH : 3
alias               pin_H3_direction                 is TRISH_TRISH3
alias               pin_A19_direction                is pin_H3_direction
alias               pin_PMD6_RH3_direction           is pin_H3_direction
--
var volatile bit    TRISH_TRISH2              shared at TRISH : 2
alias               pin_H2_direction                 is TRISH_TRISH2
alias               pin_A18_direction                is pin_H2_direction
alias               pin_PMD7_RH2_direction           is pin_H2_direction
--
var volatile bit    TRISH_TRISH1              shared at TRISH : 1
alias               pin_H1_direction                 is TRISH_TRISH1
alias               pin_A17_direction                is pin_H1_direction
--
var volatile bit    TRISH_TRISH0              shared at TRISH : 0
alias               pin_H0_direction                 is TRISH_TRISH0
alias               pin_A16_direction                is pin_H0_direction
--
-- ------------------------------------------------
var volatile byte   TRISJ                     shared at 0xF9A
alias               PORTJ_direction                  is TRISJ
--
procedure PORTJ_low_direction'put(byte in x) is
   pragma inline
   TRISJ = (TRISJ & 0xF0) | (x & 0x0F)
end procedure
function PORTJ_low_direction'get() return byte is
   pragma inline
   return (TRISJ & 0x0F)
end function
--
procedure PORTJ_high_direction'put(byte in x) is
   pragma inline
   TRISJ = (TRISJ & 0x0F) | (x << 4)
end procedure
function PORTJ_high_direction'get() return byte is
   pragma inline
   return (TRISJ >> 4)
end function
--
var volatile bit    TRISJ_TRISJ7              shared at TRISJ : 7
alias               pin_J7_direction                 is TRISJ_TRISJ7
alias               pin_UB_direction                 is pin_J7_direction
--
var volatile bit    TRISJ_TRISJ6              shared at TRISJ : 6
alias               pin_J6_direction                 is TRISJ_TRISJ6
alias               pin_LB_direction                 is pin_J6_direction
--
var volatile bit    TRISJ_TRISJ5              shared at TRISJ : 5
alias               pin_J5_direction                 is TRISJ_TRISJ5
alias               pin_CE_direction                 is pin_J5_direction
--
var volatile bit    TRISJ_TRISJ4              shared at TRISJ : 4
alias               pin_J4_direction                 is TRISJ_TRISJ4
alias               pin_BA0_direction                is pin_J4_direction
--
var volatile bit    TRISJ_TRISJ3              shared at TRISJ : 3
alias               pin_J3_direction                 is TRISJ_TRISJ3
alias               pin_WRH_direction                is pin_J3_direction
--
var volatile bit    TRISJ_TRISJ2              shared at TRISJ : 2
alias               pin_J2_direction                 is TRISJ_TRISJ2
alias               pin_WRL_direction                is pin_J2_direction
--
var volatile bit    TRISJ_TRISJ1              shared at TRISJ : 1
alias               pin_J1_direction                 is TRISJ_TRISJ1
alias               pin_OE_direction                 is pin_J1_direction
--
var volatile bit    TRISJ_TRISJ0              shared at TRISJ : 0
alias               pin_J0_direction                 is TRISJ_TRISJ0
alias               pin_ALE_direction                is pin_J0_direction
--
-- ------------------------------------------------
var volatile byte   OSCTUNE                   shared at 0xF9B
var volatile bit    OSCTUNE_INTSRC            shared at OSCTUNE : 7
var volatile bit    OSCTUNE_PLLEN             shared at OSCTUNE : 6
var volatile bit    OSCTUNE_TUN5              shared at OSCTUNE : 5
var volatile bit    OSCTUNE_TUN4              shared at OSCTUNE : 4
var volatile bit    OSCTUNE_TUN3              shared at OSCTUNE : 3
var volatile bit    OSCTUNE_TUN2              shared at OSCTUNE : 2
var volatile bit    OSCTUNE_TUN1              shared at OSCTUNE : 1
var volatile bit    OSCTUNE_TUN0              shared at OSCTUNE : 0
-- ------------------------------------------------
var volatile byte   RCSTA2                    shared at 0xF9C
var volatile bit    RCSTA2_SPEN               shared at RCSTA2 : 7
var volatile bit    RCSTA2_RX9                shared at RCSTA2 : 6
var volatile bit    RCSTA2_SREN               shared at RCSTA2 : 5
var volatile bit    RCSTA2_CREN               shared at RCSTA2 : 4
var volatile bit    RCSTA2_ADDEN              shared at RCSTA2 : 3
var volatile bit    RCSTA2_FERR               shared at RCSTA2 : 2
var volatile bit    RCSTA2_OERR               shared at RCSTA2 : 1
var volatile bit    RCSTA2_RX9D               shared at RCSTA2 : 0
-- ------------------------------------------------
var volatile byte   PIE1                      shared at 0xF9D
var volatile bit    PIE1_PMPIE                shared at PIE1 : 7
var volatile bit    PIE1_ADIE                 shared at PIE1 : 6
var volatile bit    PIE1_RC1IE                shared at PIE1 : 5
alias               PIE1_RCIE                        is PIE1_RC1IE
var volatile bit    PIE1_TX1IE                shared at PIE1 : 4
alias               PIE1_TXIE                        is PIE1_TX1IE
var volatile bit    PIE1_SSP1IE               shared at PIE1 : 3
alias               PIE1_SSPIE                       is PIE1_SSP1IE
var volatile bit    PIE1_CCP1IE               shared at PIE1 : 2
var volatile bit    PIE1_TMR2IE               shared at PIE1 : 1
var volatile bit    PIE1_TMR1IE               shared at PIE1 : 0
-- ------------------------------------------------
var volatile byte   PIR1                      shared at 0xF9E
var volatile bit    PIR1_PMPIF                shared at PIR1 : 7
var volatile bit    PIR1_ADIF                 shared at PIR1 : 6
var volatile bit    PIR1_RC1IF                shared at PIR1 : 5
alias               PIR1_RCIF                        is PIR1_RC1IF
var volatile bit    PIR1_TX1IF                shared at PIR1 : 4
alias               PIR1_TXIF                        is PIR1_TX1IF
var volatile bit    PIR1_SSP1IF               shared at PIR1 : 3
alias               PIR1_SSPIF                       is PIR1_SSP1IF
var volatile bit    PIR1_CCP1IF               shared at PIR1 : 2
var volatile bit    PIR1_TMR2IF               shared at PIR1 : 1
var volatile bit    PIR1_TMR1IF               shared at PIR1 : 0
-- ------------------------------------------------
var volatile byte   IPR1                      shared at 0xF9F
var volatile bit    IPR1_PMPIP                shared at IPR1 : 7
var volatile bit    IPR1_ADIP                 shared at IPR1 : 6
var volatile bit    IPR1_RC1IP                shared at IPR1 : 5
alias               IPR1_RCIP                        is IPR1_RC1IP
var volatile bit    IPR1_TX1IP                shared at IPR1 : 4
alias               IPR1_TXIP                        is IPR1_TX1IP
var volatile bit    IPR1_SSP1IP               shared at IPR1 : 3
alias               IPR1_SSPIP                       is IPR1_SSP1IP
var volatile bit    IPR1_CCP1IP               shared at IPR1 : 2
var volatile bit    IPR1_TMR2IP               shared at IPR1 : 1
var volatile bit    IPR1_TMR1IP               shared at IPR1 : 0
-- ------------------------------------------------
var volatile byte   PIE2                      shared at 0xFA0
var volatile bit    PIE2_OSCFIE               shared at PIE2 : 7
var volatile bit    PIE2_CM2IE                shared at PIE2 : 6
var volatile bit    PIE2_CM1IE                shared at PIE2 : 5
var volatile bit    PIE2_USBIE                shared at PIE2 : 4
var volatile bit    PIE2_BCL1IE               shared at PIE2 : 3
var volatile bit    PIE2_LVDIE                shared at PIE2 : 2
var volatile bit    PIE2_TMR3IE               shared at PIE2 : 1
var volatile bit    PIE2_CCP2IE               shared at PIE2 : 0
-- ------------------------------------------------
var volatile byte   PIR2                      shared at 0xFA1
var volatile bit    PIR2_OSCFIF               shared at PIR2 : 7
var volatile bit    PIR2_CM2IF                shared at PIR2 : 6
var volatile bit    PIR2_CM1IF                shared at PIR2 : 5
var volatile bit    PIR2_USBIF                shared at PIR2 : 4
var volatile bit    PIR2_BCL1IF               shared at PIR2 : 3
var volatile bit    PIR2_LVDIF                shared at PIR2 : 2
var volatile bit    PIR2_TMR3IF               shared at PIR2 : 1
var volatile bit    PIR2_CCP2IF               shared at PIR2 : 0
-- ------------------------------------------------
var volatile byte   IPR2                      shared at 0xFA2
var volatile bit    IPR2_OSCFIP               shared at IPR2 : 7
var volatile bit    IPR2_CM2IP                shared at IPR2 : 6
var volatile bit    IPR2_CM1IP                shared at IPR2 : 5
var volatile bit    IPR2_USBIP                shared at IPR2 : 4
var volatile bit    IPR2_BCL1IP               shared at IPR2 : 3
var volatile bit    IPR2_LVDIP                shared at IPR2 : 2
var volatile bit    IPR2_TMR3IP               shared at IPR2 : 1
var volatile bit    IPR2_CCP2IP               shared at IPR2 : 0
-- ------------------------------------------------
var volatile byte   PIE3                      shared at 0xFA3
var volatile bit    PIE3_SSP2IE               shared at PIE3 : 7
var volatile bit    PIE3_BCL2IE               shared at PIE3 : 6
var volatile bit    PIE3_RC2IE                shared at PIE3 : 5
alias               PIE3_RCIE2                       is PIE3_RC2IE
var volatile bit    PIE3_TX2IE                shared at PIE3 : 4
alias               PIE3_TXIE2                       is PIE3_TX2IE
var volatile bit    PIE3_TMR4IE               shared at PIE3 : 3
var volatile bit    PIE3_CCP5IE               shared at PIE3 : 2
var volatile bit    PIE3_CCP4IE               shared at PIE3 : 1
var volatile bit    PIE3_CCP3IE               shared at PIE3 : 0
-- ------------------------------------------------
var volatile byte   PIR3                      shared at 0xFA4
var volatile bit    PIR3_SSP2IF               shared at PIR3 : 7
var volatile bit    PIR3_BCL2IF               shared at PIR3 : 6
var volatile bit    PIR3_RC2IF                shared at PIR3 : 5
alias               PIR3_RCIF2                       is PIR3_RC2IF
var volatile bit    PIR3_TX2IF                shared at PIR3 : 4
alias               PIR3_TXIF2                       is PIR3_TX2IF
var volatile bit    PIR3_TMR4IF               shared at PIR3 : 3
var volatile bit    PIR3_CCP5IF               shared at PIR3 : 2
var volatile bit    PIR3_CCP4IF               shared at PIR3 : 1
var volatile bit    PIR3_CCP3IF               shared at PIR3 : 0
-- ------------------------------------------------
var volatile byte   IPR3                      shared at 0xFA5
var volatile bit    IPR3_SSP2IP               shared at IPR3 : 7
var volatile bit    IPR3_BCL2IP               shared at IPR3 : 6
var volatile bit    IPR3_RC2IP                shared at IPR3 : 5
alias               IPR3_RCIP2                       is IPR3_RC2IP
var volatile bit    IPR3_TX2IP                shared at IPR3 : 4
alias               IPR3_TXIP2                       is IPR3_TX2IP
var volatile bit    IPR3_TMR4IP               shared at IPR3 : 3
var volatile bit    IPR3_CCP5IP               shared at IPR3 : 2
var volatile bit    IPR3_CCP4IP               shared at IPR3 : 1
var volatile bit    IPR3_CCP3IP               shared at IPR3 : 0
-- ------------------------------------------------
var volatile byte   EECON1                    shared at 0xFA6
var volatile bit    EECON1_WPROG              shared at EECON1 : 5
var volatile bit    EECON1_FREE               shared at EECON1 : 4
var volatile bit    EECON1_WRERR              shared at EECON1 : 3
var volatile bit    EECON1_WREN               shared at EECON1 : 2
var volatile bit    EECON1_WR                 shared at EECON1 : 1
-- ------------------------------------------------
var volatile byte   EECON2                    shared at 0xFA7
-- ------------------------------------------------
var volatile byte   TXSTA2                    shared at 0xFA8
var volatile bit    TXSTA2_CSRC               shared at TXSTA2 : 7
var volatile bit    TXSTA2_TX9                shared at TXSTA2 : 6
var volatile bit    TXSTA2_TXEN               shared at TXSTA2 : 5
var volatile bit    TXSTA2_SYNC               shared at TXSTA2 : 4
var volatile bit    TXSTA2_SENDB              shared at TXSTA2 : 3
var volatile bit    TXSTA2_BRGH               shared at TXSTA2 : 2
var volatile bit    TXSTA2_TRMT               shared at TXSTA2 : 1
var volatile bit    TXSTA2_TX9D               shared at TXSTA2 : 0
-- ------------------------------------------------
var volatile byte   TXREG2                    shared at 0xFA9
-- ------------------------------------------------
var volatile byte   RCREG2                    shared at 0xFAA
-- ------------------------------------------------
var volatile byte   SPBRG2                    shared at 0xFAB
alias               SPBRGL2                          is SPBRG2
-- ------------------------------------------------
var volatile byte   RCSTA1                    shared at 0xFAC
var volatile bit    RCSTA1_SPEN               shared at RCSTA1 : 7
var volatile bit    RCSTA1_RX9                shared at RCSTA1 : 6
var volatile bit    RCSTA1_SREN               shared at RCSTA1 : 5
var volatile bit    RCSTA1_CREN               shared at RCSTA1 : 4
var volatile bit    RCSTA1_ADDEN              shared at RCSTA1 : 3
var volatile bit    RCSTA1_FERR               shared at RCSTA1 : 2
var volatile bit    RCSTA1_OERR               shared at RCSTA1 : 1
var volatile bit    RCSTA1_RX9D               shared at RCSTA1 : 0
--
alias               RCSTA                            is RCSTA1
alias               RCSTA_SPEN                       is RCSTA1_SPEN
alias               RCSTA_RX9                        is RCSTA1_RX9
alias               RCSTA_SREN                       is RCSTA1_SREN
alias               RCSTA_CREN                       is RCSTA1_CREN
alias               RCSTA_ADDEN                      is RCSTA1_ADDEN
alias               RCSTA_FERR                       is RCSTA1_FERR
alias               RCSTA_OERR                       is RCSTA1_OERR
alias               RCSTA_RX9D                       is RCSTA1_RX9D
-- ------------------------------------------------
var volatile byte   TXSTA1                    shared at 0xFAD
var volatile bit    TXSTA1_CSRC               shared at TXSTA1 : 7
var volatile bit    TXSTA1_TX9                shared at TXSTA1 : 6
var volatile bit    TXSTA1_TXEN               shared at TXSTA1 : 5
var volatile bit    TXSTA1_SYNC               shared at TXSTA1 : 4
var volatile bit    TXSTA1_SENDB              shared at TXSTA1 : 3
var volatile bit    TXSTA1_BRGH               shared at TXSTA1 : 2
var volatile bit    TXSTA1_TRMT               shared at TXSTA1 : 1
var volatile bit    TXSTA1_TX9D               shared at TXSTA1 : 0
--
alias               TXSTA                            is TXSTA1
alias               TXSTA_CSRC                       is TXSTA1_CSRC
alias               TXSTA_TX9                        is TXSTA1_TX9
alias               TXSTA_TXEN                       is TXSTA1_TXEN
alias               TXSTA_SYNC                       is TXSTA1_SYNC
alias               TXSTA_SENDB                      is TXSTA1_SENDB
alias               TXSTA_BRGH                       is TXSTA1_BRGH
alias               TXSTA_TRMT                       is TXSTA1_TRMT
alias               TXSTA_TX9D                       is TXSTA1_TX9D
-- ------------------------------------------------
var volatile byte   TXREG1                    shared at 0xFAE
--
alias               TXREG                            is TXREG1
-- ------------------------------------------------
var volatile byte   RCREG1                    shared at 0xFAF
--
alias               RCREG                            is RCREG1
-- ------------------------------------------------
var volatile byte   SPBRG1                    shared at 0xFB0
alias               SPBRGL                           is SPBRG1
-- ------------------------------------------------
var volatile byte   ECCP3CON                  shared at 0xFB1
alias               CCP3CON                          is ECCP3CON
var volatile bit*2  ECCP3CON_P3M              shared at ECCP3CON : 6
var volatile bit*2  ECCP3CON_DC3B             shared at ECCP3CON : 4
alias               CCP3CON_DC3B                     is ECCP3CON_DC3B
var volatile bit*4  ECCP3CON_CCP3M            shared at ECCP3CON : 0
alias               CCP3CON_CCP3M                    is ECCP3CON_CCP3M
-- ------------------------------------------------
var volatile word   CCPR3                     shared at 0xFB2
-- ------------------------------------------------
var volatile byte   CCPR3L                    shared at 0xFB2
-- ------------------------------------------------
var volatile byte   CCPR3H                    shared at 0xFB3
-- ------------------------------------------------
var volatile byte   ECCP3DEL                  shared at 0xFB4
var volatile bit    ECCP3DEL_PRSEN            shared at ECCP3DEL : 7
var volatile bit*7  ECCP3DEL_PDC              shared at ECCP3DEL : 0
-- ------------------------------------------------
var volatile byte   ECCP3AS                   shared at 0xFB5
var volatile bit    ECCP3AS_ECCPASE           shared at ECCP3AS : 7
var volatile bit*3  ECCP3AS_ECCPAS            shared at ECCP3AS : 4
var volatile bit*2  ECCP3AS_PSSAC             shared at ECCP3AS : 2
var volatile bit*2  ECCP3AS_PSSBD             shared at ECCP3AS : 0
-- ------------------------------------------------
var volatile byte   ECCP2CON                  shared at 0xFB6
alias               CCP2CON                          is ECCP2CON
var volatile bit*2  ECCP2CON_P2M              shared at ECCP2CON : 6
var volatile bit*2  ECCP2CON_DC2B             shared at ECCP2CON : 4
alias               CCP2CON_DC2B                     is ECCP2CON_DC2B
var volatile bit*4  ECCP2CON_CCP2M            shared at ECCP2CON : 0
alias               CCP2CON_CCP2M                    is ECCP2CON_CCP2M
-- ------------------------------------------------
var volatile word   CCPR2                     shared at 0xFB7
-- ------------------------------------------------
var volatile byte   CCPR2L                    shared at 0xFB7
-- ------------------------------------------------
var volatile byte   CCPR2H                    shared at 0xFB8
-- ------------------------------------------------
var volatile byte   ECCP2DEL                  shared at 0xFB9
var volatile bit    ECCP2DEL_PRSEN            shared at ECCP2DEL : 7
var volatile bit*7  ECCP2DEL_PDC              shared at ECCP2DEL : 0
-- ------------------------------------------------
var volatile byte   ECCP2AS                   shared at 0xFBA
var volatile bit    ECCP2AS_ECCPASE           shared at ECCP2AS : 7
var volatile bit*3  ECCP2AS_ECCPAS            shared at ECCP2AS : 4
var volatile bit*2  ECCP2AS_PSSAC             shared at ECCP2AS : 2
var volatile bit*2  ECCP2AS_PSSBD             shared at ECCP2AS : 0
-- ------------------------------------------------
var volatile byte   ECCP1CON                  shared at 0xFBB
alias               CCP1CON                          is ECCP1CON
var volatile bit*2  ECCP1CON_P1M              shared at ECCP1CON : 6
var volatile bit*2  ECCP1CON_DC1B             shared at ECCP1CON : 4
alias               CCP1CON_DC1B                     is ECCP1CON_DC1B
var volatile bit*4  ECCP1CON_CCP1M            shared at ECCP1CON : 0
alias               CCP1CON_CCP1M                    is ECCP1CON_CCP1M
-- ------------------------------------------------
var volatile word   CCPR1                     shared at 0xFBC
-- ------------------------------------------------
var volatile byte   CCPR1L                    shared at 0xFBC
-- ------------------------------------------------
var volatile byte   CCPR1H                    shared at 0xFBD
-- ------------------------------------------------
var volatile byte   ECCP1DEL                  shared at 0xFBE
var volatile bit    ECCP1DEL_PRSEN            shared at ECCP1DEL : 7
var volatile bit*7  ECCP1DEL_PDC              shared at ECCP1DEL : 0
-- ------------------------------------------------
var volatile byte   ECCP1AS                   shared at 0xFBF
var volatile bit    ECCP1AS_ECCPASE           shared at ECCP1AS : 7
var volatile bit*3  ECCP1AS_ECCPAS            shared at ECCP1AS : 4
var volatile bit*2  ECCP1AS_PSSAC             shared at ECCP1AS : 2
var volatile bit*2  ECCP1AS_PSSBD             shared at ECCP1AS : 0
-- ------------------------------------------------
var volatile byte   WDTCON                    shared at 0xFC0
var volatile bit    WDTCON_REGSLP             shared at WDTCON : 7
var volatile bit    WDTCON_LVDSTAT            shared at WDTCON : 6
var volatile bit    WDTCON_ADSHR              shared at WDTCON : 4
WDTCON_ADSHR = FALSE                 -- ensure default (legacy) SFR mapping
var volatile bit    WDTCON_SWDTEN             shared at WDTCON : 0
-- ------------------------------------------------
var volatile byte   ADCON1                    shared at 0xFC1
var volatile bit    ADCON1_ADFM               shared at ADCON1 : 7
var volatile bit    ADCON1_ADCAL              shared at ADCON1 : 6
var volatile bit*3  ADCON1_ACQT               shared at ADCON1 : 3
var volatile bit*3  ADCON1_ADCS               shared at ADCON1 : 0
-- ------------------------------------------------
var volatile byte   ADCON0                    shared at 0xFC2
var volatile bit    ADCON0_VCFG1              shared at ADCON0 : 7
var volatile bit    ADCON0_VCFG0              shared at ADCON0 : 6
var volatile bit*2  ADCON0_VCFG               shared at ADCON0 : 6
var volatile bit*4  ADCON0_CHS                shared at ADCON0 : 2
var volatile bit    ADCON0_GO                 shared at ADCON0 : 1
var volatile bit    ADCON0_NDONE              shared at ADCON0 : 1
var volatile bit    ADCON0_ADON               shared at ADCON0 : 0
-- ------------------------------------------------
var volatile word   ADRES                     shared at 0xFC3
-- ------------------------------------------------
var volatile byte   ADRESL                    shared at 0xFC3
-- ------------------------------------------------
var volatile byte   ADRESH                    shared at 0xFC4
-- ------------------------------------------------
var volatile byte   SSP1CON2                  shared at 0xFC5
var volatile bit    SSP1CON2_GCEN             shared at SSP1CON2 : 7
var volatile bit    SSP1CON2_ACKSTAT          shared at SSP1CON2 : 6
var volatile bit    SSP1CON2_ACKDT            shared at SSP1CON2 : 5
var volatile bit    SSP1CON2_ACKEN            shared at SSP1CON2 : 4
var volatile bit    SSP1CON2_RCEN             shared at SSP1CON2 : 3
var volatile bit    SSP1CON2_PEN              shared at SSP1CON2 : 2
var volatile bit    SSP1CON2_RSEN             shared at SSP1CON2 : 1
var volatile bit    SSP1CON2_SEN              shared at SSP1CON2 : 0
--
alias               SSPCON2                          is SSP1CON2
alias               SSPCON2_GCEN                     is SSP1CON2_GCEN
alias               SSPCON2_ACKSTAT                  is SSP1CON2_ACKSTAT
alias               SSPCON2_ACKDT                    is SSP1CON2_ACKDT
alias               SSPCON2_ACKEN                    is SSP1CON2_ACKEN
alias               SSPCON2_RCEN                     is SSP1CON2_RCEN
alias               SSPCON2_PEN                      is SSP1CON2_PEN
alias               SSPCON2_RSEN                     is SSP1CON2_RSEN
alias               SSPCON2_SEN                      is SSP1CON2_SEN
-- ------------------------------------------------
var volatile byte   SSP1CON1                  shared at 0xFC6
var volatile bit    SSP1CON1_WCOL             shared at SSP1CON1 : 7
var volatile bit    SSP1CON1_SSPOV            shared at SSP1CON1 : 6
var volatile bit    SSP1CON1_SSPEN            shared at SSP1CON1 : 5
var volatile bit    SSP1CON1_CKP              shared at SSP1CON1 : 4
var volatile bit*4  SSP1CON1_SSPM             shared at SSP1CON1 : 0
--
alias               SSPCON1                          is SSP1CON1
alias               SSPCON1_WCOL                     is SSP1CON1_WCOL
alias               SSPCON1_SSPOV                    is SSP1CON1_SSPOV
alias               SSPCON1_SSPEN                    is SSP1CON1_SSPEN
alias               SSPCON1_CKP                      is SSP1CON1_CKP
alias               SSPCON1_SSPM                     is SSP1CON1_SSPM
-- ------------------------------------------------
var volatile byte   SSP1STAT                  shared at 0xFC7
var volatile bit    SSP1STAT_SMP              shared at SSP1STAT : 7
var volatile bit    SSP1STAT_CKE              shared at SSP1STAT : 6
var volatile bit    SSP1STAT_D                shared at SSP1STAT : 5
var volatile bit    SSP1STAT_NA               shared at SSP1STAT : 5
var volatile bit    SSP1STAT_P                shared at SSP1STAT : 4
var volatile bit    SSP1STAT_S                shared at SSP1STAT : 3
var volatile bit    SSP1STAT_R                shared at SSP1STAT : 2
var volatile bit    SSP1STAT_NW               shared at SSP1STAT : 2
var volatile bit    SSP1STAT_UA               shared at SSP1STAT : 1
var volatile bit    SSP1STAT_BF               shared at SSP1STAT : 0
--
alias               SSPSTAT                          is SSP1STAT
alias               SSPSTAT_SMP                      is SSP1STAT_SMP
alias               SSPSTAT_CKE                      is SSP1STAT_CKE
alias               SSPSTAT_D                        is SSP1STAT_D
alias               SSPSTAT_NA                       is SSP1STAT_NA
alias               SSPSTAT_P                        is SSP1STAT_P
alias               SSPSTAT_S                        is SSP1STAT_S
alias               SSPSTAT_R                        is SSP1STAT_R
alias               SSPSTAT_NW                       is SSP1STAT_NW
alias               SSPSTAT_UA                       is SSP1STAT_UA
alias               SSPSTAT_BF                       is SSP1STAT_BF
-- ------------------------------------------------
var volatile byte   SSP1ADD                   shared at 0xFC8
--
alias               SSPADD                           is SSP1ADD
-- ------------------------------------------------
var volatile byte   SSP1BUF                   shared at 0xFC9
--
alias               SSPBUF                           is SSP1BUF
-- ------------------------------------------------
var volatile byte   T2CON                     shared at 0xFCA
var volatile bit*4  T2CON_T2OUTPS             shared at T2CON : 3
var volatile bit    T2CON_TMR2ON              shared at T2CON : 2
var volatile bit*2  T2CON_T2CKPS              shared at T2CON : 0
-- ------------------------------------------------
var volatile byte   PR2                       shared at 0xFCB
-- ------------------------------------------------
var volatile byte   TMR2                      shared at 0xFCC
-- ------------------------------------------------
var volatile byte   T1CON                     shared at 0xFCD
var volatile bit    T1CON_RD16                shared at T1CON : 7
var volatile bit    T1CON_T1RUN               shared at T1CON : 6
var volatile bit*2  T1CON_T1CKPS              shared at T1CON : 4
var volatile bit    T1CON_T1OSCEN             shared at T1CON : 3
var volatile bit    T1CON_NT1SYNC             shared at T1CON : 2
var volatile bit    T1CON_TMR1CS              shared at T1CON : 1
var volatile bit    T1CON_TMR1ON              shared at T1CON : 0
-- ------------------------------------------------
var volatile word   TMR1                      shared at 0xFCE
-- ------------------------------------------------
var volatile byte   TMR1L                     shared at 0xFCE
-- ------------------------------------------------
var volatile byte   TMR1H                     shared at 0xFCF
-- ------------------------------------------------
var volatile byte   RCON                      shared at 0xFD0
var volatile bit    RCON_IPEN                 shared at RCON : 7
var volatile bit    RCON_NCM                  shared at RCON : 5
var volatile bit    RCON_NRI                  shared at RCON : 4
var volatile bit    RCON_NTO                  shared at RCON : 3
var volatile bit    RCON_NPD                  shared at RCON : 2
var volatile bit    RCON_NPOR                 shared at RCON : 1
var volatile bit    RCON_NBOR                 shared at RCON : 0
-- ------------------------------------------------
var volatile byte   CM2CON1                   shared at 0xFD1
var volatile bit    CM2CON1_CON               shared at CM2CON1 : 7
var volatile bit    CM2CON1_COE               shared at CM2CON1 : 6
var volatile bit    CM2CON1_CPOL              shared at CM2CON1 : 5
var volatile bit*2  CM2CON1_EVPOL             shared at CM2CON1 : 3
var volatile bit    CM2CON1_CREF              shared at CM2CON1 : 2
var volatile bit*2  CM2CON1_CCH               shared at CM2CON1 : 0
-- ------------------------------------------------
var volatile byte   CM1CON1                   shared at 0xFD2
var volatile bit    CM1CON1_CON               shared at CM1CON1 : 7
var volatile bit    CM1CON1_COE               shared at CM1CON1 : 6
var volatile bit    CM1CON1_CPOL              shared at CM1CON1 : 5
var volatile bit*2  CM1CON1_EVPOL             shared at CM1CON1 : 3
var volatile bit    CM1CON1_CREF              shared at CM1CON1 : 2
var volatile bit*2  CM1CON1_CCH               shared at CM1CON1 : 0
-- ------------------------------------------------
var volatile byte   OSCCON                    shared at 0xFD3
var volatile bit    OSCCON_IDLEN              shared at OSCCON : 7
var volatile bit*3  OSCCON_IRCF               shared at OSCCON : 4
var volatile bit    OSCCON_OSTS               shared at OSCCON : 3
var volatile bit*2  OSCCON_SCS                shared at OSCCON : 0
-- ------------------------------------------------
var volatile byte   T0CON                     shared at 0xFD5
var volatile bit    T0CON_TMR0ON              shared at T0CON : 7
var volatile bit    T0CON_T08BIT              shared at T0CON : 6
var volatile bit    T0CON_T0CS                shared at T0CON : 5
var volatile bit    T0CON_T0SE                shared at T0CON : 4
var volatile bit    T0CON_PSA                 shared at T0CON : 3
var volatile bit*3  T0CON_T0PS                shared at T0CON : 0
-- ------------------------------------------------
var volatile word   TMR0                      shared at 0xFD6
-- ------------------------------------------------
var volatile byte   TMR0L                     shared at 0xFD6
-- ------------------------------------------------
var volatile byte   TMR0H                     shared at 0xFD7
-- ------------------------------------------------
var volatile byte   STATUS                    shared at 0xFD8
var volatile bit    STATUS_N                  shared at STATUS : 4
var volatile bit    STATUS_OV                 shared at STATUS : 3
var volatile bit    STATUS_Z                  shared at STATUS : 2
var volatile bit    STATUS_DC                 shared at STATUS : 1
var volatile bit    STATUS_C                  shared at STATUS : 0
var volatile byte   _status                   shared at 0xFD8
const        byte   _n                               =  4
const        byte   _ov                              =  3
const        byte   _z                               =  2
const        byte   _dc                              =  1
const        byte   _c                               =  0
const        byte   _banked                          =  1
const        byte   _access                          =  0
-- ------------------------------------------------
var volatile word   FSR2                      shared at 0xFD9
-- ------------------------------------------------
var volatile byte   FSR2L                     shared at 0xFD9
-- ------------------------------------------------
var volatile byte   FSR2H                     shared at 0xFDA
var volatile bit*4  FSR2H_FSR2H               shared at FSR2H : 0
-- ------------------------------------------------
var volatile byte   PLUSW2                    shared at 0xFDB
-- ------------------------------------------------
var volatile byte   PREINC2                   shared at 0xFDC
-- ------------------------------------------------
var volatile byte   POSTDEC2                  shared at 0xFDD
-- ------------------------------------------------
var volatile byte   POSTINC2                  shared at 0xFDE
-- ------------------------------------------------
var volatile byte   INDF2                     shared at 0xFDF
-- ------------------------------------------------
var volatile byte   BSR                       shared at 0xFE0
var volatile bit*4  BSR_BSR                   shared at BSR : 0
-- ------------------------------------------------
var volatile word   FSR1                      shared at 0xFE1
-- ------------------------------------------------
var volatile byte   FSR1L                     shared at 0xFE1
-- ------------------------------------------------
var volatile byte   FSR1H                     shared at 0xFE2
var volatile bit*4  FSR1H_FSR1H               shared at FSR1H : 0
-- ------------------------------------------------
var volatile byte   PLUSW1                    shared at 0xFE3
-- ------------------------------------------------
var volatile byte   PREINC1                   shared at 0xFE4
-- ------------------------------------------------
var volatile byte   POSTDEC1                  shared at 0xFE5
-- ------------------------------------------------
var volatile byte   POSTINC1                  shared at 0xFE6
-- ------------------------------------------------
var volatile byte   INDF1                     shared at 0xFE7
-- ------------------------------------------------
var volatile byte   WREG                      shared at 0xFE8
-- ------------------------------------------------
var volatile word   FSR0                      shared at 0xFE9
var volatile word   _fsr0                     shared at 0xFE9
-- ------------------------------------------------
var volatile byte   FSR0L                     shared at 0xFE9
var volatile byte   _fsr0l                    shared at 0xFE9
-- ------------------------------------------------
var volatile byte   FSR0H                     shared at 0xFEA
var volatile bit*4  FSR0H_FSR0H               shared at FSR0H : 0
var volatile byte   _fsr0h                    shared at 0xFEA
-- ------------------------------------------------
var volatile byte   PLUSW0                    shared at 0xFEB
-- ------------------------------------------------
var volatile byte   PREINC0                   shared at 0xFEC
-- ------------------------------------------------
var volatile byte   POSTDEC0                  shared at 0xFED
-- ------------------------------------------------
var volatile byte   POSTINC0                  shared at 0xFEE
-- ------------------------------------------------
var volatile byte   INDF0                     shared at 0xFEF
var volatile byte   _ind                      shared at 0xFEF
-- ------------------------------------------------
var volatile byte   INTCON3                   shared at 0xFF0
var volatile bit    INTCON3_INT2IP            shared at INTCON3 : 7
var volatile bit    INTCON3_INT1IP            shared at INTCON3 : 6
var volatile bit    INTCON3_INT3IE            shared at INTCON3 : 5
var volatile bit    INTCON3_INT2IE            shared at INTCON3 : 4
var volatile bit    INTCON3_INT1IE            shared at INTCON3 : 3
var volatile bit    INTCON3_INT3IF            shared at INTCON3 : 2
var volatile bit    INTCON3_INT2IF            shared at INTCON3 : 1
var volatile bit    INTCON3_INT1IF            shared at INTCON3 : 0
-- ------------------------------------------------
var volatile byte   INTCON2                   shared at 0xFF1
var volatile bit    INTCON2_NRBPU             shared at INTCON2 : 7
var volatile bit    INTCON2_INTEDG0           shared at INTCON2 : 6
var volatile bit    INTCON2_INTEDG1           shared at INTCON2 : 5
var volatile bit    INTCON2_INTEDG2           shared at INTCON2 : 4
var volatile bit    INTCON2_INTEDG3           shared at INTCON2 : 3
var volatile bit    INTCON2_TMR0IP            shared at INTCON2 : 2
var volatile bit    INTCON2_INT3IP            shared at INTCON2 : 1
var volatile bit    INTCON2_RBIP              shared at INTCON2 : 0
-- ------------------------------------------------
var volatile byte   INTCON                    shared at 0xFF2
var volatile bit    INTCON_GIE                shared at INTCON : 7
var volatile bit    INTCON_GIEH               shared at INTCON : 7
var volatile bit    INTCON_PEIE               shared at INTCON : 6
var volatile bit    INTCON_GIEL               shared at INTCON : 6
var volatile bit    INTCON_TMR0IE             shared at INTCON : 5
var volatile bit    INTCON_INT0IE             shared at INTCON : 4
var volatile bit    INTCON_RBIE               shared at INTCON : 3
var volatile bit    INTCON_TMR0IF             shared at INTCON : 2
var volatile bit    INTCON_INT0IF             shared at INTCON : 1
var volatile bit    INTCON_RBIF               shared at INTCON : 0
-- ------------------------------------------------
var volatile word   PROD                      shared at 0xFF3
-- ------------------------------------------------
var volatile byte   PRODL                     shared at 0xFF3
-- ------------------------------------------------
var volatile byte   PRODH                     shared at 0xFF4
-- ------------------------------------------------
var volatile byte   TABLAT                    shared at 0xFF5
var volatile byte   _tablat                   shared at 0xFF5
-- ------------------------------------------------
var volatile byte*3 TBLPTR                    shared at 0xFF6
var volatile bit    TBLPTR_ACSS               shared at TBLPTR : 5
var volatile byte*3 _tblptr                   shared at 0xFF6
-- ------------------------------------------------
var volatile byte   TBLPTRL                   shared at 0xFF6
-- ------------------------------------------------
var volatile byte   TBLPTRH                   shared at 0xFF7
-- ------------------------------------------------
var volatile byte   TBLPTRU                   shared at 0xFF8
var volatile bit    TBLPTRU_ACSS              shared at TBLPTRU : 5
var volatile bit*5  TBLPTRU_TBLPTRU           shared at TBLPTRU : 0
-- ------------------------------------------------
var volatile byte*3 PCLAT                     shared at 0xFF9
-- ------------------------------------------------
var volatile byte   PCL                       shared at 0xFF9
var volatile byte   _pcl                      shared at 0xFF9
-- ------------------------------------------------
var volatile byte   PCLATH                    shared at 0xFFA
var volatile byte   _pclath                   shared at 0xFFA
-- ------------------------------------------------
var volatile byte   PCLATU                    shared at 0xFFB
var volatile bit*5  PCLATU_PCU                shared at PCLATU : 0
var volatile byte   _pclatu                   shared at 0xFFB
-- ------------------------------------------------
var volatile byte   STKPTR                    shared at 0xFFC
var volatile bit    STKPTR_STKFUL             shared at STKPTR : 7
var volatile bit    STKPTR_STKUNF             shared at STKPTR : 6
var volatile bit*5  STKPTR_STKPTR             shared at STKPTR : 0
-- ------------------------------------------------
var volatile byte*3 TOS                       shared at 0xFFD
-- ------------------------------------------------
var volatile byte   TOSL                      shared at 0xFFD
-- ------------------------------------------------
var volatile byte   TOSH                      shared at 0xFFE
-- ------------------------------------------------
var volatile byte   TOSU                      shared at 0xFFF
var volatile bit*5  TOSU_TOSU                 shared at TOSU : 0
-- ------------------------------------------------
var volatile byte   PMDOUT1L                  shared at 0xF68
-- ------------------------------------------------
var volatile byte   PMDOUT1H                  shared at 0xF69
-- ------------------------------------------------
var volatile byte   _SSP2MSK                  shared at 0xF6E
--
procedure SSP2MSK'put(byte in x) is
   var byte _ssp2con1_saved = SSP2CON1
   SSP2CON1_SSPM = 0b1001
   _SSP2MSK = x
   SSP2CON1 = _ssp2con1_saved
end procedure
function SSP2MSK'get() return byte is
   var  byte  x
   var  byte  _ssp2con1_saved = SSP2CON1
   SSP2CON1_SSPM = 0b1001
   x = _SSP2MSK
   SSP2CON1 = _ssp2con1_saved
   return  x
end function
--
-- ------------------------------------------------
var volatile byte   _CVRCON                   shared at 0xF77
--
procedure CVRCON'put(byte in x) is
   WDTCON_ADSHR = TRUE
   _CVRCON = x
   WDTCON_ADSHR = FALSE
end procedure
function CVRCON'get() return byte is
   var  byte  x
   WDTCON_ADSHR = TRUE
   x = _CVRCON
   WDTCON_ADSHR = FALSE
   return  x
end function
--
procedure CVRCON_CVREN'put(bit in x) is
   pragma inline
   var  bit   y at _CVRCON : 7
   WDTCON_ADSHR = TRUE
   y = x
   WDTCON_ADSHR = FALSE
end procedure
function  CVRCON_CVREN'get() return bit is
   pragma inline
   var  bit   x at _CVRCON : 7
   var  bit   y
   WDTCON_ADSHR = TRUE
   y = x
   WDTCON_ADSHR = FALSE
   return y
end function
--
procedure CVRCON_CVROE'put(bit in x) is
   pragma inline
   var  bit   y at _CVRCON : 6
   WDTCON_ADSHR = TRUE
   y = x
   WDTCON_ADSHR = FALSE
end procedure
function  CVRCON_CVROE'get() return bit is
   pragma inline
   var  bit   x at _CVRCON : 6
   var  bit   y
   WDTCON_ADSHR = TRUE
   y = x
   WDTCON_ADSHR = FALSE
   return y
end function
--
procedure CVRCON_CVRR'put(bit in x) is
   pragma inline
   var  bit   y at _CVRCON : 5
   WDTCON_ADSHR = TRUE
   y = x
   WDTCON_ADSHR = FALSE
end procedure
function  CVRCON_CVRR'get() return bit is
   pragma inline
   var  bit   x at _CVRCON : 5
   var  bit   y
   WDTCON_ADSHR = TRUE
   y = x
   WDTCON_ADSHR = FALSE
   return y
end function
--
procedure CVRCON_CVRSS'put(bit in x) is
   pragma inline
   var  bit   y at _CVRCON : 4
   WDTCON_ADSHR = TRUE
   y = x
   WDTCON_ADSHR = FALSE
end procedure
function  CVRCON_CVRSS'get() return bit is
   pragma inline
   var  bit   x at _CVRCON : 4
   var  bit   y
   WDTCON_ADSHR = TRUE
   y = x
   WDTCON_ADSHR = FALSE
   return y
end function
--
procedure CVRCON_CVR'put(bit*4 in x) is
   pragma inline
   var  bit*4 y at _CVRCON : 0
   WDTCON_ADSHR = TRUE
   y = x
   WDTCON_ADSHR = FALSE
end procedure
function  CVRCON_CVR'get() return bit*4 is
   pragma inline
   var  bit*4 x at _CVRCON : 0
   var  bit*4 y
   WDTCON_ADSHR = TRUE
   y = x
   WDTCON_ADSHR = FALSE
   return y
end function
--
-- ------------------------------------------------
var volatile byte   _ANCON0                   shared at 0xFC1
--
procedure ANCON0'put(byte in x) is
   WDTCON_ADSHR = TRUE
   _ANCON0 = x
   WDTCON_ADSHR = FALSE
end procedure
function ANCON0'get() return byte is
   var  byte  x
   WDTCON_ADSHR = TRUE
   x = _ANCON0
   WDTCON_ADSHR = FALSE
   return  x
end function
--
procedure ANCON0_PCFGL7'put(bit in x) is
   pragma inline
   var  bit   y at _ANCON0 : 7
   WDTCON_ADSHR = TRUE
   y = x
   WDTCON_ADSHR = FALSE
end procedure
function  ANCON0_PCFGL7'get() return bit is
   pragma inline
   var  bit   x at _ANCON0 : 7
   var  bit   y
   WDTCON_ADSHR = TRUE
   y = x
   WDTCON_ADSHR = FALSE
   return y
end function
alias               ANCON0_PCFG7              is ANCON0_PCFGL7
--
procedure ANCON0_PCFGL6'put(bit in x) is
   pragma inline
   var  bit   y at _ANCON0 : 6
   WDTCON_ADSHR = TRUE
   y = x
   WDTCON_ADSHR = FALSE
end procedure
function  ANCON0_PCFGL6'get() return bit is
   pragma inline
   var  bit   x at _ANCON0 : 6
   var  bit   y
   WDTCON_ADSHR = TRUE
   y = x
   WDTCON_ADSHR = FALSE
   return y
end function
alias               ANCON0_PCFG6              is ANCON0_PCFGL6
--
procedure ANCON0_PCFGL5'put(bit in x) is
   pragma inline
   var  bit   y at _ANCON0 : 5
   WDTCON_ADSHR = TRUE
   y = x
   WDTCON_ADSHR = FALSE
end procedure
function  ANCON0_PCFGL5'get() return bit is
   pragma inline
   var  bit   x at _ANCON0 : 5
   var  bit   y
   WDTCON_ADSHR = TRUE
   y = x
   WDTCON_ADSHR = FALSE
   return y
end function
alias               ANCON0_PCFG5              is ANCON0_PCFGL5
--
procedure ANCON0_PCFGL4'put(bit in x) is
   pragma inline
   var  bit   y at _ANCON0 : 4
   WDTCON_ADSHR = TRUE
   y = x
   WDTCON_ADSHR = FALSE
end procedure
function  ANCON0_PCFGL4'get() return bit is
   pragma inline
   var  bit   x at _ANCON0 : 4
   var  bit   y
   WDTCON_ADSHR = TRUE
   y = x
   WDTCON_ADSHR = FALSE
   return y
end function
alias               ANCON0_PCFG4              is ANCON0_PCFGL4
--
procedure ANCON0_PCFGL3'put(bit in x) is
   pragma inline
   var  bit   y at _ANCON0 : 3
   WDTCON_ADSHR = TRUE
   y = x
   WDTCON_ADSHR = FALSE
end procedure
function  ANCON0_PCFGL3'get() return bit is
   pragma inline
   var  bit   x at _ANCON0 : 3
   var  bit   y
   WDTCON_ADSHR = TRUE
   y = x
   WDTCON_ADSHR = FALSE
   return y
end function
alias               ANCON0_PCFG3              is ANCON0_PCFGL3
--
procedure ANCON0_PCFGL2'put(bit in x) is
   pragma inline
   var  bit   y at _ANCON0 : 2
   WDTCON_ADSHR = TRUE
   y = x
   WDTCON_ADSHR = FALSE
end procedure
function  ANCON0_PCFGL2'get() return bit is
   pragma inline
   var  bit   x at _ANCON0 : 2
   var  bit   y
   WDTCON_ADSHR = TRUE
   y = x
   WDTCON_ADSHR = FALSE
   return y
end function
alias               ANCON0_PCFG2              is ANCON0_PCFGL2
--
procedure ANCON0_PCFGL1'put(bit in x) is
   pragma inline
   var  bit   y at _ANCON0 : 1
   WDTCON_ADSHR = TRUE
   y = x
   WDTCON_ADSHR = FALSE
end procedure
function  ANCON0_PCFGL1'get() return bit is
   pragma inline
   var  bit   x at _ANCON0 : 1
   var  bit   y
   WDTCON_ADSHR = TRUE
   y = x
   WDTCON_ADSHR = FALSE
   return y
end function
alias               ANCON0_PCFG1              is ANCON0_PCFGL1
--
procedure ANCON0_PCFGL0'put(bit in x) is
   pragma inline
   var  bit   y at _ANCON0 : 0
   WDTCON_ADSHR = TRUE
   y = x
   WDTCON_ADSHR = FALSE
end procedure
function  ANCON0_PCFGL0'get() return bit is
   pragma inline
   var  bit   x at _ANCON0 : 0
   var  bit   y
   WDTCON_ADSHR = TRUE
   y = x
   WDTCON_ADSHR = FALSE
   return y
end function
alias               ANCON0_PCFG0              is ANCON0_PCFGL0
--
-- ------------------------------------------------
var volatile byte   _ANCON1                   shared at 0xFC2
--
procedure ANCON1'put(byte in x) is
   WDTCON_ADSHR = TRUE
   _ANCON1 = x
   WDTCON_ADSHR = FALSE
end procedure
function ANCON1'get() return byte is
   var  byte  x
   WDTCON_ADSHR = TRUE
   x = _ANCON1
   WDTCON_ADSHR = FALSE
   return  x
end function
--
procedure ANCON1_PCFGH7'put(bit in x) is
   pragma inline
   var  bit   y at _ANCON1 : 7
   WDTCON_ADSHR = TRUE
   y = x
   WDTCON_ADSHR = FALSE
end procedure
function  ANCON1_PCFGH7'get() return bit is
   pragma inline
   var  bit   x at _ANCON1 : 7
   var  bit   y
   WDTCON_ADSHR = TRUE
   y = x
   WDTCON_ADSHR = FALSE
   return y
end function
alias               ANCON1_PCFG15             is ANCON1_PCFGH7
--
procedure ANCON1_PCFGH6'put(bit in x) is
   pragma inline
   var  bit   y at _ANCON1 : 6
   WDTCON_ADSHR = TRUE
   y = x
   WDTCON_ADSHR = FALSE
end procedure
function  ANCON1_PCFGH6'get() return bit is
   pragma inline
   var  bit   x at _ANCON1 : 6
   var  bit   y
   WDTCON_ADSHR = TRUE
   y = x
   WDTCON_ADSHR = FALSE
   return y
end function
alias               ANCON1_PCFG14             is ANCON1_PCFGH6
--
procedure ANCON1_PCFGH5'put(bit in x) is
   pragma inline
   var  bit   y at _ANCON1 : 5
   WDTCON_ADSHR = TRUE
   y = x
   WDTCON_ADSHR = FALSE
end procedure
function  ANCON1_PCFGH5'get() return bit is
   pragma inline
   var  bit   x at _ANCON1 : 5
   var  bit   y
   WDTCON_ADSHR = TRUE
   y = x
   WDTCON_ADSHR = FALSE
   return y
end function
alias               ANCON1_PCFG13             is ANCON1_PCFGH5
--
procedure ANCON1_PCFGH4'put(bit in x) is
   pragma inline
   var  bit   y at _ANCON1 : 4
   WDTCON_ADSHR = TRUE
   y = x
   WDTCON_ADSHR = FALSE
end procedure
function  ANCON1_PCFGH4'get() return bit is
   pragma inline
   var  bit   x at _ANCON1 : 4
   var  bit   y
   WDTCON_ADSHR = TRUE
   y = x
   WDTCON_ADSHR = FALSE
   return y
end function
alias               ANCON1_PCFG12             is ANCON1_PCFGH4
--
procedure ANCON1_PCFGH3'put(bit in x) is
   pragma inline
   var  bit   y at _ANCON1 : 3
   WDTCON_ADSHR = TRUE
   y = x
   WDTCON_ADSHR = FALSE
end procedure
function  ANCON1_PCFGH3'get() return bit is
   pragma inline
   var  bit   x at _ANCON1 : 3
   var  bit   y
   WDTCON_ADSHR = TRUE
   y = x
   WDTCON_ADSHR = FALSE
   return y
end function
alias               ANCON1_PCFG11             is ANCON1_PCFGH3
--
procedure ANCON1_PCFGH2'put(bit in x) is
   pragma inline
   var  bit   y at _ANCON1 : 2
   WDTCON_ADSHR = TRUE
   y = x
   WDTCON_ADSHR = FALSE
end procedure
function  ANCON1_PCFGH2'get() return bit is
   pragma inline
   var  bit   x at _ANCON1 : 2
   var  bit   y
   WDTCON_ADSHR = TRUE
   y = x
   WDTCON_ADSHR = FALSE
   return y
end function
alias               ANCON1_PCFG10             is ANCON1_PCFGH2
--
procedure ANCON1_PCFGH1'put(bit in x) is
   pragma inline
   var  bit   y at _ANCON1 : 1
   WDTCON_ADSHR = TRUE
   y = x
   WDTCON_ADSHR = FALSE
end procedure
function  ANCON1_PCFGH1'get() return bit is
   pragma inline
   var  bit   x at _ANCON1 : 1
   var  bit   y
   WDTCON_ADSHR = TRUE
   y = x
   WDTCON_ADSHR = FALSE
   return y
end function
alias               ANCON1_PCFG9              is ANCON1_PCFGH1
--
procedure ANCON1_PCFGH0'put(bit in x) is
   pragma inline
   var  bit   y at _ANCON1 : 0
   WDTCON_ADSHR = TRUE
   y = x
   WDTCON_ADSHR = FALSE
end procedure
function  ANCON1_PCFGH0'get() return bit is
   pragma inline
   var  bit   x at _ANCON1 : 0
   var  bit   y
   WDTCON_ADSHR = TRUE
   y = x
   WDTCON_ADSHR = FALSE
   return y
end function
alias               ANCON1_PCFG8              is ANCON1_PCFGH0
--
-- ------------------------------------------------
var volatile byte   _SSP1MSK                  shared at 0xFC8
--
procedure SSP1MSK'put(byte in x) is
   var byte _ssp1con1_saved = SSP1CON1
   SSP1CON1_SSPM = 0b1001
   _SSP1MSK = x
   SSP1CON1 = _ssp1con1_saved
end procedure
function SSP1MSK'get() return byte is
   var  byte  x
   var  byte  _ssp1con1_saved = SSP1CON1
   SSP1CON1_SSPM = 0b1001
   x = _SSP1MSK
   SSP1CON1 = _ssp1con1_saved
   return  x
end function
--
alias               SSPMSK                           is SSP1MSK
-- ------------------------------------------------
var volatile byte   _MEMCON                   shared at 0xFCB
--
procedure MEMCON'put(byte in x) is
   WDTCON_ADSHR = TRUE
   _MEMCON = x
   WDTCON_ADSHR = FALSE
end procedure
function MEMCON'get() return byte is
   var  byte  x
   WDTCON_ADSHR = TRUE
   x = _MEMCON
   WDTCON_ADSHR = FALSE
   return  x
end function
--
procedure MEMCON_EBDIS'put(bit in x) is
   pragma inline
   var  bit   y at _MEMCON : 7
   WDTCON_ADSHR = TRUE
   y = x
   WDTCON_ADSHR = FALSE
end procedure
function  MEMCON_EBDIS'get() return bit is
   pragma inline
   var  bit   x at _MEMCON : 7
   var  bit   y
   WDTCON_ADSHR = TRUE
   y = x
   WDTCON_ADSHR = FALSE
   return y
end function
--
procedure MEMCON_WAIT'put(bit*2 in x) is
   pragma inline
   var  bit*2 y at _MEMCON : 4
   WDTCON_ADSHR = TRUE
   y = x
   WDTCON_ADSHR = FALSE
end procedure
function  MEMCON_WAIT'get() return bit*2 is
   pragma inline
   var  bit*2 x at _MEMCON : 4
   var  bit*2 y
   WDTCON_ADSHR = TRUE
   y = x
   WDTCON_ADSHR = FALSE
   return y
end function
--
procedure MEMCON_WM'put(bit*2 in x) is
   pragma inline
   var  bit*2 y at _MEMCON : 0
   WDTCON_ADSHR = TRUE
   y = x
   WDTCON_ADSHR = FALSE
end procedure
function  MEMCON_WM'get() return bit*2 is
   pragma inline
   var  bit*2 x at _MEMCON : 0
   var  bit*2 y
   WDTCON_ADSHR = TRUE
   y = x
   WDTCON_ADSHR = FALSE
   return y
end function
--
-- ------------------------------------------------
var volatile byte   _PADCFG1                  shared at 0xFCC
--
procedure PADCFG1'put(byte in x) is
   WDTCON_ADSHR = TRUE
   _PADCFG1 = x
   WDTCON_ADSHR = FALSE
end procedure
function PADCFG1'get() return byte is
   var  byte  x
   WDTCON_ADSHR = TRUE
   x = _PADCFG1
   WDTCON_ADSHR = FALSE
   return  x
end function
--
procedure PADCFG1_PMPTL'put(bit in x) is
   pragma inline
   var  bit   y at _PADCFG1 : 0
   WDTCON_ADSHR = TRUE
   y = x
   WDTCON_ADSHR = FALSE
end procedure
function  PADCFG1_PMPTL'get() return bit is
   pragma inline
   var  bit   x at _PADCFG1 : 0
   var  bit   y
   WDTCON_ADSHR = TRUE
   y = x
   WDTCON_ADSHR = FALSE
   return y
end function
--
-- ------------------------------------------------
var volatile byte   _ODCON3                   shared at 0xFCD
--
procedure ODCON3'put(byte in x) is
   WDTCON_ADSHR = TRUE
   _ODCON3 = x
   WDTCON_ADSHR = FALSE
end procedure
function ODCON3'get() return byte is
   var  byte  x
   WDTCON_ADSHR = TRUE
   x = _ODCON3
   WDTCON_ADSHR = FALSE
   return  x
end function
--
procedure ODCON3_SPI2OD'put(bit in x) is
   pragma inline
   var  bit   y at _ODCON3 : 1
   WDTCON_ADSHR = TRUE
   y = x
   WDTCON_ADSHR = FALSE
end procedure
function  ODCON3_SPI2OD'get() return bit is
   pragma inline
   var  bit   x at _ODCON3 : 1
   var  bit   y
   WDTCON_ADSHR = TRUE
   y = x
   WDTCON_ADSHR = FALSE
   return y
end function
--
procedure ODCON3_SPI1OD'put(bit in x) is
   pragma inline
   var  bit   y at _ODCON3 : 0
   WDTCON_ADSHR = TRUE
   y = x
   WDTCON_ADSHR = FALSE
end procedure
function  ODCON3_SPI1OD'get() return bit is
   pragma inline
   var  bit   x at _ODCON3 : 0
   var  bit   y
   WDTCON_ADSHR = TRUE
   y = x
   WDTCON_ADSHR = FALSE
   return y
end function
--
-- ------------------------------------------------
var volatile byte   _ODCON2                   shared at 0xFCE
--
procedure ODCON2'put(byte in x) is
   WDTCON_ADSHR = TRUE
   _ODCON2 = x
   WDTCON_ADSHR = FALSE
end procedure
function ODCON2'get() return byte is
   var  byte  x
   WDTCON_ADSHR = TRUE
   x = _ODCON2
   WDTCON_ADSHR = FALSE
   return  x
end function
--
procedure ODCON2_USART2OD'put(bit in x) is
   pragma inline
   var  bit   y at _ODCON2 : 1
   WDTCON_ADSHR = TRUE
   y = x
   WDTCON_ADSHR = FALSE
end procedure
function  ODCON2_USART2OD'get() return bit is
   pragma inline
   var  bit   x at _ODCON2 : 1
   var  bit   y
   WDTCON_ADSHR = TRUE
   y = x
   WDTCON_ADSHR = FALSE
   return y
end function
--
procedure ODCON2_USART1OD'put(bit in x) is
   pragma inline
   var  bit   y at _ODCON2 : 0
   WDTCON_ADSHR = TRUE
   y = x
   WDTCON_ADSHR = FALSE
end procedure
function  ODCON2_USART1OD'get() return bit is
   pragma inline
   var  bit   x at _ODCON2 : 0
   var  bit   y
   WDTCON_ADSHR = TRUE
   y = x
   WDTCON_ADSHR = FALSE
   return y
end function
--
-- ------------------------------------------------
var volatile byte   _ODCON1                   shared at 0xFCF
--
procedure ODCON1'put(byte in x) is
   WDTCON_ADSHR = TRUE
   _ODCON1 = x
   WDTCON_ADSHR = FALSE
end procedure
function ODCON1'get() return byte is
   var  byte  x
   WDTCON_ADSHR = TRUE
   x = _ODCON1
   WDTCON_ADSHR = FALSE
   return  x
end function
--
procedure ODCON1_CCP5OD'put(bit in x) is
   pragma inline
   var  bit   y at _ODCON1 : 4
   WDTCON_ADSHR = TRUE
   y = x
   WDTCON_ADSHR = FALSE
end procedure
function  ODCON1_CCP5OD'get() return bit is
   pragma inline
   var  bit   x at _ODCON1 : 4
   var  bit   y
   WDTCON_ADSHR = TRUE
   y = x
   WDTCON_ADSHR = FALSE
   return y
end function
--
procedure ODCON1_CCP4OD'put(bit in x) is
   pragma inline
   var  bit   y at _ODCON1 : 3
   WDTCON_ADSHR = TRUE
   y = x
   WDTCON_ADSHR = FALSE
end procedure
function  ODCON1_CCP4OD'get() return bit is
   pragma inline
   var  bit   x at _ODCON1 : 3
   var  bit   y
   WDTCON_ADSHR = TRUE
   y = x
   WDTCON_ADSHR = FALSE
   return y
end function
--
procedure ODCON1_ECCP3OD'put(bit in x) is
   pragma inline
   var  bit   y at _ODCON1 : 2
   WDTCON_ADSHR = TRUE
   y = x
   WDTCON_ADSHR = FALSE
end procedure
function  ODCON1_ECCP3OD'get() return bit is
   pragma inline
   var  bit   x at _ODCON1 : 2
   var  bit   y
   WDTCON_ADSHR = TRUE
   y = x
   WDTCON_ADSHR = FALSE
   return y
end function
--
procedure ODCON1_ECCP2OD'put(bit in x) is
   pragma inline
   var  bit   y at _ODCON1 : 1
   WDTCON_ADSHR = TRUE
   y = x
   WDTCON_ADSHR = FALSE
end procedure
function  ODCON1_ECCP2OD'get() return bit is
   pragma inline
   var  bit   x at _ODCON1 : 1
   var  bit   y
   WDTCON_ADSHR = TRUE
   y = x
   WDTCON_ADSHR = FALSE
   return y
end function
--
procedure ODCON1_ECCP1OD'put(bit in x) is
   pragma inline
   var  bit   y at _ODCON1 : 0
   WDTCON_ADSHR = TRUE
   y = x
   WDTCON_ADSHR = FALSE
end procedure
function  ODCON1_ECCP1OD'get() return bit is
   pragma inline
   var  bit   x at _ODCON1 : 0
   var  bit   y
   WDTCON_ADSHR = TRUE
   y = x
   WDTCON_ADSHR = FALSE
   return y
end function
--
-- ------------------------------------------------
var volatile byte   _REFOCON                  shared at 0xFD3
--
procedure REFOCON'put(byte in x) is
   WDTCON_ADSHR = TRUE
   _REFOCON = x
   WDTCON_ADSHR = FALSE
end procedure
function REFOCON'get() return byte is
   var  byte  x
   WDTCON_ADSHR = TRUE
   x = _REFOCON
   WDTCON_ADSHR = FALSE
   return  x
end function
--
procedure REFOCON_ROON'put(bit in x) is
   pragma inline
   var  bit   y at _REFOCON : 7
   WDTCON_ADSHR = TRUE
   y = x
   WDTCON_ADSHR = FALSE
end procedure
function  REFOCON_ROON'get() return bit is
   pragma inline
   var  bit   x at _REFOCON : 7
   var  bit   y
   WDTCON_ADSHR = TRUE
   y = x
   WDTCON_ADSHR = FALSE
   return y
end function
--
procedure REFOCON_ROSSLP'put(bit in x) is
   pragma inline
   var  bit   y at _REFOCON : 5
   WDTCON_ADSHR = TRUE
   y = x
   WDTCON_ADSHR = FALSE
end procedure
function  REFOCON_ROSSLP'get() return bit is
   pragma inline
   var  bit   x at _REFOCON : 5
   var  bit   y
   WDTCON_ADSHR = TRUE
   y = x
   WDTCON_ADSHR = FALSE
   return y
end function
--
procedure REFOCON_ROSEL'put(bit in x) is
   pragma inline
   var  bit   y at _REFOCON : 4
   WDTCON_ADSHR = TRUE
   y = x
   WDTCON_ADSHR = FALSE
end procedure
function  REFOCON_ROSEL'get() return bit is
   pragma inline
   var  bit   x at _REFOCON : 4
   var  bit   y
   WDTCON_ADSHR = TRUE
   y = x
   WDTCON_ADSHR = FALSE
   return y
end function
--
procedure REFOCON_RODIV'put(bit*4 in x) is
   pragma inline
   var  bit*4 y at _REFOCON : 0
   WDTCON_ADSHR = TRUE
   y = x
   WDTCON_ADSHR = FALSE
end procedure
function  REFOCON_RODIV'get() return bit*4 is
   pragma inline
   var  bit*4 x at _REFOCON : 0
   var  bit*4 y
   WDTCON_ADSHR = TRUE
   y = x
   WDTCON_ADSHR = FALSE
   return y
end function
--
--
-- ===================================================
--
-- Special (device specific) constants and procedures
--
const ADC_GROUP = ADC_V9
const byte ADC_NTOTAL_CHANNEL = 8
const byte ADC_ADCS_BITCOUNT  = 3
--
const PPS_GROUP  = PPS_0        -- no Peripheral Pin Selection
--
const word USB_BDT_ADDRESS    = 0x0400
--
-- - - - - - - - - - - - - - - - - - - - - - - - - - -
-- Change analog I/O pins into digital I/O pins.
procedure analog_off() is
   pragma inline
   ANCON0 = 0b1111_1111        -- digital I/O
   ANCON1 = 0b1111_1111        -- digital I/O
end procedure
--
-- - - - - - - - - - - - - - - - - - - - - - - - - - -
-- Disable ADC module
procedure adc_off() is
   pragma inline
   ADCON0 = 0b0000_0000         -- disable ADC
   ADCON1 = 0b0000_0000
end procedure
--
-- - - - - - - - - - - - - - - - - - - - - - - - - - -
-- Disable comparator module
procedure comparator_off() is
   pragma inline
   CM1CON1 = 0b0000_0000       -- disable comparator
   CM2CON1 = 0b0000_0000       -- disable 2nd comparator
end procedure
--
-- - - - - - - - - - - - - - - - - - - - - - - - - - -
-- Switch analog ports to digital mode (if analog module present).
procedure enable_digital_io() is
   pragma inline
   analog_off()
   adc_off()
   comparator_off()
end procedure
--
-- ==================================================
--
-- Symbolic Fuse definitions
-- -------------------------
--
-- CONFIG1L (0x7FF8)
--
pragma fuse_def WDT:0 0x1 {                -- watchdog timer enable bit
       ENABLED = 0x1                       -- enabled
       DISABLED = 0x0                      -- disabled
       }
pragma fuse_def PLLDIV:0 0xE {             -- pll prescaler selection bits
       P1 = 0xE                            -- no prescale (4 mhz oscillator input drives pll directly)
       P2 = 0xC                            -- divide by 2 (8 mhz oscillator input)
       P3 = 0xA                            -- divide by 3 (12 mhz oscillator input)
       P4 = 0x8                            -- divide by 4 (16 mhz oscillator input)
       P5 = 0x6                            -- divide by 5 (20 mhz oscillator input)
       P6 = 0x4                            -- divide by 6 (24 mhz oscillator input)
       P10 = 0x2                           -- divide by 10 (40 mhz oscillator input)
       P12 = 0x0                           -- divide by 12 (48 mhz oscillator input)
       }
pragma fuse_def STVR:0 0x20 {              -- stack overflow/underflow reset enable bit
       ENABLED = 0x20                      -- enabled
       DISABLED = 0x0                      -- disabled
       }
pragma fuse_def XINST:0 0x40 {             -- extended instruction set enable bit
       ENABLED = 0x40                      -- enabled
       DISABLED = 0x0                      -- disabled
       }
pragma fuse_def DEBUG:0 0x80 {             -- background debugger enable bit
       DISABLED = 0x80                     -- disabled
       ENABLED = 0x0                       -- enabled
       }
--
-- CONFIG1H (0x7FF9)
--
pragma fuse_def CPUDIV:1 0x3 {             -- cpu system clock postscaler
       P1 = 0x3                            -- no cpu system clock divide
       P2 = 0x2                            -- cpu system clock divide by 2
       P3 = 0x1                            -- cpu system clock divide by 3
       P6 = 0x0                            -- cpu system clock divide by 6
       }
pragma fuse_def CP0:1 0x4 {                -- code protection bit
       DISABLED = 0x4                      -- disabled
       ENABLED = 0x0                       -- enabled
       }
pragma fuse_def SIGN:1 0x8 {               -- config word signature bit
       NOT_CONDUCATED = 0x8                -- bulk erase of memory not conducated
       AREA_COMPLETE = 0x0                 -- bulk erase of memory area complete
       }
--
-- CONFIG2L (0x7FFA)
--
pragma fuse_def OSC:2 0x7 {                -- oscillator selection bits
       EC_CLKOUT_PLL = 0x7                 -- ec oscillator with pll, clko on ra6, ecpll used by usb
       EC_CLKOUT = 0x6                     -- ec oscillator with clko on ra6, ec used by usb
       HS_PLL = 0x5                        -- hs oscillator, pll enabled, hspll used by usb
       HS = 0x4                            -- hs oscillator, hs used by usb
       INTOSC_CLKOUT_PLL = 0x3             -- intosc with pll enabled, clko on ra6 and port function on ra7
       INTOSC_NOCLKOUT_PLL = 0x2           -- intosc with pll enabled, port function on ra6 and ra7
       INTOSC_CLKOUT = 0x1                 -- intosc, clko on ra6 and port function on ra7
       INTOSC_NOCLKOUT = 0x0               -- intosc, port function on ra6 and ra7
       }
pragma fuse_def FCMEN:2 0x40 {             -- fail-safe clock monitor enable bit
       DISABLED = 0x0                      -- disabled
       ENABLED = 0x40                      -- enabled
       }
pragma fuse_def IESO:2 0x80 {              -- two-speed start-up (internal/external oscillator switchover) control bit
       DISABLED = 0x0                      -- disabled
       ENABLED = 0x80                      -- enabled
       }
--
-- CONFIG2H (0x7FFB)
--
pragma fuse_def WDTPS:3 0xF {              -- watchdog timer postscaler select bits
       P32K = 0xF                          -- 1:32768
       P16K = 0xE                          -- 1:16384
       P8K = 0xD                           -- 1:8192
       P4K = 0xC                           -- 1:4096
       P2K = 0xB                           -- 1:2048
       P1K = 0xA                           -- 1:1024
       P512  = 0x9                         -- 1:512
       P256  = 0x8                         -- 1:256
       P128  = 0x7                         -- 1:128
       P64  = 0x6                          -- 1:64
       P32  = 0x5                          -- 1:32
       P16  = 0x4                          -- 1:16
       P8  = 0x3                           -- 1:8
       P4  = 0x2                           -- 1:4
       P2  = 0x1                           -- 1:2
       P1  = 0x0                           -- 1:1
       }
--
-- CONFIG3L (0x7FFC)
--
pragma fuse_def EASHFT:4 0x8 {             -- external address bus shift enable bit
       ENABLED = 0x8                       -- enabled
       DISABLED = 0x0                      -- disabled
       }
pragma fuse_def PMODE:4 0x30 {             -- external memory bus configuration bits
       EXT = 0x30                          -- microcontroller mode - external bus disabled
       B12 = 0x20                          -- extended microcontroller mode - 12-bit address mode
       B16 = 0x10                          -- extended microcontroller mode - 16-bit address mode
       B20 = 0x0                           -- extended microcontroller mode - 20-bit address mode
       }
pragma fuse_def BW:4 0x40 {                -- data bus width select bit
       B16 = 0x40                          -- 16-bit external bus mode
       B8 = 0x0                            -- 8-bit external bus mode
       }
pragma fuse_def WAIT:4 0x80 {              -- external bus wait enable bit
       DISABLED = 0x80                     -- disabled
       ENABLED = 0x0                       -- enabled
       }
--
-- CONFIG3H (0x7FFD)
--
pragma fuse_def CCP2MUX:5 0x1 {            -- eccp2 mux bit
       pin_C1 = 0x1                        -- eccp2/p2a is multiplexed with rc1
       pin_E7 = 0x0                        -- eccp2/p2a is multiplexed with re7 in microcontroller mode or with rb3 in extended microcontroller mode
       }
pragma fuse_def ECCPMUX:5 0x2 {            -- eccpx mux bit
       pin_E6 = 0x2                        -- eccp1 outputs (p1b/p1c) are multiplexed with re6 and re5; eccp3 outputs (p3b/p3c) are multiplexed with re4 and re3
       pin_H7 = 0x0                        -- eccp1 outputs (p1b/p1c) are multiplexed with rh7 and rh6; eccp3 outputs (p3b/p3c) are multiplexed with rh5 and rh4
       }
pragma fuse_def PMPMUX:5 0x4 {             -- pmp pin multiplex bit
       EMB   = 0x4                         -- pmp pins placed on emb
       PMP   = 0x0                         -- pmp pins placed else where
       }
pragma fuse_def MSSPMASK:5 0x8 {           -- mssp address masking mode select bit
       B7 = 0x8                            -- 7-bit address masking mode enable
       B5 = 0x0                            -- 5-bit address masking mode enable
       }
--
