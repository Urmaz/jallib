-- ===================================================
-- Title: JalV2 device include file for PIC 18F1330
--
-- Author: Rob Hamerling, Copyright (c) 2008..2010, all rights reserved.
--
-- Adapted-by:
--
-- Compiler: 2.4n
--
-- This file is part of jallib  (http://jallib.googlecode.com)
-- Released under the ZLIB license (http://www.opensource.org/licenses/zlib-license.html)
--
-- Description:
--    Device include file for pic18f1330, containing:
--    - Declaration of ports and pins of the chip.
--    - Procedures to force the use of the LATx register
--      when PORTx is addressed.
--    - Symbolic definitions for configuration bits (fuses)
--    - Some device dependent procedures for common
--      operations, like:
--      . enable_digital_io()
--
-- Sources:
--  - x:/mplab846/mplab ide/device/pic18f1330.dev
--  - x:/mplab846/mpasm suite/lkr/18f1330_g.lkr
--
-- Notes:
--  - Created with Dev2Jal Rexx script version 0.0.95
--  - File creation date/time: 7 Mar 2010 10:03
--
-- ===================================================
--
const word DEVICE_ID   = 0x1E20
const byte PICTYPE[]   = "18F1330"
const byte DATASHEET[] = "39758"
const byte PGMSPEC[]   = "39752"
--
-- Vdd Range: 2.000-5.500 Nominal: 5.000
-- Vpp Range: 9.000-13.250 Default: 13.000
--
-- ---------------------------------------------------
--
include chipdef_jallib                  -- common constants
--
pragma  target  cpu   PIC_16            -- (banks=16)
pragma  target  chip  18f1330
pragma  target  bank  0x0100
pragma  stack   31
pragma  code    8192                    -- (bytes)
pragma  eeprom  0xF00000,128
pragma  ID      0x200000,8
pragma  data    0x80-0xFF
pragma  shared  0x0-0x7F
--
var volatile byte _pic_accum shared at 0x7E   -- (compiler)
var volatile byte _pic_isr_w shared at 0x7F   -- (compiler)
--
const word  _FUSES_CT             = 14
const dword _FUSE_BASE[_FUSES_CT] = { 0x300000,
                                      0x300001,
                                      0x300002,
                                      0x300003,
                                      0x300004,
                                      0x300005,
                                      0x300006,
                                      0x300007,
                                      0x300008,
                                      0x300009,
                                      0x30000A,
                                      0x30000B,
                                      0x30000C,
                                      0x30000D }
const byte  _FUSES[_FUSES_CT]     = { 0b_0000_0000,         -- CONFIG1L
                                      0b_1100_1111,         -- CONFIG1H
                                      0b_0001_1111,         -- CONFIG2L
                                      0b_0001_1111,         -- CONFIG2H
                                      0b_0000_1110,         -- CONFIG3L
                                      0b_1000_1001,         -- CONFIG3H
                                      0b_1111_1001,         -- CONFIG4L
                                      0b_0000_0000,         -- CONFIG4H
                                      0b_0000_0011,         -- CONFIG5L
                                      0b_1100_0000,         -- CONFIG5H
                                      0b_0000_0011,         -- CONFIG6L
                                      0b_1110_0000,         -- CONFIG6H
                                      0b_0000_0011,         -- CONFIG7L
                                      0b_0100_0000 }        -- CONFIG7H
--
-- ------------------------------------------------
var volatile byte   PORTA                     shared at 0xF80
var volatile bit    PORTA_RA7                 shared at PORTA : 7
var volatile bit    PORTA_RA6                 shared at PORTA : 6
var volatile bit    PORTA_RA5                 shared at PORTA : 5
var volatile bit    PORTA_RA4                 shared at PORTA : 4
var volatile bit    PORTA_RA3                 shared at PORTA : 3
var volatile bit    PORTA_RA2                 shared at PORTA : 2
var volatile bit    PORTA_RA1                 shared at PORTA : 1
var volatile bit    PORTA_RA0                 shared at PORTA : 0
-- ------------------------------------------------
var volatile byte   PORTB                     shared at 0xF81
var volatile bit    PORTB_RB7                 shared at PORTB : 7
var volatile bit    PORTB_RB6                 shared at PORTB : 6
var volatile bit    PORTB_RB5                 shared at PORTB : 5
var volatile bit    PORTB_RB4                 shared at PORTB : 4
var volatile bit    PORTB_RB3                 shared at PORTB : 3
var volatile bit    PORTB_RB2                 shared at PORTB : 2
var volatile bit    PORTB_RB1                 shared at PORTB : 1
var volatile bit    PORTB_RB0                 shared at PORTB : 0
-- ------------------------------------------------
var volatile byte   OVDCONS                   shared at 0xF82
var volatile bit*6  OVDCONS_POUT              shared at OVDCONS : 0
-- ------------------------------------------------
var volatile byte   OVDCOND                   shared at 0xF83
var volatile bit*6  OVDCOND_POVD              shared at OVDCOND : 0
-- ------------------------------------------------
var volatile byte   DTCON                     shared at 0xF84
var volatile bit*2  DTCON_DTAPS               shared at DTCON : 6
var volatile bit*6  DTCON_DTA                 shared at DTCON : 0
-- ------------------------------------------------
var volatile byte   PWMCON1                   shared at 0xF85
var volatile bit*4  PWMCON1_SEVOPS            shared at PWMCON1 : 4
var volatile bit    PWMCON1_SEVTDIR           shared at PWMCON1 : 3
var volatile bit    PWMCON1_UDIS              shared at PWMCON1 : 1
var volatile bit    PWMCON1_OSYNC             shared at PWMCON1 : 0
-- ------------------------------------------------
var volatile byte   PWMCON0                   shared at 0xF86
var volatile bit*3  PWMCON0_PWMEN             shared at PWMCON0 : 4
var volatile bit*3  PWMCON0_PMOD              shared at PWMCON0 : 0
-- ------------------------------------------------
var volatile byte   SEVTCMPH                  shared at 0xF87
var volatile bit*4  SEVTCMPH_SEVTCMPH         shared at SEVTCMPH : 0
-- ------------------------------------------------
var volatile byte   SEVTCMPL                  shared at 0xF88
-- ------------------------------------------------
var volatile byte   LATA                      shared at 0xF89
--
procedure PORTA'put(byte in x) is
   pragma inline
   LATA = x
end procedure
--
procedure PORTA_low'put(byte in x) is
   pragma inline
   LATA = (PORTA & 0xF0) | (x & 0x0F)
end procedure
function PORTA_low'get() return byte is
   pragma inline
   return (PORTA & 0x0F)
end function
--
procedure PORTA_high'put(byte in x) is
   pragma inline
   LATA = (PORTA & 0x0F) | (x << 4)
end procedure
function PORTA_high'get() return byte is
   pragma inline
   return (PORTA >> 4)
end function
--
var volatile bit    LATA_LATA7                shared at LATA : 7
var volatile bit    pin_A7                    shared at PORTA : 7
alias               pin_OSC1                  is pin_A7
alias               pin_CLKI                  is pin_A7
alias               pin_T1OSI_RA7             is pin_A7
--
procedure pin_A7'put(bit in x at LATA : 7) is
   pragma inline
end procedure
--
var volatile bit    LATA_LATA6                shared at LATA : 6
var volatile bit    pin_A6                    shared at PORTA : 6
alias               pin_OSC2                  is pin_A6
alias               pin_CLKO                  is pin_A6
alias               pin_T1OSO_RA6             is pin_A6
--
procedure pin_A6'put(bit in x at LATA : 6) is
   pragma inline
end procedure
--
var volatile bit    LATA_LATA5                shared at LATA : 5
var volatile bit    pin_A5                    shared at PORTA : 5
alias               pin_FLTA                  is pin_A5
--
procedure pin_A5'put(bit in x at LATA : 5) is
   pragma inline
end procedure
--
var volatile bit    LATA_LATA4                shared at LATA : 4
var volatile bit    pin_A4                    shared at PORTA : 4
alias               pin_T0CKI                 is pin_A4
alias               pin_AN2                   is pin_A4
alias               pin_VREF_POS              is pin_A4
--
procedure pin_A4'put(bit in x at LATA : 4) is
   pragma inline
end procedure
--
var volatile bit    LATA_LATA3                shared at LATA : 3
var volatile bit    pin_A3                    shared at PORTA : 3
alias               pin_RX                    is pin_A3
alias               pin_DT                    is pin_A3
--
procedure pin_A3'put(bit in x at LATA : 3) is
   pragma inline
end procedure
--
var volatile bit    LATA_LATA2                shared at LATA : 2
var volatile bit    pin_A2                    shared at PORTA : 2
alias               pin_TX                    is pin_A2
alias               pin_CK                    is pin_A2
--
procedure pin_A2'put(bit in x at LATA : 2) is
   pragma inline
end procedure
--
var volatile bit    LATA_LATA1                shared at LATA : 1
var volatile bit    pin_A1                    shared at PORTA : 1
alias               pin_AN1                   is pin_A1
alias               pin_INT1                  is pin_A1
alias               pin_KBI1                  is pin_A1
--
procedure pin_A1'put(bit in x at LATA : 1) is
   pragma inline
end procedure
--
var volatile bit    LATA_LATA0                shared at LATA : 0
var volatile bit    pin_A0                    shared at PORTA : 0
alias               pin_AN0                   is pin_A0
alias               pin_INT0                  is pin_A0
alias               pin_KBI0                  is pin_A0
alias               pin_CMP0                  is pin_A0
--
procedure pin_A0'put(bit in x at LATA : 0) is
   pragma inline
end procedure
--
-- ------------------------------------------------
var volatile byte   LATB                      shared at 0xF8A
--
procedure PORTB'put(byte in x) is
   pragma inline
   LATB = x
end procedure
--
procedure PORTB_low'put(byte in x) is
   pragma inline
   LATB = (PORTB & 0xF0) | (x & 0x0F)
end procedure
function PORTB_low'get() return byte is
   pragma inline
   return (PORTB & 0x0F)
end function
--
procedure PORTB_high'put(byte in x) is
   pragma inline
   LATB = (PORTB & 0x0F) | (x << 4)
end procedure
function PORTB_high'get() return byte is
   pragma inline
   return (PORTB >> 4)
end function
--
var volatile bit    LATB_LATB7                shared at LATB : 7
var volatile bit    pin_B7                    shared at PORTB : 7
alias               pin_PWM5                  is pin_B7
alias               pin_PGD                   is pin_B7
--
procedure pin_B7'put(bit in x at LATB : 7) is
   pragma inline
end procedure
--
var volatile bit    LATB_LATB6                shared at LATB : 6
var volatile bit    pin_B6                    shared at PORTB : 6
alias               pin_PWM4                  is pin_B6
alias               pin_PGC                   is pin_B6
--
procedure pin_B6'put(bit in x at LATB : 6) is
   pragma inline
end procedure
--
var volatile bit    LATB_LATB5                shared at LATB : 5
var volatile bit    pin_B5                    shared at PORTB : 5
alias               pin_PWM3                  is pin_B5
--
procedure pin_B5'put(bit in x at LATB : 5) is
   pragma inline
end procedure
--
var volatile bit    LATB_LATB4                shared at LATB : 4
var volatile bit    pin_B4                    shared at PORTB : 4
alias               pin_PWM2                  is pin_B4
--
procedure pin_B4'put(bit in x at LATB : 4) is
   pragma inline
end procedure
--
var volatile bit    LATB_LATB3                shared at LATB : 3
var volatile bit    pin_B3                    shared at PORTB : 3
alias               pin_INT3                  is pin_B3
alias               pin_KBI3                  is pin_B3
alias               pin_CMP1                  is pin_B3
alias               pin_T1OSI_RB3             is pin_B3
--
procedure pin_B3'put(bit in x at LATB : 3) is
   pragma inline
end procedure
--
var volatile bit    LATB_LATB2                shared at LATB : 2
var volatile bit    pin_B2                    shared at PORTB : 2
alias               pin_INT2                  is pin_B2
alias               pin_KBI2                  is pin_B2
alias               pin_CMP2                  is pin_B2
alias               pin_T1OSO_RB2             is pin_B2
--
procedure pin_B2'put(bit in x at LATB : 2) is
   pragma inline
end procedure
--
var volatile bit    LATB_LATB1                shared at LATB : 1
var volatile bit    pin_B1                    shared at PORTB : 1
alias               pin_PWM1                  is pin_B1
--
procedure pin_B1'put(bit in x at LATB : 1) is
   pragma inline
end procedure
--
var volatile bit    LATB_LATB0                shared at LATB : 0
var volatile bit    pin_B0                    shared at PORTB : 0
alias               pin_PWM0                  is pin_B0
--
procedure pin_B0'put(bit in x at LATB : 0) is
   pragma inline
end procedure
--
-- ------------------------------------------------
var volatile byte   FLTCONFIG                 shared at 0xF8B
var volatile bit    FLTCONFIG_BRFEN           shared at FLTCONFIG : 7
var volatile bit    FLTCONFIG_FLTAS           shared at FLTCONFIG : 2
var volatile bit    FLTCONFIG_FLTAMOD         shared at FLTCONFIG : 1
var volatile bit    FLTCONFIG_FLTAEN          shared at FLTCONFIG : 0
-- ------------------------------------------------
var volatile byte   PDC2H                     shared at 0xF8C
var volatile bit*6  PDC2H_PDC2H               shared at PDC2H : 0
-- ------------------------------------------------
var volatile byte   PDC2L                     shared at 0xF8D
-- ------------------------------------------------
var volatile byte   PDC1H                     shared at 0xF8E
var volatile bit*6  PDC1H_PDC1H               shared at PDC1H : 0
-- ------------------------------------------------
var volatile byte   PDC1L                     shared at 0xF8F
-- ------------------------------------------------
var volatile byte   PDC0H                     shared at 0xF90
var volatile bit*6  PDC0H_PDC0H               shared at PDC0H : 0
-- ------------------------------------------------
var volatile byte   PDC0L                     shared at 0xF91
-- ------------------------------------------------
var volatile byte   TRISA                     shared at 0xF92
var volatile byte   PORTA_direction           shared at TRISA
--
procedure PORTA_low_direction'put(byte in x) is
   pragma inline
   TRISA = (TRISA & 0xF0) | (x & 0x0F)
end procedure
function PORTA_low_direction'get() return byte is
   pragma inline
   return (TRISA & 0x0F)
end function
--
procedure PORTA_high_direction'put(byte in x) is
   pragma inline
   TRISA = (TRISA & 0x0F) | (x << 4)
end procedure
function PORTA_high_direction'get() return byte is
   pragma inline
   return (TRISA >> 4)
end function
--
var volatile bit    TRISA_TRISA7              shared at TRISA : 7
var volatile bit    pin_A7_direction          shared at TRISA : 7
alias               pin_OSC1_direction        is pin_A7_direction
alias               pin_CLKI_direction        is pin_A7_direction
alias               pin_T1OSI_RA7_direction   is pin_A7_direction
--
var volatile bit    TRISA_TRISA6              shared at TRISA : 6
var volatile bit    pin_A6_direction          shared at TRISA : 6
alias               pin_OSC2_direction        is pin_A6_direction
alias               pin_CLKO_direction        is pin_A6_direction
alias               pin_T1OSO_RA6_direction   is pin_A6_direction
--
var volatile bit    TRISA_TRISA4              shared at TRISA : 4
var volatile bit    pin_A4_direction          shared at TRISA : 4
alias               pin_T0CKI_direction       is pin_A4_direction
alias               pin_AN2_direction         is pin_A4_direction
alias               pin_VREF_POS_direction    is pin_A4_direction
--
var volatile bit    TRISA_TRISA3              shared at TRISA : 3
var volatile bit    pin_A3_direction          shared at TRISA : 3
alias               pin_RX_direction          is pin_A3_direction
alias               pin_DT_direction          is pin_A3_direction
--
var volatile bit    TRISA_TRISA2              shared at TRISA : 2
var volatile bit    pin_A2_direction          shared at TRISA : 2
alias               pin_TX_direction          is pin_A2_direction
alias               pin_CK_direction          is pin_A2_direction
--
var volatile bit    TRISA_TRISA1              shared at TRISA : 1
var volatile bit    pin_A1_direction          shared at TRISA : 1
alias               pin_AN1_direction         is pin_A1_direction
alias               pin_INT1_direction        is pin_A1_direction
alias               pin_KBI1_direction        is pin_A1_direction
--
var volatile bit    TRISA_TRISA0              shared at TRISA : 0
var volatile bit    pin_A0_direction          shared at TRISA : 0
alias               pin_AN0_direction         is pin_A0_direction
alias               pin_INT0_direction        is pin_A0_direction
alias               pin_KBI0_direction        is pin_A0_direction
alias               pin_CMP0_direction        is pin_A0_direction
--
-- ------------------------------------------------
var volatile byte   TRISB                     shared at 0xF93
var volatile byte   PORTB_direction           shared at TRISB
--
procedure PORTB_low_direction'put(byte in x) is
   pragma inline
   TRISB = (TRISB & 0xF0) | (x & 0x0F)
end procedure
function PORTB_low_direction'get() return byte is
   pragma inline
   return (TRISB & 0x0F)
end function
--
procedure PORTB_high_direction'put(byte in x) is
   pragma inline
   TRISB = (TRISB & 0x0F) | (x << 4)
end procedure
function PORTB_high_direction'get() return byte is
   pragma inline
   return (TRISB >> 4)
end function
--
var volatile bit    TRISB_TRISB7              shared at TRISB : 7
var volatile bit    pin_B7_direction          shared at TRISB : 7
alias               pin_PWM5_direction        is pin_B7_direction
alias               pin_PGD_direction         is pin_B7_direction
--
var volatile bit    TRISB_TRISB6              shared at TRISB : 6
var volatile bit    pin_B6_direction          shared at TRISB : 6
alias               pin_PWM4_direction        is pin_B6_direction
alias               pin_PGC_direction         is pin_B6_direction
--
var volatile bit    TRISB_TRISB5              shared at TRISB : 5
var volatile bit    pin_B5_direction          shared at TRISB : 5
alias               pin_PWM3_direction        is pin_B5_direction
--
var volatile bit    TRISB_TRISB4              shared at TRISB : 4
var volatile bit    pin_B4_direction          shared at TRISB : 4
alias               pin_PWM2_direction        is pin_B4_direction
--
var volatile bit    TRISB_TRISB3              shared at TRISB : 3
var volatile bit    pin_B3_direction          shared at TRISB : 3
alias               pin_INT3_direction        is pin_B3_direction
alias               pin_KBI3_direction        is pin_B3_direction
alias               pin_CMP1_direction        is pin_B3_direction
alias               pin_T1OSI_RB3_direction   is pin_B3_direction
--
var volatile bit    TRISB_TRISB2              shared at TRISB : 2
var volatile bit    pin_B2_direction          shared at TRISB : 2
alias               pin_INT2_direction        is pin_B2_direction
alias               pin_KBI2_direction        is pin_B2_direction
alias               pin_CMP2_direction        is pin_B2_direction
alias               pin_T1OSO_RB2_direction   is pin_B2_direction
--
var volatile bit    TRISB_TRISB1              shared at TRISB : 1
var volatile bit    pin_B1_direction          shared at TRISB : 1
alias               pin_PWM1_direction        is pin_B1_direction
--
var volatile bit    TRISB_TRISB0              shared at TRISB : 0
var volatile bit    pin_B0_direction          shared at TRISB : 0
alias               pin_PWM0_direction        is pin_B0_direction
--
-- ------------------------------------------------
var volatile byte   PTPERH                    shared at 0xF95
var volatile bit*4  PTPERH_PTPERH             shared at PTPERH : 0
-- ------------------------------------------------
var volatile byte   PTPERL                    shared at 0xF96
-- ------------------------------------------------
var volatile byte   PTMRH                     shared at 0xF97
var volatile bit*4  PTMRH_PTMRH               shared at PTMRH : 0
-- ------------------------------------------------
var volatile byte   PTMRL                     shared at 0xF98
-- ------------------------------------------------
var volatile byte   PTCON1                    shared at 0xF99
var volatile bit    PTCON1_PTEN               shared at PTCON1 : 7
var volatile bit    PTCON1_PTDIR              shared at PTCON1 : 6
-- ------------------------------------------------
var volatile byte   PTCON0                    shared at 0xF9A
var volatile bit*4  PTCON0_PTOPS              shared at PTCON0 : 4
var volatile bit*2  PTCON0_PTCKPS             shared at PTCON0 : 2
var volatile bit*2  PTCON0_PTMOD              shared at PTCON0 : 0
-- ------------------------------------------------
var volatile byte   OSCTUNE                   shared at 0xF9B
var volatile bit    OSCTUNE_INTSRC            shared at OSCTUNE : 7
var volatile bit    OSCTUNE_PLLEN             shared at OSCTUNE : 6
var volatile bit*5  OSCTUNE_TUN               shared at OSCTUNE : 0
-- ------------------------------------------------
var volatile byte   PIE1                      shared at 0xF9D
var volatile bit    PIE1_ADIE                 shared at PIE1 : 6
var volatile bit    PIE1_RCIE                 shared at PIE1 : 5
var volatile bit    PIE1_TXIE                 shared at PIE1 : 4
var volatile bit    PIE1_CMP2IE               shared at PIE1 : 3
var volatile bit    PIE1_CMP1IE               shared at PIE1 : 2
var volatile bit    PIE1_CMP0IE               shared at PIE1 : 1
var volatile bit    PIE1_TMR1IE               shared at PIE1 : 0
-- ------------------------------------------------
var volatile byte   PIR1                      shared at 0xF9E
var volatile bit    PIR1_ADIF                 shared at PIR1 : 6
var volatile bit    PIR1_RCIF                 shared at PIR1 : 5
var volatile bit    PIR1_TXIF                 shared at PIR1 : 4
var volatile bit    PIR1_CMP2IF               shared at PIR1 : 3
var volatile bit    PIR1_CMP1IF               shared at PIR1 : 2
var volatile bit    PIR1_CMP0IF               shared at PIR1 : 1
var volatile bit    PIR1_TMR1IF               shared at PIR1 : 0
-- ------------------------------------------------
var volatile byte   IPR1                      shared at 0xF9F
var volatile bit    IPR1_ADIP                 shared at IPR1 : 6
var volatile bit    IPR1_RCIP                 shared at IPR1 : 5
var volatile bit    IPR1_TXIP                 shared at IPR1 : 4
var volatile bit    IPR1_CMP2IP               shared at IPR1 : 3
var volatile bit    IPR1_CMP1IP               shared at IPR1 : 2
var volatile bit    IPR1_CMP0IP               shared at IPR1 : 1
var volatile bit    IPR1_TMR1IP               shared at IPR1 : 0
-- ------------------------------------------------
var volatile byte   PIE2                      shared at 0xFA0
var volatile bit    PIE2_OSCFIE               shared at PIE2 : 7
var volatile bit    PIE2_EEIE                 shared at PIE2 : 4
var volatile bit    PIE2_LVDIE                shared at PIE2 : 2
var volatile bit    PIE2_TMR3IE               shared at PIE2 : 1
-- ------------------------------------------------
var volatile byte   PIR2                      shared at 0xFA1
var volatile bit    PIR2_OSCFIF               shared at PIR2 : 7
var volatile bit    PIR2_EEIF                 shared at PIR2 : 4
var volatile bit    PIR2_LVDIF                shared at PIR2 : 2
var volatile bit    PIR2_TMR3IF               shared at PIR2 : 1
-- ------------------------------------------------
var volatile byte   IPR2                      shared at 0xFA2
var volatile bit    IPR2_OSCFIP               shared at IPR2 : 7
var volatile bit    IPR2_EEIP                 shared at IPR2 : 4
var volatile bit    IPR2_LVDIP                shared at IPR2 : 2
-- ------------------------------------------------
var volatile byte   PIE3                      shared at 0xFA3
var volatile bit    PIE3_PTIF                 shared at PIE3 : 4
-- ------------------------------------------------
var volatile byte   PIR3                      shared at 0xFA4
var volatile bit    PIR3_PTIE                 shared at PIR3 : 4
-- ------------------------------------------------
var volatile byte   IPR3                      shared at 0xFA5
var volatile bit    IPR3_PTIP                 shared at IPR3 : 4
-- ------------------------------------------------
var volatile byte   EECON1                    shared at 0xFA6
var volatile bit    EECON1_EEPGD              shared at EECON1 : 7
var volatile bit    EECON1_CFGS               shared at EECON1 : 6
var volatile bit    EECON1_FREE               shared at EECON1 : 4
var volatile bit    EECON1_WRERR              shared at EECON1 : 3
var volatile bit    EECON1_WREN               shared at EECON1 : 2
var volatile bit    EECON1_WR                 shared at EECON1 : 1
var volatile bit    EECON1_RD                 shared at EECON1 : 0
-- ------------------------------------------------
var volatile byte   EECON2                    shared at 0xFA7
-- ------------------------------------------------
var volatile byte   EEDATA                    shared at 0xFA8
-- ------------------------------------------------
var volatile byte   EEADR                     shared at 0xFA9
-- ------------------------------------------------
var volatile byte   RCSTA                     shared at 0xFAB
var volatile bit    RCSTA_SPEN                shared at RCSTA : 7
var volatile bit    RCSTA_RX9                 shared at RCSTA : 6
var volatile bit    RCSTA_SREN                shared at RCSTA : 5
var volatile bit    RCSTA_CREN                shared at RCSTA : 4
var volatile bit    RCSTA_ADEN                shared at RCSTA : 3
var volatile bit    RCSTA_FERR                shared at RCSTA : 2
var volatile bit    RCSTA_OERR                shared at RCSTA : 1
var volatile bit    RCSTA_RX9D                shared at RCSTA : 0
-- ------------------------------------------------
var volatile byte   TXSTA                     shared at 0xFAC
var volatile bit    TXSTA_CSRC                shared at TXSTA : 7
var volatile bit    TXSTA_TX9                 shared at TXSTA : 6
var volatile bit    TXSTA_TXEN                shared at TXSTA : 5
var volatile bit    TXSTA_SYNC                shared at TXSTA : 4
var volatile bit    TXSTA_SENDB               shared at TXSTA : 3
var volatile bit    TXSTA_BRGH                shared at TXSTA : 2
var volatile bit    TXSTA_TRMT                shared at TXSTA : 1
var volatile bit    TXSTA_TX9D                shared at TXSTA : 0
-- ------------------------------------------------
var volatile byte   TXREG                     shared at 0xFAD
-- ------------------------------------------------
var volatile byte   RCREG                     shared at 0xFAE
-- ------------------------------------------------
var volatile byte   SPBRG                     shared at 0xFAF
-- ------------------------------------------------
var volatile byte   SPBRGH                    shared at 0xFB0
-- ------------------------------------------------
var volatile byte   CMCON                     shared at 0xFB4
var volatile bit    CMCON_C2OUT               shared at CMCON : 7
var volatile bit    CMCON_C1OUT               shared at CMCON : 6
var volatile bit    CMCON_C0OUT               shared at CMCON : 5
var volatile bit*3  CMCON_CMEN                shared at CMCON : 0
-- ------------------------------------------------
var volatile byte   CVRCON                    shared at 0xFB5
var volatile bit    CVRCON_CVREN              shared at CVRCON : 7
var volatile bit    CVRCON_CVRR               shared at CVRCON : 5
var volatile bit    CVRCON_CVRSS              shared at CVRCON : 4
var volatile bit*4  CVRCON_CVR                shared at CVRCON : 0
-- ------------------------------------------------
var volatile byte   BAUDCON                   shared at 0xFB8
var volatile bit    BAUDCON_ABDOVF            shared at BAUDCON : 7
var volatile bit    BAUDCON_RCIDL             shared at BAUDCON : 6
var volatile bit    BAUDCON_SCKP              shared at BAUDCON : 4
var volatile bit    BAUDCON_BRG16             shared at BAUDCON : 3
var volatile bit    BAUDCON_WUE               shared at BAUDCON : 1
var volatile bit    BAUDCON_ABDEN             shared at BAUDCON : 0
-- ------------------------------------------------
var volatile byte   ADCON2                    shared at 0xFC0
var volatile bit    ADCON2_ADFM               shared at ADCON2 : 7
var volatile bit*3  ADCON2_ACQT               shared at ADCON2 : 3
var volatile bit*3  ADCON2_ADCS               shared at ADCON2 : 0
-- ------------------------------------------------
var volatile byte   ADCON1                    shared at 0xFC1
var volatile bit*4  ADCON1_PCFG               shared at ADCON1 : 0
-- ------------------------------------------------
var volatile byte   ADCON0                    shared at 0xFC2
var volatile bit    ADCON0_SEVTEN             shared at ADCON0 : 7
var volatile bit*2  ADCON0_CHS                shared at ADCON0 : 2
var volatile bit    ADCON0_GO                 shared at ADCON0 : 1
var volatile bit    ADCON0_NDONE              shared at ADCON0 : 1
var volatile bit    ADCON0_ADON               shared at ADCON0 : 0
-- ------------------------------------------------
var volatile word   ADRES                     shared at 0xFC3
-- ------------------------------------------------
var volatile byte   ADRESL                    shared at 0xFC3
-- ------------------------------------------------
var volatile byte   ADRESH                    shared at 0xFC4
-- ------------------------------------------------
var volatile byte   T1CON                     shared at 0xFCD
var volatile bit    T1CON_RD16                shared at T1CON : 7
var volatile bit    T1CON_T1RUN               shared at T1CON : 6
var volatile bit*2  T1CON_T1CKPS              shared at T1CON : 4
var volatile bit    T1CON_T1OSCEN             shared at T1CON : 3
var volatile bit    T1CON_NT1SYNC             shared at T1CON : 2
var volatile bit    T1CON_TMR1CS              shared at T1CON : 1
var volatile bit    T1CON_TMR1ON              shared at T1CON : 0
-- ------------------------------------------------
var volatile word   TMR1                      shared at 0xFCE
-- ------------------------------------------------
var volatile byte   TMR1L                     shared at 0xFCE
-- ------------------------------------------------
var volatile byte   TMR1H                     shared at 0xFCF
-- ------------------------------------------------
var volatile byte   RCON                      shared at 0xFD0
var volatile bit    RCON_IPEN                 shared at RCON : 7
var volatile bit    RCON_SBOREN               shared at RCON : 6
var volatile bit    RCON_NRI                  shared at RCON : 4
var volatile bit    RCON_NTO                  shared at RCON : 3
var volatile bit    RCON_NPD                  shared at RCON : 2
var volatile bit    RCON_NPOR                 shared at RCON : 1
var volatile bit    RCON_NBOR                 shared at RCON : 0
-- ------------------------------------------------
var volatile byte   WDTCON                    shared at 0xFD1
var volatile bit    WDTCON_SWDTEN             shared at WDTCON : 0
-- ------------------------------------------------
var volatile byte   LVDCON                    shared at 0xFD2
var volatile bit    LVDCON_IRVST              shared at LVDCON : 5
var volatile bit    LVDCON_LVDEN              shared at LVDCON : 4
var volatile bit*4  LVDCON_LVDL               shared at LVDCON : 0
-- ------------------------------------------------
var volatile byte   OSCCON                    shared at 0xFD3
var volatile bit    OSCCON_IDLEN              shared at OSCCON : 7
var volatile bit*3  OSCCON_IRCF               shared at OSCCON : 4
var volatile bit    OSCCON_OSTS               shared at OSCCON : 3
var volatile bit    OSCCON_IOFS               shared at OSCCON : 2
var volatile bit*2  OSCCON_SCS                shared at OSCCON : 0
-- ------------------------------------------------
var volatile byte   T0CON                     shared at 0xFD5
var volatile bit    T0CON_TMR0ON              shared at T0CON : 7
var volatile bit    T0CON_T08BIT              shared at T0CON : 6
var volatile bit    T0CON_T0CS                shared at T0CON : 5
var volatile bit    T0CON_T0SE                shared at T0CON : 4
var volatile bit    T0CON_PSA                 shared at T0CON : 3
var volatile bit*3  T0CON_T0PS                shared at T0CON : 0
-- ------------------------------------------------
var volatile word   TMR0                      shared at 0xFD6
-- ------------------------------------------------
var volatile byte   TMR0L                     shared at 0xFD6
-- ------------------------------------------------
var volatile byte   TMR0H                     shared at 0xFD7
-- ------------------------------------------------
var volatile byte   STATUS                    shared at 0xFD8
var volatile bit    STATUS_N                  shared at STATUS : 4
var volatile bit    STATUS_OV                 shared at STATUS : 3
var volatile bit    STATUS_Z                  shared at STATUS : 2
var volatile bit    STATUS_DC                 shared at STATUS : 1
var volatile bit    STATUS_C                  shared at STATUS : 0
var volatile byte   _status                   shared at 0xFD8      -- (compiler)
const        byte   _n                        =  4      -- (compiler)
const        byte   _ov                       =  3      -- (compiler)
const        byte   _z                        =  2      -- (compiler)
const        byte   _dc                       =  1      -- (compiler)
const        byte   _c                        =  0      -- (compiler)
const        byte   _banked                   =  1      -- (compiler - use BSR)
const        byte   _access                   =  0      -- (compiler - use ACCESS)
-- ------------------------------------------------
var volatile word   FSR2                      shared at 0xFD9
-- ------------------------------------------------
var volatile byte   FSR2L                     shared at 0xFD9
-- ------------------------------------------------
var volatile byte   FSR2H                     shared at 0xFDA
var volatile bit*4  FSR2H_FSR2H               shared at FSR2H : 0
-- ------------------------------------------------
var volatile byte   PLUSW2                    shared at 0xFDB
-- ------------------------------------------------
var volatile byte   PREINC2                   shared at 0xFDC
-- ------------------------------------------------
var volatile byte   POSTDEC2                  shared at 0xFDD
-- ------------------------------------------------
var volatile byte   POSTINC2                  shared at 0xFDE
-- ------------------------------------------------
var volatile byte   INDF2                     shared at 0xFDF
-- ------------------------------------------------
var volatile byte   BSR                       shared at 0xFE0
var volatile bit*4  BSR_BSR                   shared at BSR : 0
-- ------------------------------------------------
var volatile word   FSR1                      shared at 0xFE1
-- ------------------------------------------------
var volatile byte   FSR1L                     shared at 0xFE1
-- ------------------------------------------------
var volatile byte   FSR1H                     shared at 0xFE2
var volatile bit*4  FSR1H_FSR1H               shared at FSR1H : 0
-- ------------------------------------------------
var volatile byte   PLUSW1                    shared at 0xFE3
-- ------------------------------------------------
var volatile byte   PREINC1                   shared at 0xFE4
-- ------------------------------------------------
var volatile byte   POSTDEC1                  shared at 0xFE5
-- ------------------------------------------------
var volatile byte   POSTINC1                  shared at 0xFE6
-- ------------------------------------------------
var volatile byte   INDF1                     shared at 0xFE7
-- ------------------------------------------------
var volatile byte   WREG                      shared at 0xFE8
-- ------------------------------------------------
var volatile word   FSR0                      shared at 0xFE9
var volatile word   _fsr0                     shared at 0xFE9      -- (compiler)
-- ------------------------------------------------
var volatile byte   FSR0L                     shared at 0xFE9
var volatile byte   _fsr0l                    shared at 0xFE9      -- (compiler)
-- ------------------------------------------------
var volatile byte   FSR0H                     shared at 0xFEA
var volatile bit*4  FSR0H_FSR0H               shared at FSR0H : 0
var volatile byte   _fsr0h                    shared at 0xFEA      -- (compiler)
-- ------------------------------------------------
var volatile byte   PLUSW0                    shared at 0xFEB
-- ------------------------------------------------
var volatile byte   PREINC0                   shared at 0xFEC
-- ------------------------------------------------
var volatile byte   POSTDEC0                  shared at 0xFED
-- ------------------------------------------------
var volatile byte   POSTINC0                  shared at 0xFEE
-- ------------------------------------------------
var volatile byte   INDF0                     shared at 0xFEF
var volatile byte   _ind                      shared at 0xFEF      -- (compiler)
-- ------------------------------------------------
var volatile byte   INTCON3                   shared at 0xFF0
var volatile bit    INTCON3_INT2IP            shared at INTCON3 : 7
var volatile bit    INTCON3_INT1IP            shared at INTCON3 : 6
var volatile bit    INTCON3_INT3IE            shared at INTCON3 : 5
var volatile bit    INTCON3_INT2IE            shared at INTCON3 : 4
var volatile bit    INTCON3_INT1IE            shared at INTCON3 : 3
var volatile bit    INTCON3_INT31F            shared at INTCON3 : 2
var volatile bit    INTCON3_INT2IF            shared at INTCON3 : 1
var volatile bit    INTCON3_INT1IF            shared at INTCON3 : 0
-- ------------------------------------------------
var volatile byte   INTCON2                   shared at 0xFF1
var volatile bit    INTCON2_NRBPU             shared at INTCON2 : 7
var volatile bit    INTCON2_INTEDG0           shared at INTCON2 : 6
var volatile bit    INTCON2_INTEDG1           shared at INTCON2 : 5
var volatile bit    INTCON2_INTEDG2           shared at INTCON2 : 4
var volatile bit    INTCON2_INTEDG3           shared at INTCON2 : 3
var volatile bit    INTCON2_TMR0IP            shared at INTCON2 : 2
var volatile bit    INTCON2_INT3IP            shared at INTCON2 : 1
var volatile bit    INTCON2_RBIP              shared at INTCON2 : 0
-- ------------------------------------------------
var volatile byte   INTCON                    shared at 0xFF2
var volatile bit    INTCON_GIE                shared at INTCON : 7
var volatile bit    INTCON_GIEH               shared at INTCON : 7
var volatile bit    INTCON_PEIE               shared at INTCON : 6
var volatile bit    INTCON_GIEL               shared at INTCON : 6
var volatile bit    INTCON_TMR0IE             shared at INTCON : 5
var volatile bit    INTCON_INT0IE             shared at INTCON : 4
var volatile bit    INTCON_RBIE               shared at INTCON : 3
var volatile bit    INTCON_TMR0IF             shared at INTCON : 2
var volatile bit    INTCON_INT0IF             shared at INTCON : 1
var volatile bit    INTCON_RBIF               shared at INTCON : 0
-- ------------------------------------------------
var volatile word   PROD                      shared at 0xFF3
-- ------------------------------------------------
var volatile byte   PRODL                     shared at 0xFF3
-- ------------------------------------------------
var volatile byte   PRODH                     shared at 0xFF4
-- ------------------------------------------------
var volatile byte   TABLAT                    shared at 0xFF5
var volatile byte   _tablat                   shared at 0xFF5      -- (compiler)
-- ------------------------------------------------
var volatile byte*3 TBLPTR                    shared at 0xFF6
var volatile bit    TBLPTR_ACSS               shared at TBLPTR : 5
var volatile byte*3 _tblptr                   shared at 0xFF6      -- (compiler)
-- ------------------------------------------------
var volatile byte   TBLPTRL                   shared at 0xFF6
-- ------------------------------------------------
var volatile byte   TBLPTRH                   shared at 0xFF7
-- ------------------------------------------------
var volatile byte   TBLPTRU                   shared at 0xFF8
var volatile bit    TBLPTRU_ACSS              shared at TBLPTRU : 5
var volatile bit*5  TBLPTRU_TBLPTRU           shared at TBLPTRU : 0
-- ------------------------------------------------
var volatile byte*3 PCLAT                     shared at 0xFF9
-- ------------------------------------------------
var volatile byte   PCL                       shared at 0xFF9
var volatile byte   _pcl                      shared at 0xFF9      -- (compiler)
-- ------------------------------------------------
var volatile byte   PCLATH                    shared at 0xFFA
var volatile bit*8  PCLATH_PCH                shared at PCLATH : 0
var volatile byte   _pclath                   shared at 0xFFA      -- (compiler)
-- ------------------------------------------------
var volatile byte   PCLATU                    shared at 0xFFB
var volatile bit*5  PCLATU_PCU                shared at PCLATU : 0
var volatile byte   _pclatu                   shared at 0xFFB      -- (compiler)
-- ------------------------------------------------
var volatile byte   STKPTR                    shared at 0xFFC
var volatile bit    STKPTR_STKFUL             shared at STKPTR : 7
var volatile bit    STKPTR_STKUNF             shared at STKPTR : 6
var volatile bit*5  STKPTR_STKPTR             shared at STKPTR : 0
-- ------------------------------------------------
var volatile byte*3 TOS                       shared at 0xFFD
-- ------------------------------------------------
var volatile byte   TOSL                      shared at 0xFFD
-- ------------------------------------------------
var volatile byte   TOSH                      shared at 0xFFE
-- ------------------------------------------------
var volatile byte   TOSU                      shared at 0xFFF
var volatile bit*5  TOSU_TOSU                 shared at TOSU : 0
--
-- ===================================================
--
-- Special (device specific) constants and procedures
--
const ADC_GROUP = ADC_V4
const byte ADC_NTOTAL_CHANNEL = 3
--
-- - - - - - - - - - - - - - - - - - - - - - - - - - -
-- Disable ADC module
procedure adc_off() is
   pragma inline
   ADCON0 = 0b0000_0000         -- disable ADC
   ADCON1 = 0b0000_1111         -- digital I/O
   ADCON2 = 0b0000_0000
end procedure
--
-- - - - - - - - - - - - - - - - - - - - - - - - - - -
-- Disable comparator module
procedure comparator_off() is
   pragma inline
   CMCON  = 0b0000_0111        -- disable comparator
end procedure
--
-- - - - - - - - - - - - - - - - - - - - - - - - - - -
-- Switch analog ports to digital mode (if analog module present).
procedure enable_digital_io() is
   pragma inline
   adc_off()
   comparator_off()
end procedure
--
-- ==================================================
--
-- Symbolic Fuse definitions
-- -------------------------
--
-- CONFIG1H (0x300001)
--
pragma fuse_def OSC:1 0xF {                -- oscillator
       RC_CLKOUT = 0xC                     -- ext rc-clkout on ra6
       INTOSC_CLKOUT = 0x9                 -- int rc-clkout on ra6,port on ra7
       INTOSC_NOCLKOUT = 0x8               -- int rc-port on ra6,port on ra7
       RC_NOCLKOUT = 0x7                   -- ext rc-port on ra6
       HS_PLL = 0x6                        -- hs-pll enabled freq=4xfosc1
       EC_NOCLKOUT = 0x5                   -- ec-port on ra6
       EC_CLKOUT = 0x4                     -- ec-clkout on ra6
       HS = 0x2                            -- hs
       XT = 0x1                            -- xt
       LP = 0x0                            -- lp
       }
pragma fuse_def FCMEN:1 0x40 {             -- fail-safe clock monitor enable
       DISABLED = 0x0                      -- disabled
       ENABLED = 0x40                      -- enabled
       }
pragma fuse_def IESO:1 0x80 {              -- internal external switch over mode
       DISABLED = 0x0                      -- disabled
       ENABLED = 0x80                      -- enabled
       }
--
-- CONFIG2L (0x300002)
--
pragma fuse_def PWRTE:2 0x1 {              -- power up timer
       DISABLED = 0x1                      -- disabled
       ENABLED = 0x0                       -- enabled
       }
pragma fuse_def BROWNOUT:2 0x6 {           -- brown out detect
       ENABLED = 0x6                       -- bor enabled - sboren disabled
       DISABLED = 0x4                      -- bor when device active - sboren disabled
       CONTROL = 0x2                       -- bor controlled with sboren
       }
pragma fuse_def VOLTAGE:2 0x18 {           -- brown out voltage
       V20 = 0x18                          -- 2.0v
       V27 = 0x10                          -- 2.7v
       V42 = 0x8                           -- 4.2v
       V45 = 0x0                           -- 4.5v
       }
--
-- CONFIG2H (0x300003)
--
pragma fuse_def WDT:3 0x1 {                -- watchdog timer
       ENABLED = 0x1                       -- enabled
       DISABLED = 0x0                      -- disabled-controlled by swdten bit
       }
pragma fuse_def WDTPS:3 0x1E {             -- watchdog postscaler
       P32K = 0x1E                         -- 1:32768
       P16K = 0x1C                         -- 1:16384
       P8K = 0x1A                          -- 1:8192
       P4K = 0x18                          -- 1:4096
       P2K = 0x16                          -- 1:2048
       P1K = 0x14                          -- 1:1024
       P512  = 0x12                        -- 1:512
       P256  = 0x10                        -- 1:256
       P128  = 0xE                         -- 1:128
       P64  = 0xC                          -- 1:64
       P32  = 0xA                          -- 1:32
       P16  = 0x8                          -- 1:16
       P8  = 0x6                           -- 1:8
       P4  = 0x4                           -- 1:4
       P2  = 0x2                           -- 1:2
       P1  = 0x0                           -- 1:1
       }
--
-- CONFIG3L (0x300004)
--
pragma fuse_def PWMPIN:4 0x2 {             -- pwm output pin reset
       DISABLED = 0x2                      -- pwm outputs disabled upon reset
       ENABLED = 0x0                       -- pwm outputs drive active states upon reset
       }
pragma fuse_def LPOL:4 0x4 {               -- low-side transistors polarity
       ACTIVE_HIGH = 0x4                   -- pwm 0, 2, 4 and 6 are active high
       ACTIVE_LOW = 0x0                    -- pwm 0, 2, 4 and 6 are active low
       }
pragma fuse_def HPOL:4 0x8 {               -- high-side transistors polarity
       ACTIVE_HIGH = 0x8                   -- pwm 1, 3, 5, and 7 are active high
       ACTIVE_LOW = 0x0                    -- pwm 1, 3, 5, and 7 are active low
       }
--
-- CONFIG3H (0x300005)
--
pragma fuse_def FLTAMUX:5 0x1 {            -- flta mux bit
       pin_A5 = 0x1                        -- flta is muxed onto ra5
       pin_A7 = 0x0                        -- flta is muxed onto ra7
       }
pragma fuse_def T1OSCMUX:5 0x8 {           -- t1osc mux bit
       pin_A6_A7 = 0x8                     -- t1osc reside on ra6 and ra7
       pin_B2_B3 = 0x0                     -- t1osc reside on rb2 and rb3
       }
pragma fuse_def MCLR:5 0x80 {              -- master clear enable
       EXTERNAL = 0x80                     -- mclr enabled, ra5 input disabled
       INTERNAL = 0x0                      -- mclr disabled, ra5 input enabled
       }
--
-- CONFIG4L (0x300006)
--
pragma fuse_def STVR:6 0x1 {               -- stack overflow reset
       ENABLED = 0x1                       -- enabled
       DISABLED = 0x0                      -- disabled
       }
pragma fuse_def BBSIZ:6 0x30 {             -- boot block select bits
       W1K = 0x30                          -- boot block size is 1 kw
       W512 = 0x10                         -- boot block size is 512 w
       W256 = 0x0                          -- boot block size is 256 w
       }
pragma fuse_def XINST:6 0x40 {             -- extended instruction set enable bit
       ENABLED = 0x40                      -- enabled
       DISABLED = 0x0                      -- disabled
       }
pragma fuse_def DEBUG:6 0x80 {             -- background debug
       DISABLED = 0x80                     -- disabled
       ENABLED = 0x0                       -- enabled
       }
--
-- CONFIG5L (0x300008)
--
pragma fuse_def CP0:8 0x1 {                -- code protect 00800-0fff
       DISABLED = 0x1                      -- disabled
       ENABLED = 0x0                       -- enabled
       }
pragma fuse_def CP1:8 0x2 {                -- code protect 01000-01fff
       DISABLED = 0x2                      -- disabled
       ENABLED = 0x0                       -- enabled
       }
--
-- CONFIG5H (0x300009)
--
pragma fuse_def CPB:9 0x40 {               -- code protect boot
       DISABLED = 0x40                     -- disabled
       ENABLED = 0x0                       -- enabled
       }
pragma fuse_def CPD:9 0x80 {               -- data eeprom code protect
       DISABLED = 0x80                     -- disabled
       ENABLED = 0x0                       -- enabled
       }
--
-- CONFIG6L (0x30000A)
--
pragma fuse_def WRT0:10 0x1 {              -- table write protect 00200-00fff
       DISABLED = 0x1                      -- disabled
       ENABLED = 0x0                       -- enabled
       }
pragma fuse_def WRT1:10 0x2 {              -- table write protect 01000-01fff
       DISABLED = 0x2                      -- disabled
       ENABLED = 0x0                       -- enabled
       }
--
-- CONFIG6H (0x30000B)
--
pragma fuse_def WRTC:11 0x20 {             -- config. write protect
       DISABLED = 0x20                     -- disabled
       ENABLED = 0x0                       -- enabled
       }
pragma fuse_def WRTB:11 0x40 {             -- table write protect boot
       DISABLED = 0x40                     -- disabled
       ENABLED = 0x0                       -- enabled
       }
pragma fuse_def WRTD:11 0x80 {             -- data eeprom write protect
       DISABLED = 0x80                     -- disabled
       ENABLED = 0x0                       -- enabled
       }
--
-- CONFIG7L (0x30000C)
--
pragma fuse_def EBTR0:12 0x1 {             -- table read protect 00200-00fff
       DISABLED = 0x1                      -- disabled
       ENABLED = 0x0                       -- enabled
       }
pragma fuse_def EBTR1:12 0x2 {             -- table read protect 01000-01fff
       DISABLED = 0x2                      -- disabled
       ENABLED = 0x0                       -- enabled
       }
--
-- CONFIG7H (0x30000D)
--
pragma fuse_def EBTRB:13 0x40 {            -- table read protect boot
       DISABLED = 0x40                     -- disabled
       ENABLED = 0x0                       -- enabled
       }
--
