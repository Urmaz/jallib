-- ===================================================
-- Title: JalV2 device include file for PIC12LF1552
--
-- Author: Rob Hamerling, Copyright (c) 2008..2013, all rights reserved.
--
-- Adapted-by:
--
-- Revision: $Revision$
--
-- Compiler: 2.4p
--
-- This file is part of jallib  (http://jallib.googlecode.com)
-- Released under the ZLIB license  (http://www.opensource.org/licenses/zlib-license.html)
--
-- Description:
--    Device include file for pic12lf1552, containing:
--    - Declaration of ports and pins of the chip.
--    - Procedures for shadowing of ports and pins
--      to circumvent the read-modify-write problem.
--    - Symbolic definitions for configuration bits (fuses)
--    - Some device dependent procedures for common
--      operations, like:
--      . enable_digital_io()
--
-- Sources:
--  - x:/mplab889/mplab ide/device/pic12lf1552.dev
--
-- Notes:
--  - Created with Dev2Jal Rexx script version 0.1.43
--  - File creation date/time: 4 Mar 2013 09:39
--
-- ===================================================
--
const word DEVICE_ID   = 0x2BC0
const byte PICTYPE[]   = "12LF1552"
const byte DATASHEET[] = "41674B"
--
-- Vdd Range: 1.800-3.600 Nominal: 3.300
-- Vpp Range: 8.000-9.000 Default: 9.000
--
-- ---------------------------------------------------
--
include chipdef_jallib                  -- common constants
--
pragma  target  cpu   PIC_14H            -- (banks=32)
pragma  target  chip  12lf1552
pragma  target  bank  0x0080
pragma  target  page  0x0800
pragma  stack   16
pragma  code    2048
pragma  ID      0x8000,4
pragma  data    0x20-0x7E,0xA0-0xEF,0x120-0x16F
pragma  shared  0x7F-0x7F
--
var volatile byte _pic_accum shared at 0x7F      -- (compiler)
--
const word  _FUSES_CT             = 2
const word  _FUSE_BASE[_FUSES_CT] = { 0x8007,
                                      0x8008 }
const word  _FUSES[_FUSES_CT]     = { 0b_0011_1111_1111_1111,         -- CONFIG1
                                      0b_0011_1111_1111_1111 }        -- CONFIG2
--
-- ------------------------------------------------
var volatile byte   INDF0                     shared at 0x0
var volatile byte   _ind                      shared at 0x0
-- ------------------------------------------------
var volatile byte   INDF1                     shared at 0x1
-- ------------------------------------------------
var volatile byte   PCL                       shared at 0x2
var volatile byte   _pcl                      shared at 0x2
-- ------------------------------------------------
var volatile byte   STATUS                    shared at 0x3
var volatile bit    STATUS_NTO                shared at STATUS : 4
var volatile bit    STATUS_NPD                shared at STATUS : 3
var volatile bit    STATUS_Z                  shared at STATUS : 2
var volatile bit    STATUS_DC                 shared at STATUS : 1
var volatile bit    STATUS_C                  shared at STATUS : 0
var volatile byte   _status                   shared at 0x3
const        byte   _not_to                          =  4
const        byte   _not_pd                          =  3
const        byte   _z                               =  2
const        byte   _dc                              =  1
const        byte   _c                               =  0
-- ------------------------------------------------
var volatile word   FSR0                      shared at 0x4
-- ------------------------------------------------
var volatile byte   FSR0L                     shared at 0x4
var volatile byte   _fsr0l                    shared at 0x4
-- ------------------------------------------------
var volatile byte   FSR0H                     shared at 0x5
var volatile byte   _fsr0h                    shared at 0x5
-- ------------------------------------------------
var volatile word   FSR1                      shared at 0x6
-- ------------------------------------------------
var volatile byte   FSR1L                     shared at 0x6
var volatile byte   _fsr1l                    shared at 0x6
-- ------------------------------------------------
var volatile byte   FSR1H                     shared at 0x7
var volatile byte   _fsr1h                    shared at 0x7
-- ------------------------------------------------
var volatile byte   BSR                       shared at 0x8
var volatile bit*5  BSR_BSR                   shared at BSR : 0
var volatile byte   _bsr                      shared at 0x8
-- ------------------------------------------------
var volatile byte   WREG                      shared at 0x9
-- ------------------------------------------------
var volatile byte   PCLATH                    shared at 0xA
var volatile bit*7  PCLATH_PCLATH             shared at PCLATH : 0
var volatile byte   _pclath                   shared at 0xA
-- ------------------------------------------------
var volatile byte   INTCON                    shared at 0xB
var volatile bit    INTCON_GIE                shared at INTCON : 7
var volatile bit    INTCON_PEIE               shared at INTCON : 6
var volatile bit    INTCON_TMR0IE             shared at INTCON : 5
var volatile bit    INTCON_INTE               shared at INTCON : 4
var volatile bit    INTCON_IOCIE              shared at INTCON : 3
var volatile bit    INTCON_TMR0IF             shared at INTCON : 2
var volatile bit    INTCON_INTF               shared at INTCON : 1
var volatile bit    INTCON_IOCIF              shared at INTCON : 0
-- ------------------------------------------------
var volatile byte   PORTA                            at 0xC
var volatile bit    PORTA_RA5                        at PORTA : 5
var volatile bit    PORTA_RA4                        at PORTA : 4
var volatile bit    PORTA_RA3                        at PORTA : 3
var volatile bit    PORTA_RA2                        at PORTA : 2
var volatile bit    PORTA_RA1                        at PORTA : 1
var volatile bit    PORTA_RA0                        at PORTA : 0
-- ------------------------------------------------
var volatile byte   PIR1                             at 0x11
var volatile bit    PIR1_ADIF                        at PIR1 : 6
var volatile bit    PIR1_SSP1IF                      at PIR1 : 3
alias               PIR1_SSPIF                       is PIR1_SSP1IF
-- ------------------------------------------------
var volatile byte   PIR2                             at 0x12
var volatile bit    PIR2_BCL1IF                      at PIR2 : 3
-- ------------------------------------------------
var volatile byte   TMR0                             at 0x15
-- ------------------------------------------------
var volatile byte   TRISA                            at 0x8C
alias               PORTA_direction                  is TRISA
--
procedure PORTA_low_direction'put(byte in x) is
   pragma inline
   TRISA = (TRISA & 0xF0) | (x & 0x0F)
end procedure
function PORTA_low_direction'get() return byte is
   pragma inline
   return (TRISA & 0x0F)
end function
--
procedure PORTA_high_direction'put(byte in x) is
   pragma inline
   TRISA = (TRISA & 0x0F) | (x << 4)
end procedure
function PORTA_high_direction'get() return byte is
   pragma inline
   return (TRISA >> 4)
end function
--
var volatile bit    TRISA_TRISA5                     at TRISA : 5
alias               pin_A5_direction                 is TRISA_TRISA5
alias               pin_AN4_direction                is pin_A5_direction
alias               pin_ADGRDB_direction             is pin_A5_direction
alias               pin_CLKIN_direction              is pin_A5_direction
--
var volatile bit    TRISA_TRISA4                     at TRISA : 4
alias               pin_A4_direction                 is TRISA_TRISA4
alias               pin_AN3_direction                is pin_A4_direction
alias               pin_ADGRDA_direction             is pin_A4_direction
alias               pin_SDO_RA4_direction            is pin_A4_direction
alias               pin_CLKOUT_direction             is pin_A4_direction
--
var volatile bit    TRISA_TRISA3                     at TRISA : 3
alias               pin_A3_direction                 is TRISA_TRISA3
alias               pin_SS_RA3_direction             is pin_A3_direction
alias               pin_SDA_RA3_direction            is pin_A3_direction
alias               pin_SDI_RA3_direction            is pin_A3_direction
alias               pin_MCLR_direction               is pin_A3_direction
alias               pin_VPP_direction                is pin_A3_direction
--
var volatile bit    TRISA_TRISA2                     at TRISA : 2
alias               pin_A2_direction                 is TRISA_TRISA2
alias               pin_AN2_direction                is pin_A2_direction
alias               pin_ADOUT_direction              is pin_A2_direction
alias               pin_T0CKI_direction              is pin_A2_direction
alias               pin_SDI_RA2_direction            is pin_A2_direction
alias               pin_SDA_RA2_direction            is pin_A2_direction
alias               pin_INT_direction                is pin_A2_direction
--
var volatile bit    TRISA_TRISA1                     at TRISA : 1
alias               pin_A1_direction                 is TRISA_TRISA1
alias               pin_AN1_direction                is pin_A1_direction
alias               pin_VREF_POS_direction           is pin_A1_direction
alias               pin_SCK_direction                is pin_A1_direction
alias               pin_SCL_direction                is pin_A1_direction
alias               pin_ICSPCLK_direction            is pin_A1_direction
--
var volatile bit    TRISA_TRISA0                     at TRISA : 0
alias               pin_A0_direction                 is TRISA_TRISA0
alias               pin_AN0_direction                is pin_A0_direction
alias               pin_SDO_RA0_direction            is pin_A0_direction
alias               pin_SS_RA0_direction             is pin_A0_direction
alias               pin_ICSPDAT_direction            is pin_A0_direction
--
-- ------------------------------------------------
var volatile byte   PIE1                             at 0x91
var volatile bit    PIE1_ADIE                        at PIE1 : 6
var volatile bit    PIE1_SSP1IE                      at PIE1 : 3
alias               PIE1_SSPIE                       is PIE1_SSP1IE
-- ------------------------------------------------
var volatile byte   PIE2                             at 0x92
var volatile bit    PIE2_BCL1IE                      at PIE2 : 3
-- ------------------------------------------------
var volatile byte   OPTION_REG                       at 0x95
var volatile bit    OPTION_REG_NWPUEN                at OPTION_REG : 7
var volatile bit    OPTION_REG_INTEDG                at OPTION_REG : 6
var volatile bit    OPTION_REG_TMR0CS                at OPTION_REG : 5
alias               T0CON_T0CS                       is OPTION_REG_TMR0CS
var volatile bit    OPTION_REG_TMR0SE                at OPTION_REG : 4
alias               T0CON_T0SE                       is OPTION_REG_TMR0SE
var volatile bit    OPTION_REG_PSA                   at OPTION_REG : 3
alias               T0CON_PSA                        is OPTION_REG_PSA
var volatile bit*3  OPTION_REG_PS                    at OPTION_REG : 0
alias               T0CON_T0PS                       is OPTION_REG_PS
-- ------------------------------------------------
var volatile byte   PCON                             at 0x96
var volatile bit    PCON_STKOVF                      at PCON : 7
var volatile bit    PCON_STKUNF                      at PCON : 6
var volatile bit    PCON_NRWDT                       at PCON : 4
var volatile bit    PCON_NRMCLR                      at PCON : 3
var volatile bit    PCON_NRI                         at PCON : 2
var volatile bit    PCON_NPOR                        at PCON : 1
var volatile bit    PCON_NBOR                        at PCON : 0
-- ------------------------------------------------
var volatile byte   WDTCON                           at 0x97
var volatile bit*5  WDTCON_WDTPS                     at WDTCON : 1
var volatile bit    WDTCON_SWDTEN                    at WDTCON : 0
-- ------------------------------------------------
var volatile byte   OSCCON                           at 0x99
var volatile bit    OSCCON_SPLLEN                    at OSCCON : 7
var volatile bit*4  OSCCON_IRCF                      at OSCCON : 3
var volatile bit*2  OSCCON_SCS                       at OSCCON : 0
-- ------------------------------------------------
var volatile byte   OSCSTAT                          at 0x9A
var volatile bit    OSCSTAT_PLLR                     at OSCSTAT : 6
var volatile bit    OSCSTAT_OSTS                     at OSCSTAT : 5
var volatile bit    OSCSTAT_HFIOFR                   at OSCSTAT : 4
var volatile bit    OSCSTAT_LFIOFR                   at OSCSTAT : 1
var volatile bit    OSCSTAT_HFIOFS                   at OSCSTAT : 0
-- ------------------------------------------------
var volatile word   ADRES                            at 0x9B
-- ------------------------------------------------
var volatile byte   ADRESL                           at 0x9B
-- ------------------------------------------------
var volatile byte   ADRESH                           at 0x9C
-- ------------------------------------------------
var volatile byte   ADCON0                           at 0x9D
var volatile bit*5  ADCON0_CHS                       at ADCON0 : 2
var volatile bit    ADCON0_GO                        at ADCON0 : 1
var volatile bit    ADCON0_NDONE                     at ADCON0 : 1
var volatile bit    ADCON0_ADON                      at ADCON0 : 0
-- ------------------------------------------------
var volatile byte   ADCON1                           at 0x9E
var volatile bit    ADCON1_ADFM                      at ADCON1 : 7
var volatile bit*3  ADCON1_ADCS                      at ADCON1 : 4
var volatile bit    ADCON1_ADPREF1                   at ADCON1 : 1
var volatile bit    ADCON1_ADPREF0                   at ADCON1 : 0
-- ------------------------------------------------
var volatile byte   ADCON2                           at 0x9F
var volatile bit*3  ADCON2_TRIGSEL                   at ADCON2 : 4
-- ------------------------------------------------
var volatile byte   LATA                             at 0x10C
--
procedure PORTA'put(byte in x at LATA) is
   pragma inline
end procedure
--
procedure PORTA_low'put(byte in x) is
   pragma inline
   LATA = (LATA & 0xF0) | (x & 0x0F)
end procedure
function PORTA_low'get() return byte is
   pragma inline
   return (PORTA & 0x0F)
end function
--
procedure PORTA_high'put(byte in x) is
   pragma inline
   LATA = (LATA & 0x0F) | (x << 4)
end procedure
function PORTA_high'get() return byte is
   pragma inline
   return (PORTA >> 4)
end function
--
var volatile bit    LATA_LATA5                       at LATA : 5
var volatile bit    pin_A5                           at PORTA : 5
alias               pin_AN4                          is pin_A5
alias               pin_ADGRDB                       is pin_A5
alias               pin_CLKIN                        is pin_A5
--
procedure pin_A5'put(bit in x at LATA : 5) is
   pragma inline
end procedure
--
var volatile bit    LATA_LATA4                       at LATA : 4
var volatile bit    pin_A4                           at PORTA : 4
alias               pin_AN3                          is pin_A4
alias               pin_ADGRDA                       is pin_A4
alias               pin_SDO_RA4                      is pin_A4
alias               pin_CLKOUT                       is pin_A4
--
procedure pin_A4'put(bit in x at LATA : 4) is
   pragma inline
end procedure
--
var volatile bit    pin_A3                           at PORTA : 3
alias               pin_SS_RA3                       is pin_A3
alias               pin_SDA_RA3                      is pin_A3
alias               pin_SDI_RA3                      is pin_A3
alias               pin_MCLR                         is pin_A3
alias               pin_VPP                          is pin_A3
--
var volatile bit    LATA_LATA2                       at LATA : 2
var volatile bit    pin_A2                           at PORTA : 2
alias               pin_AN2                          is pin_A2
alias               pin_ADOUT                        is pin_A2
alias               pin_T0CKI                        is pin_A2
alias               pin_SDI_RA2                      is pin_A2
alias               pin_SDA_RA2                      is pin_A2
alias               pin_INT                          is pin_A2
--
procedure pin_A2'put(bit in x at LATA : 2) is
   pragma inline
end procedure
--
var volatile bit    LATA_LATA1                       at LATA : 1
var volatile bit    pin_A1                           at PORTA : 1
alias               pin_AN1                          is pin_A1
alias               pin_VREF_POS                     is pin_A1
alias               pin_SCK                          is pin_A1
alias               pin_SCL                          is pin_A1
alias               pin_ICSPCLK                      is pin_A1
--
procedure pin_A1'put(bit in x at LATA : 1) is
   pragma inline
end procedure
--
var volatile bit    LATA_LATA0                       at LATA : 0
var volatile bit    pin_A0                           at PORTA : 0
alias               pin_AN0                          is pin_A0
alias               pin_SDO_RA0                      is pin_A0
alias               pin_SS_RA0                       is pin_A0
alias               pin_ICSPDAT                      is pin_A0
--
procedure pin_A0'put(bit in x at LATA : 0) is
   pragma inline
end procedure
--
-- ------------------------------------------------
var volatile byte   BORCON                           at 0x116
var volatile bit    BORCON_SBOREN                    at BORCON : 7
var volatile bit    BORCON_BORFS                     at BORCON : 6
var volatile bit    BORCON_BORRDY                    at BORCON : 0
-- ------------------------------------------------
var volatile byte   FVRCON                           at 0x117
var volatile bit    FVRCON_FVREN                     at FVRCON : 7
var volatile bit    FVRCON_FVRRDY                    at FVRCON : 6
var volatile bit    FVRCON_TSEN                      at FVRCON : 5
var volatile bit    FVRCON_TSRNG                     at FVRCON : 4
var volatile bit    FVRCON_ADFVR1                    at FVRCON : 1
var volatile bit    FVRCON_ADFVR0                    at FVRCON : 0
-- ------------------------------------------------
var volatile byte   APFCON                           at 0x11D
var volatile bit    APFCON_SDOSEL                    at APFCON : 6
var volatile bit    APFCON_SSSEL                     at APFCON : 5
var volatile bit    APFCON_SDSEL                     at APFCON : 4
-- ------------------------------------------------
var volatile byte   ANSELA                           at 0x18C
var volatile bit    ANSELA_ANSA5                     at ANSELA : 5
alias               JANSEL_ANS4                      is ANSELA_ANSA5
var volatile bit    ANSELA_ANSA4                     at ANSELA : 4
alias               JANSEL_ANS3                      is ANSELA_ANSA4
var volatile bit    ANSELA_ANSA2                     at ANSELA : 2
alias               JANSEL_ANS2                      is ANSELA_ANSA2
var volatile bit    ANSELA_ANSA1                     at ANSELA : 1
alias               JANSEL_ANS1                      is ANSELA_ANSA1
var volatile bit    ANSELA_ANSA0                     at ANSELA : 0
alias               JANSEL_ANS0                      is ANSELA_ANSA0
-- ------------------------------------------------
var volatile word   PMADR                            at 0x191
-- ------------------------------------------------
var volatile byte   PMADRL                           at 0x191
-- ------------------------------------------------
var volatile byte   PMADRH                           at 0x192
var volatile bit*7  PMADRH_PMADRH                    at PMADRH : 0
-- ------------------------------------------------
var volatile word   PMDAT                            at 0x193
-- ------------------------------------------------
var volatile byte   PMDATL                           at 0x193
-- ------------------------------------------------
var volatile byte   PMDATH                           at 0x194
var volatile bit*6  PMDATH_PMDATH                    at PMDATH : 0
-- ------------------------------------------------
var volatile byte   PMCON1                           at 0x195
var volatile bit    PMCON1_CFGS                      at PMCON1 : 6
var volatile bit    PMCON1_LWLO                      at PMCON1 : 5
var volatile bit    PMCON1_FREE                      at PMCON1 : 4
var volatile bit    PMCON1_WRERR                     at PMCON1 : 3
var volatile bit    PMCON1_WREN                      at PMCON1 : 2
var volatile bit    PMCON1_WR                        at PMCON1 : 1
var volatile bit    PMCON1_RD                        at PMCON1 : 0
-- ------------------------------------------------
var volatile byte   PMCON2                           at 0x196
-- ------------------------------------------------
var volatile byte   WPUA                             at 0x20C
var volatile bit    WPUA_WPUA5                       at WPUA : 5
var volatile bit    WPUA_WPUA4                       at WPUA : 4
var volatile bit    WPUA_WPUA3                       at WPUA : 3
var volatile bit    WPUA_WPUA2                       at WPUA : 2
var volatile bit    WPUA_WPUA1                       at WPUA : 1
var volatile bit    WPUA_WPUA0                       at WPUA : 0
-- ------------------------------------------------
var volatile byte   SSP1BUF                          at 0x211
--
alias               SSPBUF                           is SSP1BUF
-- ------------------------------------------------
var volatile byte   SSP1ADD                          at 0x212
--
alias               SSPADD                           is SSP1ADD
-- ------------------------------------------------
var volatile byte   SSP1MSK                          at 0x213
--
alias               SSPMSK                           is SSP1MSK
-- ------------------------------------------------
var volatile byte   SSP1STAT                         at 0x214
var volatile bit    SSP1STAT_SMP                     at SSP1STAT : 7
var volatile bit    SSP1STAT_CKE                     at SSP1STAT : 6
var volatile bit    SSP1STAT_D                       at SSP1STAT : 5
var volatile bit    SSP1STAT_NA                      at SSP1STAT : 5
var volatile bit    SSP1STAT_P                       at SSP1STAT : 4
var volatile bit    SSP1STAT_S                       at SSP1STAT : 3
var volatile bit    SSP1STAT_R                       at SSP1STAT : 2
var volatile bit    SSP1STAT_NW                      at SSP1STAT : 2
var volatile bit    SSP1STAT_UA                      at SSP1STAT : 1
var volatile bit    SSP1STAT_BF                      at SSP1STAT : 0
--
alias               SSPSTAT                          is SSP1STAT
alias               SSPSTAT_SMP                      is SSP1STAT_SMP
alias               SSPSTAT_CKE                      is SSP1STAT_CKE
alias               SSPSTAT_D                        is SSP1STAT_D
alias               SSPSTAT_NA                       is SSP1STAT_NA
alias               SSPSTAT_P                        is SSP1STAT_P
alias               SSPSTAT_S                        is SSP1STAT_S
alias               SSPSTAT_R                        is SSP1STAT_R
alias               SSPSTAT_NW                       is SSP1STAT_NW
alias               SSPSTAT_UA                       is SSP1STAT_UA
alias               SSPSTAT_BF                       is SSP1STAT_BF
-- ------------------------------------------------
var volatile byte   SSP1CON1                         at 0x215
var volatile bit    SSP1CON1_WCOL                    at SSP1CON1 : 7
var volatile bit    SSP1CON1_SSPOV                   at SSP1CON1 : 6
var volatile bit    SSP1CON1_SSPEN                   at SSP1CON1 : 5
var volatile bit    SSP1CON1_CKP                     at SSP1CON1 : 4
var volatile bit*4  SSP1CON1_SSPM                    at SSP1CON1 : 0
--
alias               SSPCON1                          is SSP1CON1
alias               SSPCON1_WCOL                     is SSP1CON1_WCOL
alias               SSPCON1_SSPOV                    is SSP1CON1_SSPOV
alias               SSPCON1_SSPEN                    is SSP1CON1_SSPEN
alias               SSPCON1_CKP                      is SSP1CON1_CKP
alias               SSPCON1_SSPM                     is SSP1CON1_SSPM
-- ------------------------------------------------
var volatile byte   SSP1CON2                         at 0x216
var volatile bit    SSP1CON2_GCEN                    at SSP1CON2 : 7
var volatile bit    SSP1CON2_ACKSTAT                 at SSP1CON2 : 6
var volatile bit    SSP1CON2_ACKDT                   at SSP1CON2 : 5
var volatile bit    SSP1CON2_ACKEN                   at SSP1CON2 : 4
var volatile bit    SSP1CON2_RCEN                    at SSP1CON2 : 3
var volatile bit    SSP1CON2_PEN                     at SSP1CON2 : 2
var volatile bit    SSP1CON2_RSEN                    at SSP1CON2 : 1
var volatile bit    SSP1CON2_SEN                     at SSP1CON2 : 0
--
alias               SSPCON2                          is SSP1CON2
alias               SSPCON2_GCEN                     is SSP1CON2_GCEN
alias               SSPCON2_ACKSTAT                  is SSP1CON2_ACKSTAT
alias               SSPCON2_ACKDT                    is SSP1CON2_ACKDT
alias               SSPCON2_ACKEN                    is SSP1CON2_ACKEN
alias               SSPCON2_RCEN                     is SSP1CON2_RCEN
alias               SSPCON2_PEN                      is SSP1CON2_PEN
alias               SSPCON2_RSEN                     is SSP1CON2_RSEN
alias               SSPCON2_SEN                      is SSP1CON2_SEN
-- ------------------------------------------------
var volatile byte   SSP1CON3                         at 0x217
var volatile bit    SSP1CON3_ACKTIM                  at SSP1CON3 : 7
var volatile bit    SSP1CON3_PCIE                    at SSP1CON3 : 6
var volatile bit    SSP1CON3_SCIE                    at SSP1CON3 : 5
var volatile bit    SSP1CON3_BOEN                    at SSP1CON3 : 4
var volatile bit    SSP1CON3_SDAHT                   at SSP1CON3 : 3
var volatile bit    SSP1CON3_SBCDE                   at SSP1CON3 : 2
var volatile bit    SSP1CON3_AHEN                    at SSP1CON3 : 1
var volatile bit    SSP1CON3_DHEN                    at SSP1CON3 : 0
--
alias               SSPCON3                          is SSP1CON3
alias               SSPCON3_ACKTIM                   is SSP1CON3_ACKTIM
alias               SSPCON3_PCIE                     is SSP1CON3_PCIE
alias               SSPCON3_SCIE                     is SSP1CON3_SCIE
alias               SSPCON3_BOEN                     is SSP1CON3_BOEN
alias               SSPCON3_SDAHT                    is SSP1CON3_SDAHT
alias               SSPCON3_SBCDE                    is SSP1CON3_SBCDE
alias               SSPCON3_AHEN                     is SSP1CON3_AHEN
alias               SSPCON3_DHEN                     is SSP1CON3_DHEN
-- ------------------------------------------------
var volatile byte   IOCAP                            at 0x391
var volatile bit*6  IOCAP_IOCAP                      at IOCAP : 0
-- ------------------------------------------------
var volatile byte   IOCAN                            at 0x392
var volatile bit*6  IOCAN_IOCAN                      at IOCAN : 0
-- ------------------------------------------------
var volatile byte   IOCAF                            at 0x393
var volatile bit*6  IOCAF_IOCAF                      at IOCAF : 0
-- ------------------------------------------------
var volatile byte   STATUS_SHAD                      at 0xFE4
var volatile bit    STATUS_SHAD_Z                    at STATUS_SHAD : 2
var volatile bit    STATUS_SHAD_DC                   at STATUS_SHAD : 1
var volatile bit    STATUS_SHAD_C                    at STATUS_SHAD : 0
-- ------------------------------------------------
var volatile byte   WREG_SHAD                        at 0xFE5
-- ------------------------------------------------
var volatile byte   BSR_SHAD                         at 0xFE6
var volatile bit*5  BSR_SHAD_BSR_SHAD                at BSR_SHAD : 0
-- ------------------------------------------------
var volatile byte   PCLATH_SHAD                      at 0xFE7
var volatile bit*7  PCLATH_SHAD_PCLATH_SHAD          at PCLATH_SHAD : 0
-- ------------------------------------------------
var volatile byte   FSR0L_SHAD                       at 0xFE8
-- ------------------------------------------------
var volatile byte   FSR0H_SHAD                       at 0xFE9
-- ------------------------------------------------
var volatile byte   FSR1L_SHAD                       at 0xFEA
-- ------------------------------------------------
var volatile byte   FSR1H_SHAD                       at 0xFEB
-- ------------------------------------------------
var volatile byte   STKPTR                           at 0xFED
var volatile bit*5  STKPTR_STKPTR                    at STKPTR : 0
-- ------------------------------------------------
var volatile byte   TOSL                             at 0xFEE
-- ------------------------------------------------
var volatile byte   TOSH                             at 0xFEF
var volatile bit*7  TOSH_TOSH                        at TOSH : 0
-- ------------------------------------------------
var volatile byte   AADCON0                          at 0x711
var volatile bit*5  AADCON0_CHS                      at AADCON0 : 2
var volatile bit    AADCON0_GO                       at AADCON0 : 1
var volatile bit    AADCON0_NDONE                    at AADCON0 : 1
var volatile bit    AADCON0_ADON                     at AADCON0 : 0
-- ------------------------------------------------
var volatile byte   AADCON1                          at 0x712
var volatile bit    AADCON1_ADFM                     at AADCON1 : 7
var volatile bit*3  AADCON1_ADCS0                    at AADCON1 : 4
var volatile bit*2  AADCON1_ADPREF                   at AADCON1 : 0
-- ------------------------------------------------
var volatile byte   AADCON2                          at 0x713
var volatile bit*3  AADCON2_TRIGSEL                  at AADCON2 : 4
-- ------------------------------------------------
var volatile byte   AADCON3                          at 0x714
var volatile bit    AADCON3_ADEPPOL                  at AADCON3 : 7
var volatile bit    AADCON3_ADIPPOL                  at AADCON3 : 6
var volatile bit    AADCON3_ADOEN                    at AADCON3 : 4
var volatile bit    AADCON3_ADOOEN                   at AADCON3 : 3
var volatile bit    AADCON3_ADIPEN                   at AADCON3 : 1
var volatile bit    AADCON3_ADDSEN                   at AADCON3 : 0
-- ------------------------------------------------
var volatile byte   AADSTAT                          at 0x715
var volatile bit    AADSTAT_ADCONV                   at AADSTAT : 2
var volatile bit*2  AADSTAT_ADSTG                    at AADSTAT : 0
-- ------------------------------------------------
var volatile byte   AADPRE                           at 0x716
var volatile bit*7  AADPRE_ADPRE                     at AADPRE : 0
-- ------------------------------------------------
var volatile byte   AADACQ                           at 0x717
var volatile bit*7  AADACQ_ADACQ                     at AADACQ : 0
-- ------------------------------------------------
var volatile byte   AADGRD                           at 0x718
var volatile bit    AADGRD_GRDBOE                    at AADGRD : 7
var volatile bit    AADGRD_GRDAOE                    at AADGRD : 6
var volatile bit    AADGRD_GRDPOL                    at AADGRD : 5
-- ------------------------------------------------
var volatile byte   AADCAP                           at 0x719
var volatile bit*3  AADCAP_ADDCAP                    at AADCAP : 0
-- ------------------------------------------------
var volatile word   AADRES0                          at 0x71A
-- ------------------------------------------------
var volatile byte   AADRES0L                         at 0x71A
-- ------------------------------------------------
var volatile byte   AADRES0H                         at 0x71B
-- ------------------------------------------------
var volatile word   AADRES1                          at 0x71C
-- ------------------------------------------------
var volatile byte   AADRES1L                         at 0x71C
-- ------------------------------------------------
var volatile byte   AADRES1H                         at 0x71D
--
-- ===================================================
--
-- Special (device specific) constants and procedures
--
const      ADC_GROUP          = ADC_V0
const byte ADC_NTOTAL_CHANNEL = 5
const byte ADC_ADCS_BITCOUNT  = 3
const byte ADC_MAX_RESOLUTION = 10
--
const PPS_GROUP  = PPS_0        -- no Peripheral Pin Selection
--
-- - - - - - - - - - - - - - - - - - - - - - - - - - -
-- Change analog I/O pins into digital I/O pins.
procedure analog_off() is
   pragma inline
   ANSELA = 0b0000_0000        -- digital I/O
end procedure
--
-- - - - - - - - - - - - - - - - - - - - - - - - - - -
-- Disable ADC module
procedure adc_off() is
   pragma inline
   ADCON0 = 0b0000_0000         -- disable ADC
   ADCON1 = 0b0000_0000
   ADCON2 = 0b0000_0000
end procedure
--
-- - - - - - - - - - - - - - - - - - - - - - - - - - -
-- Switch analog ports to digital mode (if analog module present).
procedure enable_digital_io() is
   pragma inline
   analog_off()
   adc_off()
end procedure
--
-- ==================================================
--
-- Symbolic Fuse definitions
-- -------------------------
--
-- CONFIG1 (0x8007)
--
pragma fuse_def OSC:0 0x3 {                -- oscillator selection
       ECH_NOCLKOUT = 0x3                  -- ech, external clock, high power mode (4-20 mhz): device clock supplied to clkin pin
       ECM_NOCLKOUT = 0x2                  -- ecm, external clock, medium power mode (0.5-4 mhz): device clock supplied to clkin pin
       ECL_NOCLKOUT = 0x1                  -- ecl, external clock, low power mode (0-0.5 mhz): device clock supplied to clkin pin
       INTOSC_NOCLKOUT = 0x0               -- intosc oscillator: i/o function on clkin pin
       }
pragma fuse_def WDT:0 0x18 {               -- watchdog timer enable
       ENABLED = 0x18                      -- enabled
       RUNONLY = 0x10                      -- wdt enabled while running and disabled in sleep
       CONTROL = 0x8                       -- wdt controlled by the swdten bit in the wdtcon register
       DISABLED = 0x0                      -- disabled
       }
pragma fuse_def PWRTE:0 0x20 {             -- power-up timer enable
       DISABLED = 0x20                     -- disabled
       ENABLED = 0x0                       -- enabled
       }
pragma fuse_def MCLR:0 0x40 {              -- mclr pin function select
       EXTERNAL = 0x40                     -- enabled
       INTERNAL = 0x0                      -- disabled
       }
pragma fuse_def CP:0 0x80 {                -- flash program memory code protection
       DISABLED = 0x80                     -- disabled
       ENABLED = 0x0                       -- enabled
       }
pragma fuse_def BROWNOUT:0 0x600 {         -- brown-out reset enable
       ENABLED = 0x600                     -- enabled
       RUNONLY = 0x400                     -- brown-out reset enabled while running and disabled in sleep
       CONTROL = 0x200                     -- brown-out reset controlled by the sboren bit in the borcon register
       DISABLED = 0x0                      -- disabled
       }
pragma fuse_def CLKOUTEN:0 0x800 {         -- clock out enable
       DISABLED = 0x800                    -- disabled
       ENABLED = 0x0                       -- enabled
       }
--
-- CONFIG2 (0x8008)
--
pragma fuse_def WRT:1 0x3 {                -- flash memory self-write protection
       NO_PROTECTION = 0x3                 -- disabled
       R0000_01FF = 0x2                    -- 000h to 1ffh write protected, 200h to fffh may be modified by pmcon control
       R0000_07FF = 0x1                    -- 000h to 7ffh write protected, 800h to fffh may be modified by pmcon control
       ALL_PROTECTED = 0x0                 -- 000h to fffh write protected, no addresses may be modified by pmcon control
       }
pragma fuse_def STVR:1 0x200 {             -- stack overflow/underflow reset enable
       ENABLED = 0x200                     -- enabled
       DISABLED = 0x0                      -- disabled
       }
pragma fuse_def VOLTAGE:1 0x400 {          -- brown-out reset voltage selection
       MINIMUM = 0x400                     -- brown-out reset voltage (vbor), low trip point selected.
       MAXIMUM = 0x0                       -- brown-out reset voltage (vbor), high trip point selected.
       }
pragma fuse_def LPBOR:1 0x800 {            -- low-power brown out reset
       DISABLED = 0x800                    -- disabled
       ENABLED = 0x0                       -- enabled
       }
pragma fuse_def LVP:1 0x2000 {             -- low-voltage programming enable
       ENABLED = 0x2000                    -- enabled
       DISABLED = 0x0                      -- disabled
       }
--
