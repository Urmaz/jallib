-- ===================================================
-- Title: JalV2 device include file for pic18f8628
--
-- Author: Rob Hamerling, Copyright (c) 2008..2009, all rights reserved.
--
-- Adapted-by:
--
-- Compiler: >=2.4i
--
-- This file is part of jallib  (http://jallib.googlecode.com)
-- Released under the ZLIB license (http://www.opensource.org/licenses/zlib-license.html)
--
-- Description:
--    Device include file for pic18f8628, containing:
--    - Declaration of ports and pins of the chip.
--    - Procedures to force the use of the LATx register
--      when PORTx is addressed.
--    - Symbolic definitions for config bits (fuses)
--    - Some device dependent procedures for common
--      operations, like:
--      . enable_digital_io()
--
-- Sources:
--  - x:/mplab820/mplab_ide/device/pic18f8628.dev
--  - x:/mplab820/mpasm_suite/lkr/18f8628_g.lkr
--
-- Notes:
--  - Created with Dev2Jal Rexx script version 0.0.58
--  - File creation date/time: 1 Mar 2009 21:50
--
-- ===================================================
--
-- Device-ID: 0x49E0
-- DataSheet: 39646
-- Programming Specifications: 39643
-- Vdd Range: 2.125-5.500 Nominal: 5.000
-- Vpp Range: 5.500-12.500 Default: 11.5000
--
-- ---------------------------------------------------
--
include chipdef_jallib                  -- common constants
--
pragma  target  cpu   PIC_16            -- (banks = 16)
pragma  target  chip  18f8628
pragma  target  bank  0x0100
pragma  stack   31
pragma  code    49152                    -- (words)
pragma  eeprom  0xF00000,1024
pragma  data    0x60-0xFF,0x100-0x1FF,0x200-0x2FF,0x300-0x3FF,0x400-0x4FF
pragma  data    0x500-0x5FF,0x600-0x6FF,0x700-0x7FF,0x800-0x8FF,0x900-0x9FF
pragma  data    0xA00-0xAFF,0xB00-0xBFF,0xC00-0xCFF,0xD00-0xDFF,0xE00-0xEFF
pragma  data    0xF00-0xF5F
pragma  shared  0x0-0x5F
--
var volatile byte _pic_accum shared at 0x5E   -- (compiler)
var volatile byte _pic_isr_w shared at 0x5F   -- (compiler)
--
const word  _FUSES_CT             = 14
const dword _FUSE_BASE[_FUSES_CT] = { 0x300000,
                                      0x300001,
                                      0x300002,
                                      0x300003,
                                      0x300004,
                                      0x300005,
                                      0x300006,
                                      0x300007,
                                      0x300008,
                                      0x300009,
                                      0x30000A,
                                      0x30000B,
                                      0x30000C,
                                      0x30000D }
const byte  _FUSES[_FUSES_CT]     = { 0x00,
                                      0xCF,
                                      0x1F,
                                      0x1F,
                                      0xF3,
                                      0x87,
                                      0xF5,
                                      0x00,
                                      0x3F,
                                      0xC0,
                                      0x3F,
                                      0xE0,
                                      0x3F,
                                      0x40 }
--
const word  _ID_CT                = 8
const dword _ID_BASE[_ID_CT]      = { 0x200000,
                                      0x200001,
                                      0x200002,
                                      0x200003,
                                      0x200004,
                                      0x200005,
                                      0x200006,
                                      0x200007 }
const byte  _ID[_ID_CT]           = { 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00 }
--
-- ------------------------------------------------
var volatile byte   SSP2CON2             shared at 0xF62
var volatile bit    SSP2CON2_GCEN        shared at SSP2CON2 : 7
var volatile bit    SSP2CON2_ACKSTAT     shared at SSP2CON2 : 6
var volatile bit    SSP2CON2_ACKDT       shared at SSP2CON2 : 5
var volatile bit    SSP2CON2_ACKEN       shared at SSP2CON2 : 4
var volatile bit    SSP2CON2_RCEN        shared at SSP2CON2 : 3
var volatile bit    SSP2CON2_PEN         shared at SSP2CON2 : 2
var volatile bit    SSP2CON2_RSEN        shared at SSP2CON2 : 1
var volatile bit    SSP2CON2_SEN         shared at SSP2CON2 : 0
-- ------------------------------------------------
var volatile byte   SSP2CON              shared at 0xF63
var volatile bit    SSP2CON_WCOL         shared at SSP2CON : 7
var volatile bit    SSP2CON_SSPOV        shared at SSP2CON : 6
var volatile bit    SSP2CON_SSPEN        shared at SSP2CON : 5
var volatile bit    SSP2CON_CKP          shared at SSP2CON : 4
var volatile bit*4  SSP2CON_SSPM         shared at SSP2CON : 0
-- ------------------------------------------------
var volatile byte   SSP2STAT             shared at 0xF64
var volatile bit    SSP2STAT_SMP         shared at SSP2STAT : 7
var volatile bit    SSP2STAT_CKE         shared at SSP2STAT : 6
var volatile bit    SSP2STAT_D           shared at SSP2STAT : 5
var volatile bit    SSP2STAT_NA          shared at SSP2STAT : 5
var volatile bit    SSP2STAT_P           shared at SSP2STAT : 4
var volatile bit    SSP2STAT_S           shared at SSP2STAT : 3
var volatile bit    SSP2STAT_R           shared at SSP2STAT : 2
var volatile bit    SSP2STAT_NW          shared at SSP2STAT : 2
var volatile bit    SSP2STAT_UA          shared at SSP2STAT : 1
var volatile bit    SSP2STAT_BF          shared at SSP2STAT : 0
-- ------------------------------------------------
var volatile byte   SSP2ADD              shared at 0xF65
var volatile byte   SSP2ADD_SSPADD       shared at SSP2ADD
-- ------------------------------------------------
var volatile byte   SSP2BUF              shared at 0xF66
var volatile byte   SSP2BUF_SSPBUF       shared at SSP2BUF
-- ------------------------------------------------
var volatile byte   ECCP2DEL             shared at 0xF67
var volatile bit    ECCP2DEL_P2RSEN      shared at ECCP2DEL : 7
var volatile bit*7  ECCP2DEL_P2DC        shared at ECCP2DEL : 0
-- ------------------------------------------------
var volatile byte   ECCP2AS              shared at 0xF68
var volatile bit    ECCP2AS_ECCP2ASE     shared at ECCP2AS : 7
var volatile bit*3  ECCP2AS_ECCP2AS      shared at ECCP2AS : 4
var volatile bit*2  ECCP2AS_PSS2AC       shared at ECCP2AS : 2
var volatile bit*2  ECCP2AS_PSS2BD       shared at ECCP2AS : 0
-- ------------------------------------------------
var volatile byte   ECCP3DEL             shared at 0xF69
var volatile bit    ECCP3DEL_P3RSEN      shared at ECCP3DEL : 7
var volatile bit*7  ECCP3DEL_P3DC        shared at ECCP3DEL : 0
-- ------------------------------------------------
var volatile byte   ECCP3AS              shared at 0xF6A
var volatile bit    ECCP3AS_ECCP3ASE     shared at ECCP3AS : 7
var volatile bit*3  ECCP3AS_ECCP3AS      shared at ECCP3AS : 4
var volatile bit*2  ECCP3AS_PSS3AC       shared at ECCP3AS : 2
var volatile bit*2  ECCP3AS_PSS3BD       shared at ECCP3AS : 0
-- ------------------------------------------------
var volatile byte   RCSTA2               shared at 0xF6B
var volatile bit    RCSTA2_SPEN          shared at RCSTA2 : 7
var volatile bit    RCSTA2_RX9           shared at RCSTA2 : 6
var volatile bit    RCSTA2_SREN          shared at RCSTA2 : 5
var volatile bit    RCSTA2_CREN          shared at RCSTA2 : 4
var volatile bit    RCSTA2_ADDEN         shared at RCSTA2 : 3
var volatile bit    RCSTA2_FERR          shared at RCSTA2 : 2
var volatile bit    RCSTA2_OERR          shared at RCSTA2 : 1
var volatile bit    RCSTA2_RX9D          shared at RCSTA2 : 0
-- ------------------------------------------------
var volatile byte   TXSTA2               shared at 0xF6C
var volatile bit    TXSTA2_CSRC          shared at TXSTA2 : 7
var volatile bit    TXSTA2_TX9           shared at TXSTA2 : 6
var volatile bit    TXSTA2_TXEN          shared at TXSTA2 : 5
var volatile bit    TXSTA2_SYNC          shared at TXSTA2 : 4
var volatile bit    TXSTA2_SENDB         shared at TXSTA2 : 3
var volatile bit    TXSTA2_BRGH          shared at TXSTA2 : 2
var volatile bit    TXSTA2_TRMT          shared at TXSTA2 : 1
var volatile bit    TXSTA2_TX9D          shared at TXSTA2 : 0
-- ------------------------------------------------
var volatile byte   TXREG2               shared at 0xF6D
var volatile byte   TXREG2_TXREG         shared at TXREG2
-- ------------------------------------------------
var volatile byte   RCREG2               shared at 0xF6E
var volatile byte   RCREG2_RCREG         shared at RCREG2
-- ------------------------------------------------
var volatile byte   SPBRG2               shared at 0xF6F
var volatile byte   SPBRG2_SPBRG         shared at SPBRG2
-- ------------------------------------------------
var volatile byte   CCP5CON              shared at 0xF70
var volatile bit*2  CCP5CON_DC5B         shared at CCP5CON : 4
var volatile bit*4  CCP5CON_CCP5M        shared at CCP5CON : 0
-- ------------------------------------------------
var volatile word   CCPR5                shared at 0xF71
-- ------------------------------------------------
var volatile byte   CCPR5L               shared at 0xF71
-- ------------------------------------------------
var volatile byte   CCPR5H               shared at 0xF72
-- ------------------------------------------------
var volatile byte   CCP4CON              shared at 0xF73
var volatile bit*2  CCP4CON_DC4B         shared at CCP4CON : 4
var volatile bit*4  CCP4CON_CCP4M        shared at CCP4CON : 0
-- ------------------------------------------------
var volatile word   CCPR4                shared at 0xF74
-- ------------------------------------------------
var volatile byte   CCPR4L               shared at 0xF74
-- ------------------------------------------------
var volatile byte   CCPR4H               shared at 0xF75
-- ------------------------------------------------
var volatile byte   T4CON                shared at 0xF76
var volatile bit*4  T4CON_TOUTPS         shared at T4CON : 3
var volatile bit    T4CON_TMR4ON         shared at T4CON : 2
var volatile bit*2  T4CON_T4CKPS         shared at T4CON : 0
-- ------------------------------------------------
var volatile byte   PR4                  shared at 0xF77
-- ------------------------------------------------
var volatile byte   TMR4                 shared at 0xF78
-- ------------------------------------------------
var volatile byte   ECCP1DEL             shared at 0xF79
var volatile bit    ECCP1DEL_P1RSEN      shared at ECCP1DEL : 7
var volatile bit*7  ECCP1DEL_P1DC        shared at ECCP1DEL : 0
-- ------------------------------------------------
var volatile byte   BAUDCON2             shared at 0xF7C
var volatile bit    BAUDCON2_RCMT        shared at BAUDCON2 : 6
var volatile bit    BAUDCON2_SCKP        shared at BAUDCON2 : 4
var volatile bit    BAUDCON2_BRG16       shared at BAUDCON2 : 3
var volatile bit    BAUDCON2_WUE         shared at BAUDCON2 : 1
var volatile bit    BAUDCON2_ABDEN       shared at BAUDCON2 : 0
-- ------------------------------------------------
var volatile byte   SPBRGH2              shared at 0xF7D
-- ------------------------------------------------
var volatile byte   BAUDCON1             shared at 0xF7E
var volatile bit    BAUDCON1_RCMT        shared at BAUDCON1 : 6
var volatile bit    BAUDCON1_SCKP        shared at BAUDCON1 : 4
var volatile bit    BAUDCON1_BRG16       shared at BAUDCON1 : 3
var volatile bit    BAUDCON1_WUE         shared at BAUDCON1 : 1
var volatile bit    BAUDCON1_ABDEN       shared at BAUDCON1 : 0
-- ------------------------------------------------
var volatile byte   SPBRGH1              shared at 0xF7F
-- ------------------------------------------------
var volatile byte   PORTA                shared at 0xF80
var volatile bit    PORTA_RA7            shared at PORTA : 7
var volatile bit    PORTA_RA6            shared at PORTA : 6
var volatile bit    PORTA_RA5            shared at PORTA : 5
var volatile bit    PORTA_RA4            shared at PORTA : 4
var volatile bit    PORTA_RA3            shared at PORTA : 3
var volatile bit    PORTA_RA2            shared at PORTA : 2
var volatile bit    PORTA_RA1            shared at PORTA : 1
var volatile bit    PORTA_RA0            shared at PORTA : 0
-- ------------------------------------------------
var volatile byte   PORTB                shared at 0xF81
var volatile bit    PORTB_RB7            shared at PORTB : 7
var volatile bit    PORTB_RB6            shared at PORTB : 6
var volatile bit    PORTB_RB5            shared at PORTB : 5
var volatile bit    PORTB_RB4            shared at PORTB : 4
var volatile bit    PORTB_RB3            shared at PORTB : 3
var volatile bit    PORTB_RB2            shared at PORTB : 2
var volatile bit    PORTB_RB1            shared at PORTB : 1
var volatile bit    PORTB_RB0            shared at PORTB : 0
-- ------------------------------------------------
var volatile byte   PORTC                shared at 0xF82
var volatile bit    PORTC_RC7            shared at PORTC : 7
var volatile bit    PORTC_RC6            shared at PORTC : 6
var volatile bit    PORTC_RC5            shared at PORTC : 5
var volatile bit    PORTC_RC4            shared at PORTC : 4
var volatile bit    PORTC_RC3            shared at PORTC : 3
var volatile bit    PORTC_RC2            shared at PORTC : 2
var volatile bit    PORTC_RC1            shared at PORTC : 1
var volatile bit    PORTC_RC0            shared at PORTC : 0
-- ------------------------------------------------
var volatile byte   PORTD                shared at 0xF83
var volatile bit    PORTD_RD7            shared at PORTD : 7
var volatile bit    PORTD_RD6            shared at PORTD : 6
var volatile bit    PORTD_RD5            shared at PORTD : 5
var volatile bit    PORTD_RD4            shared at PORTD : 4
var volatile bit    PORTD_RD3            shared at PORTD : 3
var volatile bit    PORTD_RD2            shared at PORTD : 2
var volatile bit    PORTD_RD1            shared at PORTD : 1
var volatile bit    PORTD_RD0            shared at PORTD : 0
-- ------------------------------------------------
var volatile byte   PORTE                shared at 0xF84
var volatile bit    PORTE_RE7            shared at PORTE : 7
var volatile bit    PORTE_RE6            shared at PORTE : 6
var volatile bit    PORTE_RE5            shared at PORTE : 5
var volatile bit    PORTE_RE4            shared at PORTE : 4
var volatile bit    PORTE_RE3            shared at PORTE : 3
var volatile bit    PORTE_RE2            shared at PORTE : 2
var volatile bit    PORTE_RE1            shared at PORTE : 1
var volatile bit    PORTE_RE0            shared at PORTE : 0
-- ------------------------------------------------
var volatile byte   PORTF                shared at 0xF85
var volatile bit    PORTF_RF7            shared at PORTF : 7
var volatile bit    PORTF_RF6            shared at PORTF : 6
var volatile bit    PORTF_RF5            shared at PORTF : 5
var volatile bit    PORTF_RF4            shared at PORTF : 4
var volatile bit    PORTF_RF3            shared at PORTF : 3
var volatile bit    PORTF_RF2            shared at PORTF : 2
var volatile bit    PORTF_RF1            shared at PORTF : 1
var volatile bit    PORTF_RF0            shared at PORTF : 0
-- ------------------------------------------------
var volatile byte   PORTG                shared at 0xF86
var volatile bit    PORTG_RG5            shared at PORTG : 5
var volatile bit    PORTG_RG4            shared at PORTG : 4
var volatile bit    PORTG_RG3            shared at PORTG : 3
var volatile bit    PORTG_RG2            shared at PORTG : 2
var volatile bit    PORTG_RG1            shared at PORTG : 1
var volatile bit    PORTG_RG0            shared at PORTG : 0
-- ------------------------------------------------
var volatile byte   PORTH                shared at 0xF87
var volatile bit    PORTH_RH7            shared at PORTH : 7
var volatile bit    PORTH_RH6            shared at PORTH : 6
var volatile bit    PORTH_RH5            shared at PORTH : 5
var volatile bit    PORTH_RH4            shared at PORTH : 4
var volatile bit    PORTH_RH3            shared at PORTH : 3
var volatile bit    PORTH_RH2            shared at PORTH : 2
var volatile bit    PORTH_RH1            shared at PORTH : 1
var volatile bit    PORTH_RH0            shared at PORTH : 0
-- ------------------------------------------------
var volatile byte   PORTJ                shared at 0xF88
var volatile bit    PORTJ_RJ7            shared at PORTJ : 7
var volatile bit    PORTJ_RJ6            shared at PORTJ : 6
var volatile bit    PORTJ_RJ5            shared at PORTJ : 5
var volatile bit    PORTJ_RJ4            shared at PORTJ : 4
var volatile bit    PORTJ_RJ3            shared at PORTJ : 3
var volatile bit    PORTJ_RJ2            shared at PORTJ : 2
var volatile bit    PORTJ_RJ1            shared at PORTJ : 1
var volatile bit    PORTJ_RJ0            shared at PORTJ : 0
-- ------------------------------------------------
var volatile byte   LATA                 shared at 0xF89
--
procedure PORTA'put(byte in x) is
   pragma inline
   LATA = x
end procedure
--
procedure PORTA_low'put(byte in x) is
   LATA = (LATA & 0xF0) | (x & 0x0F)
end procedure
function PORTA_low'get() return byte is
   return (LATA & 0x0F)
end function
--
procedure PORTA_high'put(byte in x) is
   LATA = (LATA & 0x0F) | (x << 4)
end procedure
function PORTA_high'get() return byte is
   return (LATA >> 4)
end function
--
var volatile bit    LATA_LATA7           shared at LATA : 7
var volatile bit pin_A7 shared at LATA : 7
procedure pin_A7'put(bit in x at LATA : 7) is
   pragma inline
end procedure
--
var volatile bit    LATA_LATA6           shared at LATA : 6
var volatile bit pin_A6 shared at LATA : 6
procedure pin_A6'put(bit in x at LATA : 6) is
   pragma inline
end procedure
--
var volatile bit    LATA_LATA5           shared at LATA : 5
var volatile bit pin_A5 shared at LATA : 5
procedure pin_A5'put(bit in x at LATA : 5) is
   pragma inline
end procedure
--
var volatile bit    LATA_LATA4           shared at LATA : 4
var volatile bit pin_A4 shared at LATA : 4
procedure pin_A4'put(bit in x at LATA : 4) is
   pragma inline
end procedure
--
var volatile bit    LATA_LATA3           shared at LATA : 3
var volatile bit pin_A3 shared at LATA : 3
procedure pin_A3'put(bit in x at LATA : 3) is
   pragma inline
end procedure
--
var volatile bit    LATA_LATA2           shared at LATA : 2
var volatile bit pin_A2 shared at LATA : 2
procedure pin_A2'put(bit in x at LATA : 2) is
   pragma inline
end procedure
--
var volatile bit    LATA_LATA1           shared at LATA : 1
var volatile bit pin_A1 shared at LATA : 1
procedure pin_A1'put(bit in x at LATA : 1) is
   pragma inline
end procedure
--
var volatile bit    LATA_LATA0           shared at LATA : 0
var volatile bit pin_A0 shared at LATA : 0
procedure pin_A0'put(bit in x at LATA : 0) is
   pragma inline
end procedure
--
-- ------------------------------------------------
var volatile byte   LATB                 shared at 0xF8A
--
procedure PORTB'put(byte in x) is
   pragma inline
   LATB = x
end procedure
--
procedure PORTB_low'put(byte in x) is
   LATB = (LATB & 0xF0) | (x & 0x0F)
end procedure
function PORTB_low'get() return byte is
   return (LATB & 0x0F)
end function
--
procedure PORTB_high'put(byte in x) is
   LATB = (LATB & 0x0F) | (x << 4)
end procedure
function PORTB_high'get() return byte is
   return (LATB >> 4)
end function
--
var volatile bit    LATB_LATB7           shared at LATB : 7
var volatile bit pin_B7 shared at LATB : 7
procedure pin_B7'put(bit in x at LATB : 7) is
   pragma inline
end procedure
--
var volatile bit    LATB_LATB6           shared at LATB : 6
var volatile bit pin_B6 shared at LATB : 6
procedure pin_B6'put(bit in x at LATB : 6) is
   pragma inline
end procedure
--
var volatile bit    LATB_LATB5           shared at LATB : 5
var volatile bit pin_B5 shared at LATB : 5
procedure pin_B5'put(bit in x at LATB : 5) is
   pragma inline
end procedure
--
var volatile bit    LATB_LATB4           shared at LATB : 4
var volatile bit pin_B4 shared at LATB : 4
procedure pin_B4'put(bit in x at LATB : 4) is
   pragma inline
end procedure
--
var volatile bit    LATB_LATB3           shared at LATB : 3
var volatile bit pin_B3 shared at LATB : 3
procedure pin_B3'put(bit in x at LATB : 3) is
   pragma inline
end procedure
--
var volatile bit    LATB_LATB2           shared at LATB : 2
var volatile bit pin_B2 shared at LATB : 2
procedure pin_B2'put(bit in x at LATB : 2) is
   pragma inline
end procedure
--
var volatile bit    LATB_LATB1           shared at LATB : 1
var volatile bit pin_B1 shared at LATB : 1
procedure pin_B1'put(bit in x at LATB : 1) is
   pragma inline
end procedure
--
var volatile bit    LATB_LATB0           shared at LATB : 0
var volatile bit pin_B0 shared at LATB : 0
procedure pin_B0'put(bit in x at LATB : 0) is
   pragma inline
end procedure
--
-- ------------------------------------------------
var volatile byte   LATC                 shared at 0xF8B
--
procedure PORTC'put(byte in x) is
   pragma inline
   LATC = x
end procedure
--
procedure PORTC_low'put(byte in x) is
   LATC = (LATC & 0xF0) | (x & 0x0F)
end procedure
function PORTC_low'get() return byte is
   return (LATC & 0x0F)
end function
--
procedure PORTC_high'put(byte in x) is
   LATC = (LATC & 0x0F) | (x << 4)
end procedure
function PORTC_high'get() return byte is
   return (LATC >> 4)
end function
--
var volatile bit    LATC_LATC7           shared at LATC : 7
var volatile bit pin_C7 shared at LATC : 7
procedure pin_C7'put(bit in x at LATC : 7) is
   pragma inline
end procedure
--
var volatile bit    LATC_LATC6           shared at LATC : 6
var volatile bit pin_C6 shared at LATC : 6
procedure pin_C6'put(bit in x at LATC : 6) is
   pragma inline
end procedure
--
var volatile bit    LATC_LATC5           shared at LATC : 5
var volatile bit pin_C5 shared at LATC : 5
procedure pin_C5'put(bit in x at LATC : 5) is
   pragma inline
end procedure
--
var volatile bit    LATC_LATC4           shared at LATC : 4
var volatile bit pin_C4 shared at LATC : 4
procedure pin_C4'put(bit in x at LATC : 4) is
   pragma inline
end procedure
--
var volatile bit    LATC_LATC3           shared at LATC : 3
var volatile bit pin_C3 shared at LATC : 3
procedure pin_C3'put(bit in x at LATC : 3) is
   pragma inline
end procedure
--
var volatile bit    LATC_LATC2           shared at LATC : 2
var volatile bit pin_C2 shared at LATC : 2
procedure pin_C2'put(bit in x at LATC : 2) is
   pragma inline
end procedure
--
var volatile bit    LATC_LATC1           shared at LATC : 1
var volatile bit pin_C1 shared at LATC : 1
procedure pin_C1'put(bit in x at LATC : 1) is
   pragma inline
end procedure
--
var volatile bit    LATC_LATC0           shared at LATC : 0
var volatile bit pin_C0 shared at LATC : 0
procedure pin_C0'put(bit in x at LATC : 0) is
   pragma inline
end procedure
--
-- ------------------------------------------------
var volatile byte   LATD                 shared at 0xF8C
--
procedure PORTD'put(byte in x) is
   pragma inline
   LATD = x
end procedure
--
procedure PORTD_low'put(byte in x) is
   LATD = (LATD & 0xF0) | (x & 0x0F)
end procedure
function PORTD_low'get() return byte is
   return (LATD & 0x0F)
end function
--
procedure PORTD_high'put(byte in x) is
   LATD = (LATD & 0x0F) | (x << 4)
end procedure
function PORTD_high'get() return byte is
   return (LATD >> 4)
end function
--
var volatile bit    LATD_LATD7           shared at LATD : 7
var volatile bit pin_D7 shared at LATD : 7
procedure pin_D7'put(bit in x at LATD : 7) is
   pragma inline
end procedure
--
var volatile bit    LATD_LATD6           shared at LATD : 6
var volatile bit pin_D6 shared at LATD : 6
procedure pin_D6'put(bit in x at LATD : 6) is
   pragma inline
end procedure
--
var volatile bit    LATD_LATD5           shared at LATD : 5
var volatile bit pin_D5 shared at LATD : 5
procedure pin_D5'put(bit in x at LATD : 5) is
   pragma inline
end procedure
--
var volatile bit    LATD_LATD4           shared at LATD : 4
var volatile bit pin_D4 shared at LATD : 4
procedure pin_D4'put(bit in x at LATD : 4) is
   pragma inline
end procedure
--
var volatile bit    LATD_LATD3           shared at LATD : 3
var volatile bit pin_D3 shared at LATD : 3
procedure pin_D3'put(bit in x at LATD : 3) is
   pragma inline
end procedure
--
var volatile bit    LATD_LATD2           shared at LATD : 2
var volatile bit pin_D2 shared at LATD : 2
procedure pin_D2'put(bit in x at LATD : 2) is
   pragma inline
end procedure
--
var volatile bit    LATD_LATD1           shared at LATD : 1
var volatile bit pin_D1 shared at LATD : 1
procedure pin_D1'put(bit in x at LATD : 1) is
   pragma inline
end procedure
--
var volatile bit    LATD_LATD0           shared at LATD : 0
var volatile bit pin_D0 shared at LATD : 0
procedure pin_D0'put(bit in x at LATD : 0) is
   pragma inline
end procedure
--
-- ------------------------------------------------
var volatile byte   LATE                 shared at 0xF8D
--
procedure PORTE'put(byte in x) is
   pragma inline
   LATE = x
end procedure
--
procedure PORTE_low'put(byte in x) is
   LATE = (LATE & 0xF0) | (x & 0x0F)
end procedure
function PORTE_low'get() return byte is
   return (LATE & 0x0F)
end function
--
procedure PORTE_high'put(byte in x) is
   LATE = (LATE & 0x0F) | (x << 4)
end procedure
function PORTE_high'get() return byte is
   return (LATE >> 4)
end function
--
var volatile bit    LATE_LATE7           shared at LATE : 7
var volatile bit pin_E7 shared at LATE : 7
procedure pin_E7'put(bit in x at LATE : 7) is
   pragma inline
end procedure
--
var volatile bit    LATE_LATE6           shared at LATE : 6
var volatile bit pin_E6 shared at LATE : 6
procedure pin_E6'put(bit in x at LATE : 6) is
   pragma inline
end procedure
--
var volatile bit    LATE_LATE5           shared at LATE : 5
var volatile bit pin_E5 shared at LATE : 5
procedure pin_E5'put(bit in x at LATE : 5) is
   pragma inline
end procedure
--
var volatile bit    LATE_LATE4           shared at LATE : 4
var volatile bit pin_E4 shared at LATE : 4
procedure pin_E4'put(bit in x at LATE : 4) is
   pragma inline
end procedure
--
var volatile bit    LATE_LATE3           shared at LATE : 3
var volatile bit pin_E3 shared at LATE : 3
procedure pin_E3'put(bit in x at LATE : 3) is
   pragma inline
end procedure
--
var volatile bit    LATE_LATE2           shared at LATE : 2
var volatile bit pin_E2 shared at LATE : 2
procedure pin_E2'put(bit in x at LATE : 2) is
   pragma inline
end procedure
--
var volatile bit    LATE_LATE1           shared at LATE : 1
var volatile bit pin_E1 shared at LATE : 1
procedure pin_E1'put(bit in x at LATE : 1) is
   pragma inline
end procedure
--
var volatile bit    LATE_LATE0           shared at LATE : 0
var volatile bit pin_E0 shared at LATE : 0
procedure pin_E0'put(bit in x at LATE : 0) is
   pragma inline
end procedure
--
-- ------------------------------------------------
var volatile byte   LATF                 shared at 0xF8E
--
procedure PORTF'put(byte in x) is
   pragma inline
   LATF = x
end procedure
--
procedure PORTF_low'put(byte in x) is
   LATF = (LATF & 0xF0) | (x & 0x0F)
end procedure
function PORTF_low'get() return byte is
   return (LATF & 0x0F)
end function
--
procedure PORTF_high'put(byte in x) is
   LATF = (LATF & 0x0F) | (x << 4)
end procedure
function PORTF_high'get() return byte is
   return (LATF >> 4)
end function
--
var volatile bit    LATF_LATF7           shared at LATF : 7
var volatile bit pin_F7 shared at LATF : 7
procedure pin_F7'put(bit in x at LATF : 7) is
   pragma inline
end procedure
--
var volatile bit    LATF_LATF6           shared at LATF : 6
var volatile bit pin_F6 shared at LATF : 6
procedure pin_F6'put(bit in x at LATF : 6) is
   pragma inline
end procedure
--
var volatile bit    LATF_LATF5           shared at LATF : 5
var volatile bit pin_F5 shared at LATF : 5
procedure pin_F5'put(bit in x at LATF : 5) is
   pragma inline
end procedure
--
var volatile bit    LATF_LATF4           shared at LATF : 4
var volatile bit pin_F4 shared at LATF : 4
procedure pin_F4'put(bit in x at LATF : 4) is
   pragma inline
end procedure
--
var volatile bit    LATF_LATF3           shared at LATF : 3
var volatile bit pin_F3 shared at LATF : 3
procedure pin_F3'put(bit in x at LATF : 3) is
   pragma inline
end procedure
--
var volatile bit    LATF_LATF2           shared at LATF : 2
var volatile bit pin_F2 shared at LATF : 2
procedure pin_F2'put(bit in x at LATF : 2) is
   pragma inline
end procedure
--
var volatile bit    LATF_LATF1           shared at LATF : 1
var volatile bit pin_F1 shared at LATF : 1
procedure pin_F1'put(bit in x at LATF : 1) is
   pragma inline
end procedure
--
var volatile bit    LATF_LATF0           shared at LATF : 0
var volatile bit pin_F0 shared at LATF : 0
procedure pin_F0'put(bit in x at LATF : 0) is
   pragma inline
end procedure
--
-- ------------------------------------------------
var volatile byte   LATG                 shared at 0xF8F
--
procedure PORTG'put(byte in x) is
   pragma inline
   LATG = x
end procedure
--
procedure PORTG_low'put(byte in x) is
   LATG = (LATG & 0xF0) | (x & 0x0F)
end procedure
function PORTG_low'get() return byte is
   return (LATG & 0x0F)
end function
--
procedure PORTG_high'put(byte in x) is
   LATG = (LATG & 0x0F) | (x << 4)
end procedure
function PORTG_high'get() return byte is
   return (LATG >> 4)
end function
--
var volatile bit    LATG_LATG4           shared at LATG : 4
var volatile bit pin_G4 shared at LATG : 4
procedure pin_G4'put(bit in x at LATG : 4) is
   pragma inline
end procedure
--
var volatile bit    LATG_LATG3           shared at LATG : 3
var volatile bit pin_G3 shared at LATG : 3
procedure pin_G3'put(bit in x at LATG : 3) is
   pragma inline
end procedure
--
var volatile bit    LATG_LATG2           shared at LATG : 2
var volatile bit pin_G2 shared at LATG : 2
procedure pin_G2'put(bit in x at LATG : 2) is
   pragma inline
end procedure
--
var volatile bit    LATG_LATG1           shared at LATG : 1
var volatile bit pin_G1 shared at LATG : 1
procedure pin_G1'put(bit in x at LATG : 1) is
   pragma inline
end procedure
--
var volatile bit    LATG_LATG0           shared at LATG : 0
var volatile bit pin_G0 shared at LATG : 0
procedure pin_G0'put(bit in x at LATG : 0) is
   pragma inline
end procedure
--
-- ------------------------------------------------
var volatile byte   LATH                 shared at 0xF90
--
procedure PORTH'put(byte in x) is
   pragma inline
   LATH = x
end procedure
--
procedure PORTH_low'put(byte in x) is
   LATH = (LATH & 0xF0) | (x & 0x0F)
end procedure
function PORTH_low'get() return byte is
   return (LATH & 0x0F)
end function
--
procedure PORTH_high'put(byte in x) is
   LATH = (LATH & 0x0F) | (x << 4)
end procedure
function PORTH_high'get() return byte is
   return (LATH >> 4)
end function
--
var volatile bit    LATH_LATH7           shared at LATH : 7
var volatile bit pin_H7 shared at LATH : 7
procedure pin_H7'put(bit in x at LATH : 7) is
   pragma inline
end procedure
--
var volatile bit    LATH_LATH6           shared at LATH : 6
var volatile bit pin_H6 shared at LATH : 6
procedure pin_H6'put(bit in x at LATH : 6) is
   pragma inline
end procedure
--
var volatile bit    LATH_LATH5           shared at LATH : 5
var volatile bit pin_H5 shared at LATH : 5
procedure pin_H5'put(bit in x at LATH : 5) is
   pragma inline
end procedure
--
var volatile bit    LATH_LATH4           shared at LATH : 4
var volatile bit pin_H4 shared at LATH : 4
procedure pin_H4'put(bit in x at LATH : 4) is
   pragma inline
end procedure
--
var volatile bit    LATH_LATH3           shared at LATH : 3
var volatile bit pin_H3 shared at LATH : 3
procedure pin_H3'put(bit in x at LATH : 3) is
   pragma inline
end procedure
--
var volatile bit    LATH_LATH2           shared at LATH : 2
var volatile bit pin_H2 shared at LATH : 2
procedure pin_H2'put(bit in x at LATH : 2) is
   pragma inline
end procedure
--
var volatile bit    LATH_LATH1           shared at LATH : 1
var volatile bit pin_H1 shared at LATH : 1
procedure pin_H1'put(bit in x at LATH : 1) is
   pragma inline
end procedure
--
var volatile bit    LATH_LATH0           shared at LATH : 0
var volatile bit pin_H0 shared at LATH : 0
procedure pin_H0'put(bit in x at LATH : 0) is
   pragma inline
end procedure
--
-- ------------------------------------------------
var volatile byte   LATJ                 shared at 0xF91
--
procedure PORTJ'put(byte in x) is
   pragma inline
   LATJ = x
end procedure
--
procedure PORTJ_low'put(byte in x) is
   LATJ = (LATJ & 0xF0) | (x & 0x0F)
end procedure
function PORTJ_low'get() return byte is
   return (LATJ & 0x0F)
end function
--
procedure PORTJ_high'put(byte in x) is
   LATJ = (LATJ & 0x0F) | (x << 4)
end procedure
function PORTJ_high'get() return byte is
   return (LATJ >> 4)
end function
--
var volatile bit    LATJ_LATJ7           shared at LATJ : 7
var volatile bit pin_J7 shared at LATJ : 7
procedure pin_J7'put(bit in x at LATJ : 7) is
   pragma inline
end procedure
--
var volatile bit    LATJ_LATJ6           shared at LATJ : 6
var volatile bit pin_J6 shared at LATJ : 6
procedure pin_J6'put(bit in x at LATJ : 6) is
   pragma inline
end procedure
--
var volatile bit    LATJ_LATJ5           shared at LATJ : 5
var volatile bit pin_J5 shared at LATJ : 5
procedure pin_J5'put(bit in x at LATJ : 5) is
   pragma inline
end procedure
--
var volatile bit    LATJ_LATJ4           shared at LATJ : 4
var volatile bit pin_J4 shared at LATJ : 4
procedure pin_J4'put(bit in x at LATJ : 4) is
   pragma inline
end procedure
--
var volatile bit    LATJ_LATJ3           shared at LATJ : 3
var volatile bit pin_J3 shared at LATJ : 3
procedure pin_J3'put(bit in x at LATJ : 3) is
   pragma inline
end procedure
--
var volatile bit    LATJ_LATJ2           shared at LATJ : 2
var volatile bit pin_J2 shared at LATJ : 2
procedure pin_J2'put(bit in x at LATJ : 2) is
   pragma inline
end procedure
--
var volatile bit    LATJ_LATJ1           shared at LATJ : 1
var volatile bit pin_J1 shared at LATJ : 1
procedure pin_J1'put(bit in x at LATJ : 1) is
   pragma inline
end procedure
--
var volatile bit    LATJ_LATJ0           shared at LATJ : 0
var volatile bit pin_J0 shared at LATJ : 0
procedure pin_J0'put(bit in x at LATJ : 0) is
   pragma inline
end procedure
--
-- ------------------------------------------------
var volatile byte   TRISA                shared at 0xF92
var volatile byte   PORTA_direction      shared at TRISA
--
procedure PORTA_low_direction'put(byte in x) is
   TRISA = (TRISA & 0xF0) | (x & 0x0F)
end procedure
function PORTA_low_direction'get() return byte is
   return (TRISA & 0x0F)
end function
--
procedure PORTA_high_direction'put(byte in x) is
   TRISA = (TRISA & 0x0F) | (x << 4)
end procedure
function PORTA_high_direction'get() return byte is
   return (TRISA >> 4)
end function
--
var volatile bit    TRISA_TRISA7         shared at TRISA : 7
var volatile bit    pin_A7_direction     shared at TRISA : 7
var volatile bit    TRISA_TRISA6         shared at TRISA : 6
var volatile bit    pin_A6_direction     shared at TRISA : 6
var volatile bit    TRISA_TRISA5         shared at TRISA : 5
var volatile bit    pin_A5_direction     shared at TRISA : 5
var volatile bit    TRISA_TRISA4         shared at TRISA : 4
var volatile bit    pin_A4_direction     shared at TRISA : 4
var volatile bit    TRISA_TRISA3         shared at TRISA : 3
var volatile bit    pin_A3_direction     shared at TRISA : 3
var volatile bit    TRISA_TRISA2         shared at TRISA : 2
var volatile bit    pin_A2_direction     shared at TRISA : 2
var volatile bit    TRISA_TRISA1         shared at TRISA : 1
var volatile bit    pin_A1_direction     shared at TRISA : 1
var volatile bit    TRISA_TRISA0         shared at TRISA : 0
var volatile bit    pin_A0_direction     shared at TRISA : 0
-- ------------------------------------------------
var volatile byte   TRISB                shared at 0xF93
var volatile byte   PORTB_direction      shared at TRISB
--
procedure PORTB_low_direction'put(byte in x) is
   TRISB = (TRISB & 0xF0) | (x & 0x0F)
end procedure
function PORTB_low_direction'get() return byte is
   return (TRISB & 0x0F)
end function
--
procedure PORTB_high_direction'put(byte in x) is
   TRISB = (TRISB & 0x0F) | (x << 4)
end procedure
function PORTB_high_direction'get() return byte is
   return (TRISB >> 4)
end function
--
var volatile bit    TRISB_TRISB7         shared at TRISB : 7
var volatile bit    pin_B7_direction     shared at TRISB : 7
var volatile bit    TRISB_TRISB6         shared at TRISB : 6
var volatile bit    pin_B6_direction     shared at TRISB : 6
var volatile bit    TRISB_TRISB5         shared at TRISB : 5
var volatile bit    pin_B5_direction     shared at TRISB : 5
var volatile bit    TRISB_TRISB4         shared at TRISB : 4
var volatile bit    pin_B4_direction     shared at TRISB : 4
var volatile bit    TRISB_TRISB3         shared at TRISB : 3
var volatile bit    pin_B3_direction     shared at TRISB : 3
var volatile bit    TRISB_TRISB2         shared at TRISB : 2
var volatile bit    pin_B2_direction     shared at TRISB : 2
var volatile bit    TRISB_TRISB1         shared at TRISB : 1
var volatile bit    pin_B1_direction     shared at TRISB : 1
var volatile bit    TRISB_TRISB0         shared at TRISB : 0
var volatile bit    pin_B0_direction     shared at TRISB : 0
-- ------------------------------------------------
var volatile byte   TRISC                shared at 0xF94
var volatile byte   PORTC_direction      shared at TRISC
--
procedure PORTC_low_direction'put(byte in x) is
   TRISC = (TRISC & 0xF0) | (x & 0x0F)
end procedure
function PORTC_low_direction'get() return byte is
   return (TRISC & 0x0F)
end function
--
procedure PORTC_high_direction'put(byte in x) is
   TRISC = (TRISC & 0x0F) | (x << 4)
end procedure
function PORTC_high_direction'get() return byte is
   return (TRISC >> 4)
end function
--
var volatile bit    TRISC_TRISC7         shared at TRISC : 7
var volatile bit    pin_C7_direction     shared at TRISC : 7
var volatile bit    TRISC_TRISC6         shared at TRISC : 6
var volatile bit    pin_C6_direction     shared at TRISC : 6
var volatile bit    TRISC_TRISC5         shared at TRISC : 5
var volatile bit    pin_C5_direction     shared at TRISC : 5
var volatile bit    TRISC_TRISC4         shared at TRISC : 4
var volatile bit    pin_C4_direction     shared at TRISC : 4
var volatile bit    TRISC_TRISC3         shared at TRISC : 3
var volatile bit    pin_C3_direction     shared at TRISC : 3
var volatile bit    TRISC_TRISC2         shared at TRISC : 2
var volatile bit    pin_C2_direction     shared at TRISC : 2
var volatile bit    TRISC_TRISC1         shared at TRISC : 1
var volatile bit    pin_C1_direction     shared at TRISC : 1
var volatile bit    TRISC_TRISC0         shared at TRISC : 0
var volatile bit    pin_C0_direction     shared at TRISC : 0
-- ------------------------------------------------
var volatile byte   TRISD                shared at 0xF95
var volatile byte   PORTD_direction      shared at TRISD
--
procedure PORTD_low_direction'put(byte in x) is
   TRISD = (TRISD & 0xF0) | (x & 0x0F)
end procedure
function PORTD_low_direction'get() return byte is
   return (TRISD & 0x0F)
end function
--
procedure PORTD_high_direction'put(byte in x) is
   TRISD = (TRISD & 0x0F) | (x << 4)
end procedure
function PORTD_high_direction'get() return byte is
   return (TRISD >> 4)
end function
--
var volatile bit    TRISD_TRISD7         shared at TRISD : 7
var volatile bit    pin_D7_direction     shared at TRISD : 7
var volatile bit    TRISD_TRISD6         shared at TRISD : 6
var volatile bit    pin_D6_direction     shared at TRISD : 6
var volatile bit    TRISD_TRISD5         shared at TRISD : 5
var volatile bit    pin_D5_direction     shared at TRISD : 5
var volatile bit    TRISD_TRISD4         shared at TRISD : 4
var volatile bit    pin_D4_direction     shared at TRISD : 4
var volatile bit    TRISD_TRISD3         shared at TRISD : 3
var volatile bit    pin_D3_direction     shared at TRISD : 3
var volatile bit    TRISD_TRISD2         shared at TRISD : 2
var volatile bit    pin_D2_direction     shared at TRISD : 2
var volatile bit    TRISD_TRISD1         shared at TRISD : 1
var volatile bit    pin_D1_direction     shared at TRISD : 1
var volatile bit    TRISD_TRISD0         shared at TRISD : 0
var volatile bit    pin_D0_direction     shared at TRISD : 0
-- ------------------------------------------------
var volatile byte   TRISE                shared at 0xF96
var volatile byte   PORTE_direction      shared at TRISE
--
procedure PORTE_low_direction'put(byte in x) is
   TRISE = (TRISE & 0xF0) | (x & 0x0F)
end procedure
function PORTE_low_direction'get() return byte is
   return (TRISE & 0x0F)
end function
--
procedure PORTE_high_direction'put(byte in x) is
   TRISE = (TRISE & 0x0F) | (x << 4)
end procedure
function PORTE_high_direction'get() return byte is
   return (TRISE >> 4)
end function
--
var volatile bit    TRISE_TRISE7         shared at TRISE : 7
var volatile bit    pin_E7_direction     shared at TRISE : 7
var volatile bit    TRISE_TRISE6         shared at TRISE : 6
var volatile bit    pin_E6_direction     shared at TRISE : 6
var volatile bit    TRISE_TRISE5         shared at TRISE : 5
var volatile bit    pin_E5_direction     shared at TRISE : 5
var volatile bit    TRISE_TRISE4         shared at TRISE : 4
var volatile bit    pin_E4_direction     shared at TRISE : 4
var volatile bit    TRISE_TRISE3         shared at TRISE : 3
var volatile bit    pin_E3_direction     shared at TRISE : 3
var volatile bit    TRISE_TRISE2         shared at TRISE : 2
var volatile bit    pin_E2_direction     shared at TRISE : 2
var volatile bit    TRISE_TRISE1         shared at TRISE : 1
var volatile bit    pin_E1_direction     shared at TRISE : 1
var volatile bit    TRISE_TRISE0         shared at TRISE : 0
var volatile bit    pin_E0_direction     shared at TRISE : 0
-- ------------------------------------------------
var volatile byte   TRISF                shared at 0xF97
var volatile byte   PORTF_direction      shared at TRISF
--
procedure PORTF_low_direction'put(byte in x) is
   TRISF = (TRISF & 0xF0) | (x & 0x0F)
end procedure
function PORTF_low_direction'get() return byte is
   return (TRISF & 0x0F)
end function
--
procedure PORTF_high_direction'put(byte in x) is
   TRISF = (TRISF & 0x0F) | (x << 4)
end procedure
function PORTF_high_direction'get() return byte is
   return (TRISF >> 4)
end function
--
var volatile bit    TRISF_TRISF7         shared at TRISF : 7
var volatile bit    pin_F7_direction     shared at TRISF : 7
var volatile bit    TRISF_TRISF6         shared at TRISF : 6
var volatile bit    pin_F6_direction     shared at TRISF : 6
var volatile bit    TRISF_TRISF5         shared at TRISF : 5
var volatile bit    pin_F5_direction     shared at TRISF : 5
var volatile bit    TRISF_TRISF4         shared at TRISF : 4
var volatile bit    pin_F4_direction     shared at TRISF : 4
var volatile bit    TRISF_TRISF3         shared at TRISF : 3
var volatile bit    pin_F3_direction     shared at TRISF : 3
var volatile bit    TRISF_TRISF2         shared at TRISF : 2
var volatile bit    pin_F2_direction     shared at TRISF : 2
var volatile bit    TRISF_TRISF1         shared at TRISF : 1
var volatile bit    pin_F1_direction     shared at TRISF : 1
var volatile bit    TRISF_TRISF0         shared at TRISF : 0
var volatile bit    pin_F0_direction     shared at TRISF : 0
-- ------------------------------------------------
var volatile byte   TRISG                shared at 0xF98
var volatile byte   PORTG_direction      shared at TRISG
--
procedure PORTG_low_direction'put(byte in x) is
   TRISG = (TRISG & 0xF0) | (x & 0x0F)
end procedure
function PORTG_low_direction'get() return byte is
   return (TRISG & 0x0F)
end function
--
procedure PORTG_high_direction'put(byte in x) is
   TRISG = (TRISG & 0x0F) | (x << 4)
end procedure
function PORTG_high_direction'get() return byte is
   return (TRISG >> 4)
end function
--
var volatile bit    TRISG_TRISG4         shared at TRISG : 4
var volatile bit    pin_G4_direction     shared at TRISG : 4
var volatile bit    TRISG_TRISG3         shared at TRISG : 3
var volatile bit    pin_G3_direction     shared at TRISG : 3
var volatile bit    TRISG_TRISG2         shared at TRISG : 2
var volatile bit    pin_G2_direction     shared at TRISG : 2
var volatile bit    TRISG_TRISG1         shared at TRISG : 1
var volatile bit    pin_G1_direction     shared at TRISG : 1
var volatile bit    TRISG_TRISG0         shared at TRISG : 0
var volatile bit    pin_G0_direction     shared at TRISG : 0
-- ------------------------------------------------
var volatile byte   TRISH                shared at 0xF99
var volatile byte   PORTH_direction      shared at TRISH
--
procedure PORTH_low_direction'put(byte in x) is
   TRISH = (TRISH & 0xF0) | (x & 0x0F)
end procedure
function PORTH_low_direction'get() return byte is
   return (TRISH & 0x0F)
end function
--
procedure PORTH_high_direction'put(byte in x) is
   TRISH = (TRISH & 0x0F) | (x << 4)
end procedure
function PORTH_high_direction'get() return byte is
   return (TRISH >> 4)
end function
--
var volatile bit    TRISH_TRISH7         shared at TRISH : 7
var volatile bit    pin_H7_direction     shared at TRISH : 7
var volatile bit    TRISH_TRISH6         shared at TRISH : 6
var volatile bit    pin_H6_direction     shared at TRISH : 6
var volatile bit    TRISH_TRISH5         shared at TRISH : 5
var volatile bit    pin_H5_direction     shared at TRISH : 5
var volatile bit    TRISH_TRISH4         shared at TRISH : 4
var volatile bit    pin_H4_direction     shared at TRISH : 4
var volatile bit    TRISH_TRISH3         shared at TRISH : 3
var volatile bit    pin_H3_direction     shared at TRISH : 3
var volatile bit    TRISH_TRISH2         shared at TRISH : 2
var volatile bit    pin_H2_direction     shared at TRISH : 2
var volatile bit    TRISH_TRISH1         shared at TRISH : 1
var volatile bit    pin_H1_direction     shared at TRISH : 1
var volatile bit    TRISH_TRISH0         shared at TRISH : 0
var volatile bit    pin_H0_direction     shared at TRISH : 0
-- ------------------------------------------------
var volatile byte   TRISJ                shared at 0xF9A
var volatile byte   PORTJ_direction      shared at TRISJ
--
procedure PORTJ_low_direction'put(byte in x) is
   TRISJ = (TRISJ & 0xF0) | (x & 0x0F)
end procedure
function PORTJ_low_direction'get() return byte is
   return (TRISJ & 0x0F)
end function
--
procedure PORTJ_high_direction'put(byte in x) is
   TRISJ = (TRISJ & 0x0F) | (x << 4)
end procedure
function PORTJ_high_direction'get() return byte is
   return (TRISJ >> 4)
end function
--
var volatile bit    TRISJ_TRISJ7         shared at TRISJ : 7
var volatile bit    pin_J7_direction     shared at TRISJ : 7
var volatile bit    TRISJ_TRISJ6         shared at TRISJ : 6
var volatile bit    pin_J6_direction     shared at TRISJ : 6
var volatile bit    TRISJ_TRISJ5         shared at TRISJ : 5
var volatile bit    pin_J5_direction     shared at TRISJ : 5
var volatile bit    TRISJ_TRISJ4         shared at TRISJ : 4
var volatile bit    pin_J4_direction     shared at TRISJ : 4
var volatile bit    TRISJ_TRISJ3         shared at TRISJ : 3
var volatile bit    pin_J3_direction     shared at TRISJ : 3
var volatile bit    TRISJ_TRISJ2         shared at TRISJ : 2
var volatile bit    pin_J2_direction     shared at TRISJ : 2
var volatile bit    TRISJ_TRISJ1         shared at TRISJ : 1
var volatile bit    pin_J1_direction     shared at TRISJ : 1
var volatile bit    TRISJ_TRISJ0         shared at TRISJ : 0
var volatile bit    pin_J0_direction     shared at TRISJ : 0
-- ------------------------------------------------
var volatile byte   OSCTUNE              shared at 0xF9B
var volatile bit    OSCTUNE_HF256DIV     shared at OSCTUNE : 7
var volatile bit    OSCTUNE_PLLEN        shared at OSCTUNE : 6
var volatile bit*5  OSCTUNE_TUN          shared at OSCTUNE : 0
-- ------------------------------------------------
var volatile byte   MEMCON               shared at 0xF9C
var volatile bit    MEMCON_EBDIS         shared at MEMCON : 7
var volatile bit*2  MEMCON_WAIT          shared at MEMCON : 4
var volatile bit*2  MEMCON_WM            shared at MEMCON : 0
-- ------------------------------------------------
var volatile byte   PIE1                 shared at 0xF9D
var volatile bit    PIE1_PSPIE           shared at PIE1 : 7
var volatile bit    PIE1_ADIE            shared at PIE1 : 6
var volatile bit    PIE1_RC1IE           shared at PIE1 : 5
var volatile bit    PIE1_TX1IE           shared at PIE1 : 4
var volatile bit    PIE1_SSPIE1          shared at PIE1 : 3
var volatile bit    PIE1_CCP1IE          shared at PIE1 : 2
var volatile bit    PIE1_TMR2IE          shared at PIE1 : 1
var volatile bit    PIE1_TMR1IE          shared at PIE1 : 0
-- ------------------------------------------------
var volatile byte   PIR1                 shared at 0xF9E
var volatile bit    PIR1_PSPIF           shared at PIR1 : 7
var volatile bit    PIR1_ADIF            shared at PIR1 : 6
var volatile bit    PIR1_RC1IF           shared at PIR1 : 5
var volatile bit    PIR1_TX1IF           shared at PIR1 : 4
var volatile bit    PIR1_SSPIF1          shared at PIR1 : 3
var volatile bit    PIR1_CCP1IF          shared at PIR1 : 2
var volatile bit    PIR1_TMR2IF          shared at PIR1 : 1
var volatile bit    PIR1_TMR1IF          shared at PIR1 : 0
-- ------------------------------------------------
var volatile byte   IPR1                 shared at 0xF9F
var volatile bit    IPR1_PSPIP           shared at IPR1 : 7
var volatile bit    IPR1_ADIP            shared at IPR1 : 6
var volatile bit    IPR1_RC1IP           shared at IPR1 : 5
var volatile bit    IPR1_TX1IP           shared at IPR1 : 4
var volatile bit    IPR1_SSPIP1          shared at IPR1 : 3
var volatile bit    IPR1_CCP1IP          shared at IPR1 : 2
var volatile bit    IPR1_TMR2IP          shared at IPR1 : 1
var volatile bit    IPR1_TMR1IP          shared at IPR1 : 0
-- ------------------------------------------------
var volatile byte   PIE2                 shared at 0xFA0
var volatile bit    PIE2_OSCFIE          shared at PIE2 : 7
var volatile bit    PIE2_CMIE            shared at PIE2 : 6
var volatile bit    PIE2_EEIE            shared at PIE2 : 4
var volatile bit    PIE2_BCLIE1          shared at PIE2 : 3
var volatile bit    PIE2_LVDIE           shared at PIE2 : 2
var volatile bit    PIE2_TMR3IE          shared at PIE2 : 1
var volatile bit    PIE2_CCP2IE          shared at PIE2 : 0
-- ------------------------------------------------
var volatile byte   PIR2                 shared at 0xFA1
var volatile bit    PIR2_OSCFIF          shared at PIR2 : 7
var volatile bit    PIR2_CMIF            shared at PIR2 : 6
var volatile bit    PIR2_EEIF            shared at PIR2 : 4
var volatile bit    PIR2_BCLIF1          shared at PIR2 : 3
var volatile bit    PIR2_LVDIF           shared at PIR2 : 2
var volatile bit    PIR2_TMR3IF          shared at PIR2 : 1
var volatile bit    PIR2_CCP2IF          shared at PIR2 : 0
-- ------------------------------------------------
var volatile byte   IPR2                 shared at 0xFA2
var volatile bit    IPR2_OSCFIP          shared at IPR2 : 7
var volatile bit    IPR2_CMIP            shared at IPR2 : 6
var volatile bit    IPR2_EEIP            shared at IPR2 : 4
var volatile bit    IPR2_BCLIP1          shared at IPR2 : 3
var volatile bit    IPR2_LVDIP           shared at IPR2 : 2
var volatile bit    IPR2_TMR3IP          shared at IPR2 : 1
var volatile bit    IPR2_CCP2IP          shared at IPR2 : 0
-- ------------------------------------------------
var volatile byte   PIE3                 shared at 0xFA3
var volatile bit    PIE3_SSPIE2          shared at PIE3 : 7
var volatile bit    PIE3_BCLIE2          shared at PIE3 : 6
var volatile bit    PIE3_RC2IE           shared at PIE3 : 5
var volatile bit    PIE3_TX2IE           shared at PIE3 : 4
var volatile bit    PIE3_TMR4IE          shared at PIE3 : 3
var volatile bit    PIE3_CCP5IE          shared at PIE3 : 2
var volatile bit    PIE3_CCP4IE          shared at PIE3 : 1
var volatile bit    PIE3_CCP3IE          shared at PIE3 : 0
-- ------------------------------------------------
var volatile byte   PIR3                 shared at 0xFA4
var volatile bit    PIR3_SSPIF2          shared at PIR3 : 7
var volatile bit    PIR3_BCLIF2          shared at PIR3 : 6
var volatile bit    PIR3_RC2IF           shared at PIR3 : 5
var volatile bit    PIR3_TX2IF           shared at PIR3 : 4
var volatile bit    PIR3_TMR4IF          shared at PIR3 : 3
var volatile bit    PIR3_CCP5IF          shared at PIR3 : 2
var volatile bit    PIR3_CCP4IF          shared at PIR3 : 1
var volatile bit    PIR3_CCP3IF          shared at PIR3 : 0
-- ------------------------------------------------
var volatile byte   IPR3                 shared at 0xFA5
var volatile bit    IPR3_SSPIP2          shared at IPR3 : 7
var volatile bit    IPR3_BCLIP2          shared at IPR3 : 6
var volatile bit    IPR3_RC2IP           shared at IPR3 : 5
var volatile bit    IPR3_TX2IP           shared at IPR3 : 4
var volatile bit    IPR3_TMR4IP          shared at IPR3 : 3
var volatile bit    IPR3_CCP5IP          shared at IPR3 : 2
var volatile bit    IPR3_CCP4IP          shared at IPR3 : 1
var volatile bit    IPR3_CCP3IP          shared at IPR3 : 0
-- ------------------------------------------------
var volatile byte   EECON1               shared at 0xFA6
var volatile bit    EECON1_EEPGD         shared at EECON1 : 7
var volatile bit    EECON1_CFGS          shared at EECON1 : 6
var volatile bit    EECON1_MULPEN        shared at EECON1 : 5
var volatile bit    EECON1_FREE          shared at EECON1 : 4
var volatile bit    EECON1_WRERR         shared at EECON1 : 3
var volatile bit    EECON1_WREN          shared at EECON1 : 2
var volatile bit    EECON1_WR            shared at EECON1 : 1
var volatile bit    EECON1_RD            shared at EECON1 : 0
-- ------------------------------------------------
var volatile byte   EECON2               shared at 0xFA7
-- ------------------------------------------------
var volatile byte   EEDATA               shared at 0xFA8
-- ------------------------------------------------
var volatile byte   EEADR                shared at 0xFA9
-- ------------------------------------------------
var volatile byte   EEADRH               shared at 0xFAA
var volatile bit*2  EEADRH_EEADRH        shared at EEADRH : 0
-- ------------------------------------------------
var volatile byte   RCSTA1               shared at 0xFAB
var volatile bit    RCSTA1_SPEN          shared at RCSTA1 : 7
var volatile bit    RCSTA1_RX9           shared at RCSTA1 : 6
var volatile bit    RCSTA1_SREN          shared at RCSTA1 : 5
var volatile bit    RCSTA1_CREN          shared at RCSTA1 : 4
var volatile bit    RCSTA1_ADDEN         shared at RCSTA1 : 3
var volatile bit    RCSTA1_FERR          shared at RCSTA1 : 2
var volatile bit    RCSTA1_OERR          shared at RCSTA1 : 1
var volatile bit    RCSTA1_RX9D          shared at RCSTA1 : 0
-- ------------------------------------------------
var volatile byte   TXSTA1               shared at 0xFAC
var volatile bit    TXSTA1_CSRC          shared at TXSTA1 : 7
var volatile bit    TXSTA1_TX9           shared at TXSTA1 : 6
var volatile bit    TXSTA1_TXEN          shared at TXSTA1 : 5
var volatile bit    TXSTA1_SYNC          shared at TXSTA1 : 4
var volatile bit    TXSTA1_SENDB         shared at TXSTA1 : 3
var volatile bit    TXSTA1_BRGH          shared at TXSTA1 : 2
var volatile bit    TXSTA1_TRMT          shared at TXSTA1 : 1
var volatile bit    TXSTA1_TX9D          shared at TXSTA1 : 0
-- ------------------------------------------------
var volatile byte   TXREG1               shared at 0xFAD
var volatile byte   TXREG1_TXREG         shared at TXREG1
-- ------------------------------------------------
var volatile byte   RCREG1               shared at 0xFAE
var volatile byte   RCREG1_RCREG         shared at RCREG1
-- ------------------------------------------------
var volatile byte   SPBRG1               shared at 0xFAF
var volatile byte   SPBRG1_SPBRG         shared at SPBRG1
-- ------------------------------------------------
var volatile byte   PSPCON               shared at 0xFB0
var volatile bit    PSPCON_IBF           shared at PSPCON : 7
var volatile bit    PSPCON_OBF           shared at PSPCON : 6
var volatile bit    PSPCON_IBOV          shared at PSPCON : 5
var volatile bit    PSPCON_PSPMODE       shared at PSPCON : 4
-- ------------------------------------------------
var volatile byte   T3CON                shared at 0xFB1
var volatile bit    T3CON_RD16           shared at T3CON : 7
var volatile bit    T3CON_T3CCP2         shared at T3CON : 6
var volatile bit*2  T3CON_T3CKPS         shared at T3CON : 4
var volatile bit    T3CON_T3CCP1         shared at T3CON : 3
var volatile bit    T3CON_NT3SYNC        shared at T3CON : 2
var volatile bit    T3CON_TMR3CS         shared at T3CON : 1
var volatile bit    T3CON_TMR3ON         shared at T3CON : 0
-- ------------------------------------------------
var volatile word   TMR3                 shared at 0xFB2
-- ------------------------------------------------
var volatile byte   TMR3L                shared at 0xFB2
-- ------------------------------------------------
var volatile byte   TMR3H                shared at 0xFB3
-- ------------------------------------------------
var volatile byte   CMCON                shared at 0xFB4
var volatile bit    CMCON_C2OUT          shared at CMCON : 7
var volatile bit    CMCON_C1OUT          shared at CMCON : 6
var volatile bit    CMCON_C2INV          shared at CMCON : 5
var volatile bit    CMCON_C1INV          shared at CMCON : 4
var volatile bit    CMCON_CIS            shared at CMCON : 3
var volatile bit*3  CMCON_CM             shared at CMCON : 0
-- ------------------------------------------------
var volatile byte   CVRCON               shared at 0xFB5
var volatile bit    CVRCON_CVREN         shared at CVRCON : 7
var volatile bit    CVRCON_CVROE         shared at CVRCON : 6
var volatile bit    CVRCON_CVRR          shared at CVRCON : 5
var volatile bit    CVRCON_CVRSS         shared at CVRCON : 4
var volatile bit*4  CVRCON_CVR           shared at CVRCON : 0
-- ------------------------------------------------
var volatile byte   ECCP1AS              shared at 0xFB6
var volatile bit    ECCP1AS_ECCP1ASE     shared at ECCP1AS : 7
var volatile bit*3  ECCP1AS_ECCP1AS      shared at ECCP1AS : 4
var volatile bit*2  ECCP1AS_PSS1AC       shared at ECCP1AS : 2
var volatile bit*2  ECCP1AS_PSS1BD       shared at ECCP1AS : 0
-- ------------------------------------------------
var volatile byte   CCP3CON              shared at 0xFB7
var volatile bit*2  CCP3CON_P3M          shared at CCP3CON : 6
var volatile bit*2  CCP3CON_DC3B         shared at CCP3CON : 4
var volatile bit*4  CCP3CON_CCP3M        shared at CCP3CON : 0
-- ------------------------------------------------
var volatile word   CCPR3                shared at 0xFB8
-- ------------------------------------------------
var volatile byte   CCPR3L               shared at 0xFB8
-- ------------------------------------------------
var volatile byte   CCPR3H               shared at 0xFB9
-- ------------------------------------------------
var volatile byte   CCP2CON              shared at 0xFBA
var volatile bit*2  CCP2CON_P2M          shared at CCP2CON : 6
var volatile bit*2  CCP2CON_DC2B         shared at CCP2CON : 4
var volatile bit*4  CCP2CON_CCP2M        shared at CCP2CON : 0
-- ------------------------------------------------
var volatile word   CCPR2                shared at 0xFBB
-- ------------------------------------------------
var volatile byte   CCPR2L               shared at 0xFBB
-- ------------------------------------------------
var volatile byte   CCPR2H               shared at 0xFBC
-- ------------------------------------------------
var volatile byte   CCP1CON              shared at 0xFBD
var volatile bit*2  CCP1CON_P1M          shared at CCP1CON : 6
var volatile bit*2  CCP1CON_DC1B         shared at CCP1CON : 4
var volatile bit*4  CCP1CON_CCP1M        shared at CCP1CON : 0
-- ------------------------------------------------
var volatile word   CCPR1                shared at 0xFBE
-- ------------------------------------------------
var volatile byte   CCPR1L               shared at 0xFBE
-- ------------------------------------------------
var volatile byte   CCPR1H               shared at 0xFBF
-- ------------------------------------------------
var volatile byte   ADCON2               shared at 0xFC0
var volatile bit    ADCON2_ADFM          shared at ADCON2 : 7
var volatile bit*3  ADCON2_ACQT          shared at ADCON2 : 3
var volatile bit*3  ADCON2_ADCS          shared at ADCON2 : 0
-- ------------------------------------------------
var volatile byte   ADCON1               shared at 0xFC1
var volatile bit*2  ADCON1_VCFG          shared at ADCON1 : 4
var volatile bit*4  ADCON1_PCFG          shared at ADCON1 : 0
-- ------------------------------------------------
var volatile byte   ADCON0               shared at 0xFC2
var volatile bit*4  ADCON0_CHS           shared at ADCON0 : 2
var volatile bit    ADCON0_GO            shared at ADCON0 : 1
var volatile bit    ADCON0_NDONE         shared at ADCON0 : 1
var volatile bit    ADCON0_ADON          shared at ADCON0 : 0
-- ------------------------------------------------
var volatile word   ADRES                shared at 0xFC3
-- ------------------------------------------------
var volatile byte   ADRESL               shared at 0xFC3
-- ------------------------------------------------
var volatile byte   ADRESH               shared at 0xFC4
-- ------------------------------------------------
var volatile byte   SSP1CON2             shared at 0xFC5
var volatile bit    SSP1CON2_GCEN        shared at SSP1CON2 : 7
var volatile bit    SSP1CON2_ACKSTAT     shared at SSP1CON2 : 6
var volatile bit    SSP1CON2_ACKDT       shared at SSP1CON2 : 5
var volatile bit    SSP1CON2_ACKEN       shared at SSP1CON2 : 4
var volatile bit    SSP1CON2_RCEN        shared at SSP1CON2 : 3
var volatile bit    SSP1CON2_PEN         shared at SSP1CON2 : 2
var volatile bit    SSP1CON2_RSEN        shared at SSP1CON2 : 1
var volatile bit    SSP1CON2_SEN         shared at SSP1CON2 : 0
-- ------------------------------------------------
var volatile byte   SSP1CON              shared at 0xFC6
var volatile bit    SSP1CON_WCOL         shared at SSP1CON : 7
var volatile bit    SSP1CON_SSPOV        shared at SSP1CON : 6
var volatile bit    SSP1CON_SSPEN        shared at SSP1CON : 5
var volatile bit    SSP1CON_CKP          shared at SSP1CON : 4
var volatile bit*4  SSP1CON_SSPM         shared at SSP1CON : 0
-- ------------------------------------------------
var volatile byte   SSP1STAT             shared at 0xFC7
var volatile bit    SSP1STAT_SMP         shared at SSP1STAT : 7
var volatile bit    SSP1STAT_CKE         shared at SSP1STAT : 6
var volatile bit    SSP1STAT_D           shared at SSP1STAT : 5
var volatile bit    SSP1STAT_NA          shared at SSP1STAT : 5
var volatile bit    SSP1STAT_P           shared at SSP1STAT : 4
var volatile bit    SSP1STAT_S           shared at SSP1STAT : 3
var volatile bit    SSP1STAT_R           shared at SSP1STAT : 2
var volatile bit    SSP1STAT_NW          shared at SSP1STAT : 2
var volatile bit    SSP1STAT_UA          shared at SSP1STAT : 1
var volatile bit    SSP1STAT_BF          shared at SSP1STAT : 0
-- ------------------------------------------------
var volatile byte   SSP1ADD              shared at 0xFC8
var volatile byte   SSP1ADD_SSPADD       shared at SSP1ADD
-- ------------------------------------------------
var volatile byte   SSP1BUF              shared at 0xFC9
var volatile byte   SSP1BUF_SSPBUF       shared at SSP1BUF
-- ------------------------------------------------
var volatile byte   T2CON                shared at 0xFCA
var volatile bit*4  T2CON_TOUTPS         shared at T2CON : 3
var volatile bit    T2CON_TMR2ON         shared at T2CON : 2
var volatile bit*2  T2CON_T2CKPS         shared at T2CON : 0
-- ------------------------------------------------
var volatile byte   PR2                  shared at 0xFCB
-- ------------------------------------------------
var volatile byte   TMR2                 shared at 0xFCC
-- ------------------------------------------------
var volatile byte   T1CON                shared at 0xFCD
var volatile bit    T1CON_RD16           shared at T1CON : 7
var volatile bit    T1CON_T1RUN          shared at T1CON : 6
var volatile bit*2  T1CON_T1CKPS         shared at T1CON : 4
var volatile bit    T1CON_T1OSCEN        shared at T1CON : 3
var volatile bit    T1CON_NT1SYNC        shared at T1CON : 2
var volatile bit    T1CON_TMR1CS         shared at T1CON : 1
var volatile bit    T1CON_TMR1ON         shared at T1CON : 0
-- ------------------------------------------------
var volatile word   TMR1                 shared at 0xFCE
-- ------------------------------------------------
var volatile byte   TMR1L                shared at 0xFCE
-- ------------------------------------------------
var volatile byte   TMR1H                shared at 0xFCF
-- ------------------------------------------------
var volatile byte   RCON                 shared at 0xFD0
var volatile bit    RCON_IPEN            shared at RCON : 7
var volatile bit    RCON_SBOREN          shared at RCON : 6
var volatile bit    RCON_NRI             shared at RCON : 4
var volatile bit    RCON_NTO             shared at RCON : 3
var volatile bit    RCON_NPD             shared at RCON : 2
var volatile bit    RCON_NPOR            shared at RCON : 1
var volatile bit    RCON_NBOR            shared at RCON : 0
-- ------------------------------------------------
var volatile byte   WDTCON               shared at 0xFD1
var volatile bit    WDTCON_SWDTEN        shared at WDTCON : 0
-- ------------------------------------------------
var volatile byte   LVDCON               shared at 0xFD2
var volatile bit    LVDCON_IRVST         shared at LVDCON : 5
var volatile bit    LVDCON_LVDEN         shared at LVDCON : 4
var volatile bit*4  LVDCON_LVDL          shared at LVDCON : 0
-- ------------------------------------------------
var volatile byte   OSCCON               shared at 0xFD3
var volatile bit    OSCCON_IDLEN         shared at OSCCON : 7
var volatile bit*3  OSCCON_IRCF          shared at OSCCON : 4
var volatile bit    OSCCON_OSTS          shared at OSCCON : 3
var volatile bit    OSCCON_FLTS          shared at OSCCON : 2
var volatile bit*2  OSCCON_SCS           shared at OSCCON : 0
-- ------------------------------------------------
var volatile byte   T0CON                shared at 0xFD5
var volatile bit    T0CON_TMR0ON         shared at T0CON : 7
var volatile bit    T0CON_T08BIT         shared at T0CON : 6
var volatile bit    T0CON_T0CS           shared at T0CON : 5
var volatile bit    T0CON_T0SE           shared at T0CON : 4
var volatile bit    T0CON_PSA            shared at T0CON : 3
var volatile bit*3  T0CON_T0PS           shared at T0CON : 0
-- ------------------------------------------------
var volatile word   TMR0                 shared at 0xFD6
-- ------------------------------------------------
var volatile byte   TMR0L                shared at 0xFD6
-- ------------------------------------------------
var volatile byte   TMR0H                shared at 0xFD7
-- ------------------------------------------------
var volatile byte   STATUS               shared at 0xFD8
var volatile bit    STATUS_N             shared at STATUS : 4
var volatile bit    STATUS_OV            shared at STATUS : 3
var volatile bit    STATUS_Z             shared at STATUS : 2
var volatile bit    STATUS_DC            shared at STATUS : 1
var volatile bit    STATUS_C             shared at STATUS : 0
var volatile byte   _status              shared at 0xFD8      -- (compiler)
const        byte   _n                   =  4      -- (compiler)
const        byte   _ov                  =  3      -- (compiler)
const        byte   _z                   =  2      -- (compiler)
const        byte   _dc                  =  1      -- (compiler)
const        byte   _c                   =  0      -- (compiler)
const        byte   _banked              =  1      -- (compiler - use BSR)
const        byte   _access              =  0      -- (compiler - use ACCESS)
-- ------------------------------------------------
var volatile word   FSR2                 shared at 0xFD9
-- ------------------------------------------------
var volatile byte   FSR2L                shared at 0xFD9
-- ------------------------------------------------
var volatile byte   FSR2H                shared at 0xFDA
var volatile bit*4  FSR2H_FSR2H          shared at FSR2H : 0
-- ------------------------------------------------
var volatile byte   PLUSW2               shared at 0xFDB
-- ------------------------------------------------
var volatile byte   PREINC2              shared at 0xFDC
-- ------------------------------------------------
var volatile byte   POSTDEC2             shared at 0xFDD
-- ------------------------------------------------
var volatile byte   POSTINC2             shared at 0xFDE
-- ------------------------------------------------
var volatile byte   INDF2                shared at 0xFDF
-- ------------------------------------------------
var volatile byte   BSR                  shared at 0xFE0
var volatile bit*4  BSR_BSR              shared at BSR : 0
-- ------------------------------------------------
var volatile word   FSR1                 shared at 0xFE1
-- ------------------------------------------------
var volatile byte   FSR1L                shared at 0xFE1
-- ------------------------------------------------
var volatile byte   FSR1H                shared at 0xFE2
var volatile bit*4  FSR1H_FSR1H          shared at FSR1H : 0
-- ------------------------------------------------
var volatile byte   PLUSW1               shared at 0xFE3
-- ------------------------------------------------
var volatile byte   PREINC1              shared at 0xFE4
-- ------------------------------------------------
var volatile byte   POSTDEC1             shared at 0xFE5
-- ------------------------------------------------
var volatile byte   POSTINC1             shared at 0xFE6
-- ------------------------------------------------
var volatile byte   INDF1                shared at 0xFE7
-- ------------------------------------------------
var volatile byte   WREG                 shared at 0xFE8
-- ------------------------------------------------
var volatile word   FSR0                 shared at 0xFE9
var volatile word   _fsr0                shared at 0xFE9      -- (compiler)
-- ------------------------------------------------
var volatile byte   FSR0L                shared at 0xFE9
var volatile byte   _fsr0l               shared at 0xFE9      -- (compiler)
-- ------------------------------------------------
var volatile byte   FSR0H                shared at 0xFEA
var volatile bit*4  FSR0H_FSR0H          shared at FSR0H : 0
var volatile byte   _fsr0h               shared at 0xFEA      -- (compiler)
-- ------------------------------------------------
var volatile byte   PLUSW0               shared at 0xFEB
-- ------------------------------------------------
var volatile byte   PREINC0              shared at 0xFEC
-- ------------------------------------------------
var volatile byte   POSTDEC0             shared at 0xFED
-- ------------------------------------------------
var volatile byte   POSTINC0             shared at 0xFEE
-- ------------------------------------------------
var volatile byte   INDF0                shared at 0xFEF
var volatile byte   _ind0                shared at 0xFEF      -- (compiler)
-- ------------------------------------------------
var volatile byte   INTCON3              shared at 0xFF0
var volatile bit    INTCON3_INT2IP       shared at INTCON3 : 7
var volatile bit    INTCON3_INT1IP       shared at INTCON3 : 6
var volatile bit    INTCON3_INT3IE       shared at INTCON3 : 5
var volatile bit    INTCON3_INT2IE       shared at INTCON3 : 4
var volatile bit    INTCON3_INT1IE       shared at INTCON3 : 3
var volatile bit    INTCON3_INT3IF       shared at INTCON3 : 2
var volatile bit    INTCON3_INT2IF       shared at INTCON3 : 1
var volatile bit    INTCON3_INT1IF       shared at INTCON3 : 0
-- ------------------------------------------------
var volatile byte   INTCON2              shared at 0xFF1
var volatile bit    INTCON2_NRBPU        shared at INTCON2 : 7
var volatile bit    INTCON2_INTEDG0      shared at INTCON2 : 6
var volatile bit    INTCON2_INTEDG1      shared at INTCON2 : 5
var volatile bit    INTCON2_INTEDG2      shared at INTCON2 : 4
var volatile bit    INTCON2_INTEDG3      shared at INTCON2 : 3
var volatile bit    INTCON2_TMR0IP       shared at INTCON2 : 2
var volatile bit    INTCON2_INT3IP       shared at INTCON2 : 1
var volatile bit    INTCON2_RBIP         shared at INTCON2 : 0
-- ------------------------------------------------
var volatile byte   INTCON               shared at 0xFF2
var volatile bit    INTCON_GIE           shared at INTCON : 7
var volatile bit    INTCON_GIEH          shared at INTCON : 7
var volatile bit    INTCON_PEIE          shared at INTCON : 6
var volatile bit    INTCON_GIEL          shared at INTCON : 6
var volatile bit    INTCON_TMR0IE        shared at INTCON : 5
var volatile bit    REG_T0IE             shared at INTCON : 5
var volatile bit    INTCON_INT0IE        shared at INTCON : 4
var volatile bit    INTCON_RBIE          shared at INTCON : 3
var volatile bit    INTCON_TMR0IF        shared at INTCON : 2
var volatile bit    REG_T0IF             shared at INTCON : 2
var volatile bit    INTCON_INT0IF        shared at INTCON : 1
var volatile bit    INTCON_RBIF          shared at INTCON : 0
-- ------------------------------------------------
var volatile word   PROD                 shared at 0xFF3
-- ------------------------------------------------
var volatile byte   PRODL                shared at 0xFF3
-- ------------------------------------------------
var volatile byte   PRODH                shared at 0xFF4
-- ------------------------------------------------
var volatile byte   TABLAT               shared at 0xFF5
var volatile byte   _tablat              shared at 0xFF5      -- (compiler)
-- ------------------------------------------------
var volatile byte*3 TBLPTR               shared at 0xFF6
var volatile bit    TBLPTR_ACSS          shared at TBLPTR : 5
var volatile byte*3 _tblptr              shared at 0xFF6      -- (compiler)
-- ------------------------------------------------
var volatile byte   TBLPTRL              shared at 0xFF6
-- ------------------------------------------------
var volatile byte   TBLPTRH              shared at 0xFF7
-- ------------------------------------------------
var volatile byte   TBLPTRU              shared at 0xFF8
var volatile bit    TBLPTRU_ACSS         shared at TBLPTRU : 5
var volatile bit*5  TBLPTRU_TBLPTRU      shared at TBLPTRU : 0
-- ------------------------------------------------
var volatile byte*3 PCLAT                shared at 0xFF9
-- ------------------------------------------------
var volatile byte   PCL                  shared at 0xFF9
var volatile byte   _pcl                 shared at 0xFF9      -- (compiler)
-- ------------------------------------------------
var volatile byte   PCLATH               shared at 0xFFA
var volatile byte   PCLATH_PCH           shared at PCLATH
var volatile byte   _pclath              shared at 0xFFA      -- (compiler)
-- ------------------------------------------------
var volatile byte   PCLATU               shared at 0xFFB
var volatile bit*5  PCLATU_PCU           shared at PCLATU : 0
var volatile byte   _pclatu              shared at 0xFFB      -- (compiler)
-- ------------------------------------------------
var volatile byte   STKPTR               shared at 0xFFC
var volatile bit    STKPTR_STKFUL        shared at STKPTR : 7
var volatile bit    STKPTR_STKUNF        shared at STKPTR : 6
var volatile bit*5  STKPTR_STKPTR        shared at STKPTR : 0
-- ------------------------------------------------
var volatile byte*3 TOS                  shared at 0xFFD
-- ------------------------------------------------
var volatile byte   TOSL                 shared at 0xFFD
-- ------------------------------------------------
var volatile byte   TOSH                 shared at 0xFFE
-- ------------------------------------------------
var volatile byte   TOSU                 shared at 0xFFF
var volatile bit*5  TOSU_TOSU            shared at TOSU : 0
--
-- ===================================================
--
-- Special device dependent procedures
--
-- ---------------------------------------------------
-- Disable ADC module (ADC_group ADC_V5)
--
procedure adc_off() is
   pragma inline
   ADCON0 = 0b0000_0000         -- disable ADC
   ADCON1 = 0b0000_1111         -- digital I/O
   ADCON2 = 0b0000_0000
end procedure
--
-- ---------------------------------------------------
-- Disable comparator module
--
procedure comparator_off() is
   pragma inline
   CMCON  = 0b0000_0111        -- disable comparator
end procedure
--
-- ---------------------------------------------------
-- Switch analog ports to digital mode (if analog module present).
--
procedure enable_digital_io() is
   pragma inline
   adc_off()
   comparator_off()
end procedure
--
--
-- ==================================================
--
-- Symbolic Fuse definitions
-- -------------------------
--
-- addr 0x300001
--
pragma fuse_def OSC:1 0xF {
       EXTOSC_CLKOUT = 0xC
       INTOSC_CLKOUT = 0x9
       INTOSC_NOCLKOUT = 0x8
       EXTOSC_NOCLKOUT = 0x7
       HS_PLL = 0x6
       EC_NOCLKOUT = 0x5
       EC_CLKOUT = 0x4
       HS = 0x2
       XT = 0x1
       LP = 0x0
       }
pragma fuse_def FCMEN:1 0x40 {
       DISABLED = 0x0
       ENABLED = 0x40
       }
pragma fuse_def IESO:1 0x80 {
       DISABLED = 0x0
       ENABLED = 0x80
       }
--
-- addr 0x300002
--
pragma fuse_def PWRTE:2 0x1 {
       DISABLED = 0x1
       ENABLED = 0x0
       }
pragma fuse_def BROWNOUT:2 0x6 {
       ENABLED = 0x6
       RUNONLY = 0x4
       CONTROL = 0x2
       DISABLED = 0x0
       }
pragma fuse_def VOLTAGE:2 0x18 {
       V20 = 0x18
       V27 = 0x10
       V42 = 0x8
       V45 = 0x0
       }
--
-- addr 0x300003
--
pragma fuse_def WDT:3 0x1 {
       ENABLED = 0x1
       DISABLED = 0x0
       }
pragma fuse_def WDTPS:3 0x1E {
       P32768 = 0x1E
       P16384 = 0x1C
       P8192 = 0x1A
       P4096 = 0x18
       P2048 = 0x16
       P1024 = 0x14
       P512 = 0x12
       P256 = 0x10
       P128 = 0xE
       P64 = 0xC
       P32 = 0xA
       P16 = 0x8
       P8 = 0x6
       P4 = 0x4
       P2 = 0x2
       P1 = 0x0
       }
--
-- addr 0x300004
--
pragma fuse_def PMODE:4 0x3 {
       MICROCONTROLLER = 0x3
       MICROPROCESSOR = 0x2
       MICROPROCESSOR_W_BOOT = 0x1
       EXT_MICROCONTROLLER = 0x0
       }
pragma fuse_def ABW:4 0x30 {
       _20_BIT = 0x30
       _16_BIT = 0x20
       _12_BIT = 0x10
       _8_BIT = 0x0
       }
pragma fuse_def BW:4 0x40 {
       _16_BIT_EXTERNAL_BUS = 0x40
       _8_BIT_EXTERNAL_BUS = 0x0
       }
pragma fuse_def WAIT:4 0x80 {
       DISABLED = 0x80
       ENABLED = 0x0
       }
--
-- addr 0x300005
--
pragma fuse_def CCP2MUX:5 0x1 {
       RC1 = 0x1
       RE7_MICROCONTROLLER_MODE_RB3_ALL_OTHER_MODES = 0x0
       }
pragma fuse_def ECCPMX:5 0x2 {
       ENHANCED_CCP1_3__P1B_P1C_P3B_P3C__MUXED_WITH_RE6_RE5_RE4_RE3 = 0x2
       ENHANCED_CCP1_3__P1B_P1C_P3B_P3C__MUXED_WITH_RH7_RH6_RH5_RH4 = 0x0
       }
pragma fuse_def LPT1OSC:5 0x4 {
       ENABLED = 0x4
       DISABLED = 0x0
       }
pragma fuse_def MCLR:5 0x80 {
       EXTERNAL = 0x80
       INTERNAL = 0x0
       }
--
-- addr 0x300006
--
pragma fuse_def STVR:6 0x1 {
       ENABLED = 0x1
       DISABLED = 0x0
       }
pragma fuse_def LVP:6 0x4 {
       ENABLED = 0x4
       DISABLED = 0x0
       }
pragma fuse_def BBSIZ:6 0x30 {
       _4K_WORDS__8_KBYTES_ = 0x20
       _2K_WORDS__4_KBYTES_ = 0x10
       _1K_WORDS__2_KBYTES_ = 0x0
       }
pragma fuse_def XINST:6 0x40 {
       ENABLED = 0x40
       DISABLED = 0x0
       }
pragma fuse_def BACKBUG:6 0x80 {
       DISABLED = 0x80
       ENABLED = 0x0
       }
--
-- addr 0x300008
--
pragma fuse_def CP_0:8 0x1 {
       DISABLED = 0x1
       ENABLED = 0x0
       }
pragma fuse_def CP_1:8 0x2 {
       DISABLED = 0x2
       ENABLED = 0x0
       }
pragma fuse_def CP_2:8 0x4 {
       DISABLED = 0x4
       ENABLED = 0x0
       }
pragma fuse_def CP_3:8 0x8 {
       DISABLED = 0x8
       ENABLED = 0x0
       }
pragma fuse_def CP_4:8 0x10 {
       DISABLED = 0x10
       ENABLED = 0x0
       }
pragma fuse_def CP_5:8 0x20 {
       DISABLED = 0x20
       ENABLED = 0x0
       }
--
-- addr 0x300009
--
pragma fuse_def CPB:9 0x40 {
       DISABLED = 0x40
       ENABLED = 0x0
       }
pragma fuse_def CPD:9 0x80 {
       DISABLED = 0x80
       ENABLED = 0x0
       }
--
-- addr 0x30000A
--
pragma fuse_def WRT_0:10 0x1 {
       DISABLED = 0x1
       ENABLED = 0x0
       }
pragma fuse_def WRT_1:10 0x2 {
       DISABLED = 0x2
       ENABLED = 0x0
       }
pragma fuse_def WRT_2:10 0x4 {
       DISABLED = 0x4
       ENABLED = 0x0
       }
pragma fuse_def WRT_3:10 0x8 {
       DISABLED = 0x8
       ENABLED = 0x0
       }
pragma fuse_def WRT_4:10 0x10 {
       DISABLED = 0x10
       ENABLED = 0x0
       }
pragma fuse_def WRT_5:10 0x20 {
       DISABLED = 0x20
       ENABLED = 0x0
       }
--
-- addr 0x30000B
--
pragma fuse_def WRTC:11 0x20 {
       DISABLED = 0x20
       ENABLED = 0x0
       }
pragma fuse_def WRTB:11 0x40 {
       DISABLED = 0x40
       ENABLED = 0x0
       }
pragma fuse_def WRTD:11 0x80 {
       DISABLED = 0x80
       ENABLED = 0x0
       }
--
-- addr 0x30000C
--
pragma fuse_def EBTR_0:12 0x1 {
       DISABLED = 0x1
       ENABLED = 0x0
       }
pragma fuse_def EBTR_1:12 0x2 {
       DISABLED = 0x2
       ENABLED = 0x0
       }
pragma fuse_def EBTR_2:12 0x4 {
       DISABLED = 0x4
       ENABLED = 0x0
       }
pragma fuse_def EBTR_3:12 0x8 {
       DISABLED = 0x8
       ENABLED = 0x0
       }
pragma fuse_def EBTR_4:12 0x10 {
       DISABLED = 0x10
       ENABLED = 0x0
       }
pragma fuse_def EBTR_5:12 0x20 {
       DISABLED = 0x20
       ENABLED = 0x0
       }
--
-- addr 0x30000D
--
pragma fuse_def EBTRB:13 0x40 {
       DISABLED = 0x40
       ENABLED = 0x0
       }
--
