-- Title: sqrt.jal 
-- Author: Kyle York, Copyright (c) 2009, all rights reserved.
-- Adapted-by: Joep Suijs
-- Compiler: >=2.4i
-- 
-- This file is part of jallib (http://jallib.googlecode.com)
-- Released under the ZLIB license (http://www.opensource.org/licenses/zlib-license.html)
--
-- Description: this library provides sqrt for 16 and 32 bit vars, result is 8 or 16 bits.
--
-- Sources:
--


function sqrt(dword in invalue) return word is
   var dword xest

   if (invalue == 0) then return 0 end if

   if (invalue < 10_000) then
      xest = 31
   elsif (invalue < 5_000_000) then
      xest = 600
   elsif (invalue < 200_000_000) then
      xest = 8000
   else
      xest = 40000
   end if
         
   
   for 4 loop
      xest = (xest + invalue / xest) / 2 
   end loop                             
      
   return word(xest)
   
end function

function sqrt16(word in x) return byte is
 var word m, y

 m = 0x4000
 y = 0
 while (m != 0) loop
   var word b

   b = y | m
   y = y >> 1
   if (x >= b) then
     x = x - b
     y = y | m
   end if
   m = m >> 2
 end loop
 return byte(y)
end function

function sqrt32(dword in x) return word is
 var dword m, y

 m = 0x40000000
 y = 0
 while (m != 0) loop
   var dword b

   b = y | m
   y = y >> 1
   if (x >= b) then
     x = x - b
     y = y | m
   end if
   m = m >> 2
 end loop
 return word(y)
end function
