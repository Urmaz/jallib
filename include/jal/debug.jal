-- Title: Debug via print library
-- Author: Matthew Schinkel - borntechi.com, copyright (c) 2009, all rights reserved.
-- Adapted-by:
-- Compiler: >=2.4n
--
-- This file is part of jallib (http://jallib.googlecode.com)
-- Released under the ZLIB license (http://www.opensource.org/licenses/zlib-license.html)
--
-- Description: The debug library has all the same functions as the print library,
--              but the user defines constants to turn on and off this
--              library and users debug levels.
--
-- Sources:
-- The jallib print library
--

procedure debug_crlf(byte in debug_level) is
   pragma inline
   if DEBUG_MASTER_ENABLE == TRUE  then
      if DEBUG_ENABLE[debug_level] == TRUE then
         print_crlf(debug_stream)
      end if
   end if
end procedure

procedure debug_string(byte in debug_level,byte in str_in[]) is
   pragma inline
   if DEBUG_MASTER_ENABLE == TRUE  then
      if DEBUG_ENABLE[debug_level] == TRUE then
         print_string(debug_stream, str_in)
      end if
   end if
end procedure

procedure debug_bit_truefalse(byte in debug_level,bit in data) is
   pragma inline
   if DEBUG_MASTER_ENABLE == TRUE  then
      if DEBUG_ENABLE[debug_level] == TRUE then
         print_bit_truefalse(debug_stream,data)
      end if
   end if
end procedure

procedure debug_bit_highlow(byte in debug_level,bit in data) is
   pragma inline
   if DEBUG_MASTER_ENABLE == TRUE  then
      if DEBUG_ENABLE[debug_level] == TRUE then
         print_bit_highlow(debug_stream,data)
      end if
   end if
end procedure

procedure debug_bit_10(byte in debug_level,bit in data) is
   pragma inline
   if DEBUG_MASTER_ENABLE == TRUE  then
      if DEBUG_ENABLE[debug_level] == TRUE then
         print_bit_10(debug_stream,data)
      end if
   end if
end procedure

procedure debug_dword_binary(byte in debug_level,dword in data) is
   pragma inline
   if DEBUG_MASTER_ENABLE == TRUE  then
      if DEBUG_ENABLE[debug_level] == TRUE then
         print_dword_binary(debug_stream,data)
      end if
   end if
end procedure

procedure debug_word_binary(byte in debug_level,word in data) is
   pragma inline
   if DEBUG_MASTER_ENABLE == TRUE  then
      if DEBUG_ENABLE[debug_level] == TRUE then
         print_word_binary(debug_stream,data)
      end if
   end if
end procedure

procedure debug_byte_binary(byte in debug_level,byte in data) is
   pragma inline
   if DEBUG_MASTER_ENABLE == TRUE  then
      if DEBUG_ENABLE[debug_level] == TRUE then
         print_byte_binary(debug_stream,data)
      end if
   end if
end procedure

procedure debug_nibble_binary(byte in debug_level,byte in data) is
   pragma inline
   if DEBUG_MASTER_ENABLE == TRUE  then
      if DEBUG_ENABLE[debug_level] == TRUE then
         print_nibble_binary(debug_stream,data)
      end if
   end if
end procedure

procedure debug_dword_hex(byte in debug_level,dword in data) is
   pragma inline
   if DEBUG_MASTER_ENABLE == TRUE  then
      if DEBUG_ENABLE[debug_level] == TRUE then
         print_dword_hex(debug_stream,data)
      end if
   end if
end procedure

procedure debug_sdword_hex(byte in debug_level,sdword in data) is
   pragma inline
   if DEBUG_MASTER_ENABLE == TRUE  then
      if DEBUG_ENABLE[debug_level] == TRUE then
         print_sdword_hex(debug_stream,data)
      end if
   end if
end procedure

procedure debug_word_hex(byte in debug_level,word in data) is
   pragma inline
   if DEBUG_MASTER_ENABLE == TRUE  then
      if DEBUG_ENABLE[debug_level] == TRUE then
         print_word_hex(debug_stream,data)
      end if
   end if
end procedure

procedure debug_byte_hex(byte in debug_level,byte in data) is
   pragma inline
   if DEBUG_MASTER_ENABLE == TRUE  then
      if DEBUG_ENABLE[debug_level] == TRUE then
         print_byte_hex(debug_stream,data)
      end if
   end if
end procedure

procedure debug_sdword_dec(byte in debug_level,sdword in data) is
   pragma inline
   if DEBUG_MASTER_ENABLE == TRUE  then
      if DEBUG_ENABLE[debug_level] == TRUE then
         print_sdword_dec(debug_stream,data)
      end if
   end if
end procedure

procedure debug_sword_dec(byte in debug_level,sword in data) is
   pragma inline
   if DEBUG_MASTER_ENABLE == TRUE  then
      if DEBUG_ENABLE[debug_level] == TRUE then
         print_sword_dec(debug_stream,data)
      end if
   end if
end procedure

procedure debug_sword_fp_dec(byte in debug_level,sword in data) is
   pragma inline
   if DEBUG_MASTER_ENABLE == TRUE  then
      if DEBUG_ENABLE[debug_level] == TRUE then
         print_sword_fp_dec(debug_stream,data)
      end if
   end if
end procedure

procedure debug_sbyte_dec(byte in debug_level,sbyte in data) is
   pragma inline
   if DEBUG_MASTER_ENABLE == TRUE  then
      if DEBUG_ENABLE[debug_level] == TRUE then
         print_sbyte_dec(debug_stream,data)
      end if
   end if
end procedure

procedure debug_dword_dec(byte in debug_level,dword in data) is
   pragma inline
   if DEBUG_MASTER_ENABLE == TRUE  then
      if DEBUG_ENABLE[debug_level] == TRUE then
         print_dword_dec(debug_stream,data)
      end if
   end if
end procedure

procedure debug_word_dec(byte in debug_level,word in data) is
   pragma inline
   if DEBUG_MASTER_ENABLE == TRUE  then
      if DEBUG_ENABLE[debug_level] == TRUE then
         print_word_dec(debug_stream,data)
      end if
   end if
end procedure

procedure debug_byte_dec(byte in debug_level,byte in data) is
   pragma inline
   if DEBUG_MASTER_ENABLE == TRUE  then
      if DEBUG_ENABLE[debug_level] == TRUE then
         print_byte_dec(debug_stream,data)
      end if
   end if
end procedure

procedure print_suniversal_dec(byte in debug_level,sdword in data, sdword in digit_divisor, byte in digit_number) is
   pragma inline
   if DEBUG_MASTER_ENABLE == TRUE  then
      if DEBUG_ENABLE[debug_level] == TRUE then
         _print_suniversal_dec(debug_stream,data,digit_divisor,digit_number)
      end if
   end if
end procedure

procedure print_universal_dec(byte in debug_level,dword in data, sdword in digit_divisor, byte in digit_number) is
   pragma inline
   if DEBUG_MASTER_ENABLE == TRUE  then
      if DEBUG_ENABLE[debug_level] == TRUE then
         _print_universal_dec(debug_stream,data,digit_divisor,digit_number)
      end if
   end if
end procedure

