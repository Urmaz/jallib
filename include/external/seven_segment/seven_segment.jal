-- Title: seven_segment.jal - translation routine for 7 segment display
-- Author: Wouter van Ooijen (c) 1998, all rights reserved.
-- Adapted-by: Joep Suijs
-- Compiler: >=2.2
-- 
-- This file is part of jallib (http://jallib.googlecode.com)
-- Released under the ZLIB license (http://www.opensource.org/licenses/zlib-license.html)
--
-- Sources: 
-- 
-- Description:  Translation routine for 7 segment display. 
-- --                                                             
-- The seven segment display needs to be connected to a single port.
-- Define the pin layout of the seven segment display like:
-- --
-- -- constant for the segments      gfe dcba
-- const byte seven_segment_a  = 0b_0000_0001
-- const byte seven_segment_b  = 0b_0000_0010
-- const byte seven_segment_c  = 0b_0000_0100
-- const byte seven_segment_d  = 0b_0000_1000
-- const byte seven_segment_e  = 0b_0001_0000
-- const byte seven_segment_f  = 0b_0010_0000
-- const byte seven_segment_g  = 0b_0100_0000
-- const byte seven_segment_dp = 0b_1000_0000
-- --
-- Use:
-- portd_direction = all_output
-- portd = seven_from_digit(1) -- display '1'
-- --
--
-- Notes: 
--


if (defined(seven_segment_common_anode) == false) then
   const bit seven_segment_common_anode = false -- default is common_cathode
end if


if (seven_segment_common_anode == true) then
   const _seven_common_mask = 0xff
else
   const _seven_common_mask = 0x00
end if


if (defined(seven_segment_a) == false) then   
   -- Default segment setup          gfe dcba
   const byte seven_segment_a  = 0b_0000_0001
   const byte seven_segment_b  = 0b_0000_0010
   const byte seven_segment_c  = 0b_0000_0100
   const byte seven_segment_d  = 0b_0000_1000
   const byte seven_segment_e  = 0b_0001_0000
   const byte seven_segment_f  = 0b_0010_0000
   const byte seven_segment_g  = 0b_0100_0000
   const byte seven_segment_dp = 0b_1000_0000
   
end if

const byte seven_value_space[] = {
   -- const byte seven_value_0
   _seven_common_mask ^ (
     seven_segment_a   
   + seven_segment_b  
   + seven_segment_c  
   + seven_segment_d
   + seven_segment_e
   + seven_segment_f       ),
   
   -- const byte seven_value_1
   _seven_common_mask ^ (
     seven_segment_b  
   + seven_segment_c    ),
   
   -- const byte seven_value_2
   _seven_common_mask ^ (
     seven_segment_a   
   + seven_segment_b  
   + seven_segment_d
   + seven_segment_e
   + seven_segment_g    ),
   
   -- const byte seven_value_3
   _seven_common_mask ^ (
     seven_segment_a   
   + seven_segment_b  
   + seven_segment_c  
   + seven_segment_d
   + seven_segment_g    ),
   
   -- const byte seven_value_4
   _seven_common_mask ^ (
     seven_segment_b  
   + seven_segment_c  
   + seven_segment_f
   + seven_segment_g    ),
   
   -- const byte seven_value_5
   _seven_common_mask ^ (
     seven_segment_a   
   + seven_segment_c  
   + seven_segment_d
   + seven_segment_f
   + seven_segment_g    ),
   
   -- const byte seven_value_6
   _seven_common_mask ^ (
     seven_segment_a   
   + seven_segment_c  
   + seven_segment_d
   + seven_segment_e
   + seven_segment_f
   + seven_segment_g    ),
   
   -- const byte seven_value_7
   _seven_common_mask ^ (
     seven_segment_a   
   + seven_segment_b  
   + seven_segment_c    ),
   
   -- const byte seven_value_8
   _seven_common_mask ^ (
     seven_segment_a   
   + seven_segment_b  
   + seven_segment_c  
   + seven_segment_d
   + seven_segment_e
   + seven_segment_f
   + seven_segment_g    ),
   
   -- const byte seven_value_9
   _seven_common_mask ^ (
     seven_segment_a   
   + seven_segment_b  
   + seven_segment_c  
   + seven_segment_d
   + seven_segment_f
   + seven_segment_g    ),
   
   -- const byte seven_value_a
   _seven_common_mask ^ (
     seven_segment_a   
   + seven_segment_b  
   + seven_segment_c  
   + seven_segment_e
   + seven_segment_f
   + seven_segment_g    ),
   
   -- const byte seven_value_b
   _seven_common_mask ^ (
     seven_segment_c  
   + seven_segment_d
   + seven_segment_e
   + seven_segment_f
   + seven_segment_g    ),
   
   -- const byte seven_value_c
   _seven_common_mask ^ (
     seven_segment_a   
   + seven_segment_d
   + seven_segment_e
   + seven_segment_f    ),
   
   -- const byte seven_value_d
   _seven_common_mask ^ (
     seven_segment_b  
   + seven_segment_c  
   + seven_segment_d
   + seven_segment_e
   + seven_segment_g    ),
   
   -- const byte seven_value_e
   _seven_common_mask ^ (
     seven_segment_a   
   + seven_segment_d
   + seven_segment_e
   + seven_segment_f
   + seven_segment_g    ),
   
   -- const byte seven_value_f
   _seven_common_mask ^ (
     seven_segment_a   
   + seven_segment_e
   + seven_segment_f  
   + seven_segment_g    ),
   
   -- const byte seven_letter_c (16)
   _seven_common_mask ^ (
     seven_segment_a   
   + seven_segment_f
   + seven_segment_e  
   + seven_segment_d    ),
   
   -- const byte seven_letter_s (17)
   _seven_common_mask ^ (
     seven_segment_a   
   + seven_segment_f
   + seven_segment_g  
   + seven_segment_c
   + seven_segment_d    )
}


-- return seven segment value corresponding to lower nibble of x
function seven_from_digit( byte in x ) return byte is      
   
   return seven_value_space[x]
   
end function