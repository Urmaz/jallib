
;@j2c #include <avr/io.h>
;@j2c 
;@j2c #define F_CPU 16000000
;@j2c 
;@j2c // Some macros that make the code more readable
;@j2c #define output_low(port,pin) port &= ~(1<<pin)
;@j2c #define output_high(port,pin) port |= (1<<pin)
;@j2c #define set_input(portdir,pin) portdir &= ~(1<<pin)
;@j2c #define set_output(portdir,pin) portdir |= (1<<pin)
;@j2c        

; this is just a program that 'kills time' in a calibrated method
procedure delay_ms(byte in ms) is
;@j2c   uint16_t delay_count = F_CPU / 17500;
;@j2c   volatile uint16_t i;
;@j2c 
;@j2c   while (ms != 0) {
;@j2c     for (i=0; i != delay_count; i++);
;@j2c     ms--;
;@j2c   }
end procedure