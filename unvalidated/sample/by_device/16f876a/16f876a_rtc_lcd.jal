-- Title: Sample program to show usage of rtc_isr_tmr0
-- Author: Eur van Andel, Copyright (c) 2008, all rights reserved.
-- Adapted-by: 
-- Compiler: >=2.4h
-- 
-- This file is part of jallib (http://jallib.googlecode.com)
-- Released under the BSD license (http://www.opensource.org/licenses/bsd-license.php)
--
-- Sources:  http://www.romanblack.com/one_sec.htm, http://en.wikipedia.org/wiki/Bresenham%27s_line_algorithm
-- 
-- Description: This program shows how to get Real Time in a PIC
--
-- Notes: there is no way to set the time in this program, other than before compiling
-- for more options, including automatic initialisation and timesetting, see sample_rtc_timeset.jal
-- 
-- ------------------- SELECT PIC ----------------------------
include 16f876a

pragma target clock     20_000_000           -- 20 MHz xtal
pragma target OSC       HS                   -- high speed
pragma target WDT       disabled             -- no watchdog, please
pragma target LVP       disabled             -- no low voltage programming

enable_digital_io()                          -- no analog pins used in this sample

OPTION_REG_T0CS = 0                          -- TMR0 on internal clock
OPTION_REG_PSA  = 1                          -- so no prescaler for TMR0 (= default)

-- ------------------------ LIBRARIES ------------------------

include rtc_isr_tmr0

var byte minutes  = 30              -- seconds defined ISR lib
var byte hours    = 12              -- arbitrary time

var byte date     = 12
var byte month    = 10
var word year     = 1492         -- date Columbus landed in the Carribean

include calendar                 -- 60/24/27..31/12 range limits
include delay                    -- used by LCD lib

const byte  LCD_ROWS = 4
const byte  LCD_CHARS = 20
var   bit   LCD_RS           is pin_b5       -- LCD command/data select.
var   bit   LCD_EN           is pin_b4       -- LCD data trigger
var   byte  LCD_dataport     is portb_low    -- LCD data nibble
portb_direction              = all_output    -- LCD data is portb_low
include lcd_hd44780_4                        -- LCD library with 4 data lines
lcd_init()

include print                                -- nice formatted output 
include format                               -- more nice formatting

-- -------------------------- START PROGRAM -----------------

INTCON_TMR0IE = on                  -- if your PIC freezes, move these lines
INTCON_GIE = on                     -- to see if the ISR causes trouble


lcd_clearscreen()
forever loop
   lcd_setcursor(0,0) 
   const byte str1[] = "Time RTC sample"   
   print_string(lcd, str1)                      

   lcd_setcursor(1,0) 
   print_byte_dec(lcd, date)
   lcd = "-"
   print_byte_dec(lcd, month)
   lcd = "-"
   print_word_dec(lcd, year)
   lcd = " "
   if seconds > 59 then 
      calendar()
   end if
   format_time_hms(lcd, hours, minutes, seconds)
   
   lcd_setcursor(2,0)                        -- line 3
   if seconds % 16 == 0 then
      lcd = "*"
   else 
      lcd = " "
   end if
   if seconds % 8 == 0 then
      lcd = "*"
   else 
      lcd = " "
   end if
   if seconds % 4 == 0 then
      lcd = "*"
   else 
      lcd = " "
   end if
   if seconds % 2 == 0 then
      lcd = "*"
   else 
      lcd = " "
   end if
   
   delay_100ms(2)                              -- for proper LCD viewing
end loop




