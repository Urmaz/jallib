-- ===================================================
-- Title: JalV2 device include file for pic18f4550
--
-- Author: Rob Hamerling, Copyright (c) 2008..2008, all rights reserved.
--
-- Adapted-by:
--
-- Compiler: =2.4h
--
-- This file is part of jallib  (http://jallib.googlecode.com)
-- Released under the BSD license (http://www.opensource.org/licenses/bsd-license.php)
--
-- Description: Device include file for pic18f4550, containing:
--                - Declaration of ports and pins of the chip.
--                - Procedures to force the use of the LATx register
--                  when PORTx is addressed.
--                - Symbolic definitions for config bits (fuses)
--                - Some device dependent procedures for common
--                  operations, like:
--                   . enable_digital_io()
--
-- Sources:
--  - x:/mplab814/mplab_ide/device/pic18f4550.dev
--  - x:/mplab814/mpasm_suite/lkr/18f4550_g.lkr
--
-- Notes:
--  - Created with Dev2Jal Rexx script version 0.0.50
--  - File creation date/time: 11 Oct 2008 21:07:23.
--
-- ===================================================
--
-- Device-ID: 0x1200
-- DataSheet: 39632
-- Programming Specifications: 39622
-- Vdd Range: 2.125-5.500 Nominal: 5.000
-- Vpp Range: 9.500-12.500 Default: 12.000
--
-- ---------------------------------------------------
--
include chipdef_jallib                  -- common constants
--
pragma  target  cpu   PIC_16            -- (banks = 16)
pragma  target  chip  18f4550
pragma  target  bank  0x0100
pragma  stack   31
pragma  code    32768
pragma  eeprom  0xF00000,256
pragma  data    0x60-0xFF,0x100-0x1FF,0x200-0x2FF,0x300-0x3FF
pragma  shared  0x0-0x5F
--
var volatile byte _pic_accum shared at 0x5E   -- (compiler)
var volatile byte _pic_isr_w shared at 0x5F   -- (compiler)
--
const word  _FUSES_CT             = 14
const dword _FUSE_BASE[_FUSES_CT] = { 0x300000,
                                      0x300001,
                                      0x300002,
                                      0x300003,
                                      0x300004,
                                      0x300005,
                                      0x300006,
                                      0x300007,
                                      0x300008,
                                      0x300009,
                                      0x30000A,
                                      0x30000B,
                                      0x30000C,
                                      0x30000D }
const byte  _FUSES[_FUSES_CT]     = { 0x3F,
                                      0xCF,
                                      0x3F,
                                      0x1F,
                                      0x00,
                                      0x87,
                                      0xE5,
                                      0x00,
                                      0x0F,
                                      0xC0,
                                      0x0F,
                                      0xE0,
                                      0x0F,
                                      0x40 }
--
const word  _ID_CT                = 8
const dword _ID_BASE[_ID_CT]      = { 0x200000,
                                      0x200001,
                                      0x200002,
                                      0x200003,
                                      0x200004,
                                      0x200005,
                                      0x200006,
                                      0x200007 }
const byte  _ID[_ID_CT]           = { 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00 }
--
-- ------------------------------------------------
var volatile byte   SPPDATA              shared at 0xF62
var volatile byte   SPPDATA_DATA         shared at SPPDATA
-- ------------------------------------------------
var volatile byte   SPPCFG               shared at 0xF63
var volatile bit*2  SPPCFG_CLKCFG        shared at SPPCFG : 6
var volatile bit    SPPCFG_CSEN          shared at SPPCFG : 5
var volatile bit    SPPCFG_CLK1EN        shared at SPPCFG : 4
var volatile bit*4  SPPCFG_WS            shared at SPPCFG : 0
-- ------------------------------------------------
var volatile byte   SPPEPS               shared at 0xF64
var volatile bit    SPPEPS_RDSPP         shared at SPPEPS : 7
var volatile bit    SPPEPS_WRSPP         shared at SPPEPS : 6
var volatile bit    SPPEPS_SPPBUSY       shared at SPPEPS : 4
var volatile bit*4  SPPEPS_ADDR          shared at SPPEPS : 0
-- ------------------------------------------------
var volatile byte   SPPCON               shared at 0xF65
var volatile bit    SPPCON_SPPOWN        shared at SPPCON : 1
var volatile bit    SPPCON_SPPEN         shared at SPPCON : 0
-- ------------------------------------------------
var volatile word   UFRM                 shared at 0xF66
-- ------------------------------------------------
var volatile byte   UFRML                shared at 0xF66
var volatile byte   UFRML_FRM            shared at UFRML
-- ------------------------------------------------
var volatile byte   UFRMH                shared at 0xF67
var volatile bit*3  UFRMH_FRM            shared at UFRMH : 0
-- ------------------------------------------------
var volatile byte   UIR                  shared at 0xF68
var volatile bit    UIR_SOFIF            shared at UIR : 6
var volatile bit    UIR_STALLIF          shared at UIR : 5
var volatile bit    UIR_IDLEIF           shared at UIR : 4
var volatile bit    UIR_TRNIF            shared at UIR : 3
var volatile bit    UIR_ACTIVIF          shared at UIR : 2
var volatile bit    UIR_UERRIF           shared at UIR : 1
var volatile bit    UIR_URSTIF           shared at UIR : 0
-- ------------------------------------------------
var volatile byte   UIE                  shared at 0xF69
var volatile bit    UIE_SOFIE            shared at UIE : 6
var volatile bit    UIE_STALLIE          shared at UIE : 5
var volatile bit    UIE_IDLEIE           shared at UIE : 4
var volatile bit    UIE_TRNIE            shared at UIE : 3
var volatile bit    UIE_ACTIVIE          shared at UIE : 2
var volatile bit    UIE_UERRIE           shared at UIE : 1
var volatile bit    UIE_URSTIE           shared at UIE : 0
-- ------------------------------------------------
var volatile byte   UEIR                 shared at 0xF6A
var volatile bit    UEIR_BTSEF           shared at UEIR : 7
var volatile bit    UEIR_BTOEF           shared at UEIR : 4
var volatile bit    UEIR_DFN8EF          shared at UEIR : 3
var volatile bit    UEIR_CRC16EF         shared at UEIR : 2
var volatile bit    UEIR_CRC5EF          shared at UEIR : 1
var volatile bit    UEIR_PIDEF           shared at UEIR : 0
-- ------------------------------------------------
var volatile byte   UEIE                 shared at 0xF6B
var volatile bit    UEIE_BTSEE           shared at UEIE : 7
var volatile bit    UEIE_BTOEE           shared at UEIE : 4
var volatile bit    UEIE_DFN8EE          shared at UEIE : 3
var volatile bit    UEIE_CRC16EE         shared at UEIE : 2
var volatile bit    UEIE_CRC5EE          shared at UEIE : 1
var volatile bit    UEIE_PIDEE           shared at UEIE : 0
-- ------------------------------------------------
var volatile byte   USTAT                shared at 0xF6C
var volatile bit*4  USTAT_ENDP           shared at USTAT : 3
var volatile bit    USTAT_DIR            shared at USTAT : 2
var volatile bit    USTAT_PPBI           shared at USTAT : 1
-- ------------------------------------------------
var volatile byte   UCON                 shared at 0xF6D
var volatile bit    UCON_PPBRST          shared at UCON : 6
var volatile bit    UCON_SE0             shared at UCON : 5
var volatile bit    UCON_PKTDIS          shared at UCON : 4
var volatile bit    UCON_USBEN           shared at UCON : 3
var volatile bit    UCON_RESUME          shared at UCON : 2
var volatile bit    UCON_SUSPND          shared at UCON : 1
-- ------------------------------------------------
var volatile byte   UADDR                shared at 0xF6E
var volatile bit*7  UADDR_ADDR           shared at UADDR : 0
-- ------------------------------------------------
var volatile byte   UCFG                 shared at 0xF6F
var volatile bit    UCFG_UTEYE           shared at UCFG : 7
var volatile bit    UCFG_UOEMON          shared at UCFG : 6
var volatile bit    UCFG_UPUEN           shared at UCFG : 4
var volatile bit    UCFG_UTRDIS          shared at UCFG : 3
var volatile bit    UCFG_FSEN            shared at UCFG : 2
var volatile bit*2  UCFG_PPB             shared at UCFG : 0
-- ------------------------------------------------
var volatile byte   UEP0                 shared at 0xF70
var volatile bit    UEP0_EPHSHK          shared at UEP0 : 4
var volatile bit    UEP0_EPCONDIS        shared at UEP0 : 3
var volatile bit    UEP0_EPOUTEN         shared at UEP0 : 2
var volatile bit    UEP0_EPINEN          shared at UEP0 : 1
var volatile bit    UEP0_EPSTALL         shared at UEP0 : 0
-- ------------------------------------------------
var volatile byte   UEP1                 shared at 0xF71
var volatile bit    UEP1_EPHSHK          shared at UEP1 : 4
var volatile bit    UEP1_EPCONDIS        shared at UEP1 : 3
var volatile bit    UEP1_EPOUTEN         shared at UEP1 : 2
var volatile bit    UEP1_EPINEN          shared at UEP1 : 1
var volatile bit    UEP1_EPSTALL         shared at UEP1 : 0
-- ------------------------------------------------
var volatile byte   UEP2                 shared at 0xF72
var volatile bit    UEP2_EPHSHK          shared at UEP2 : 4
var volatile bit    UEP2_EPCONDIS        shared at UEP2 : 3
var volatile bit    UEP2_EPOUTEN         shared at UEP2 : 2
var volatile bit    UEP2_EPINEN          shared at UEP2 : 1
var volatile bit    UEP2_EPSTALL         shared at UEP2 : 0
-- ------------------------------------------------
var volatile byte   UEP3                 shared at 0xF73
var volatile bit    UEP3_EPHSHK          shared at UEP3 : 4
var volatile bit    UEP3_EPCONDIS        shared at UEP3 : 3
var volatile bit    UEP3_EPOUTEN         shared at UEP3 : 2
var volatile bit    UEP3_EPINEN          shared at UEP3 : 1
var volatile bit    UEP3_EPSTALL         shared at UEP3 : 0
-- ------------------------------------------------
var volatile byte   UEP4                 shared at 0xF74
var volatile bit    UEP4_EPHSHK          shared at UEP4 : 4
var volatile bit    UEP4_EPCONDIS        shared at UEP4 : 3
var volatile bit    UEP4_EPOUTEN         shared at UEP4 : 2
var volatile bit    UEP4_EPINEN          shared at UEP4 : 1
var volatile bit    UEP4_EPSTALL         shared at UEP4 : 0
-- ------------------------------------------------
var volatile byte   UEP5                 shared at 0xF75
var volatile bit    UEP5_EPHSHK          shared at UEP5 : 4
var volatile bit    UEP5_EPCONDIS        shared at UEP5 : 3
var volatile bit    UEP5_EPOUTEN         shared at UEP5 : 2
var volatile bit    UEP5_EPINEN          shared at UEP5 : 1
var volatile bit    UEP5_EPSTALL         shared at UEP5 : 0
-- ------------------------------------------------
var volatile byte   UEP6                 shared at 0xF76
var volatile bit    UEP6_EPHSHK          shared at UEP6 : 4
var volatile bit    UEP6_EPCONDIS        shared at UEP6 : 3
var volatile bit    UEP6_EPOUTEN         shared at UEP6 : 2
var volatile bit    UEP6_EPINEN          shared at UEP6 : 1
var volatile bit    UEP6_EPSTALL         shared at UEP6 : 0
-- ------------------------------------------------
var volatile byte   UEP7                 shared at 0xF77
var volatile bit    UEP7_EPHSHK          shared at UEP7 : 4
var volatile bit    UEP7_EPCONDIS        shared at UEP7 : 3
var volatile bit    UEP7_EPOUTEN         shared at UEP7 : 2
var volatile bit    UEP7_EPINEN          shared at UEP7 : 1
var volatile bit    UEP7_EPSTALL         shared at UEP7 : 0
-- ------------------------------------------------
var volatile byte   UEP8                 shared at 0xF78
var volatile bit    UEP8_EPHSHK          shared at UEP8 : 4
var volatile bit    UEP8_EPCONDIS        shared at UEP8 : 3
var volatile bit    UEP8_EPOUTEN         shared at UEP8 : 2
var volatile bit    UEP8_EPINEN          shared at UEP8 : 1
var volatile bit    UEP8_EPSTALL         shared at UEP8 : 0
-- ------------------------------------------------
var volatile byte   UEP9                 shared at 0xF79
var volatile bit    UEP9_EPHSHK          shared at UEP9 : 4
var volatile bit    UEP9_EPCONDIS        shared at UEP9 : 3
var volatile bit    UEP9_EPOUTEN         shared at UEP9 : 2
var volatile bit    UEP9_EPINEN          shared at UEP9 : 1
var volatile bit    UEP9_EPSTALL         shared at UEP9 : 0
-- ------------------------------------------------
var volatile byte   UEP10                shared at 0xF7A
var volatile bit    UEP10_EPHSHK         shared at UEP10 : 4
var volatile bit    UEP10_EPCONDIS       shared at UEP10 : 3
var volatile bit    UEP10_EPOUTEN        shared at UEP10 : 2
var volatile bit    UEP10_EPINEN         shared at UEP10 : 1
var volatile bit    UEP10_EPSTALL        shared at UEP10 : 0
-- ------------------------------------------------
var volatile byte   UEP11                shared at 0xF7B
var volatile bit    UEP11_EPHSHK         shared at UEP11 : 4
var volatile bit    UEP11_EPCONDIS       shared at UEP11 : 3
var volatile bit    UEP11_EPOUTEN        shared at UEP11 : 2
var volatile bit    UEP11_EPINEN         shared at UEP11 : 1
var volatile bit    UEP11_EPSTALL        shared at UEP11 : 0
-- ------------------------------------------------
var volatile byte   UEP12                shared at 0xF7C
var volatile bit    UEP12_EPHSHK         shared at UEP12 : 4
var volatile bit    UEP12_EPCONDIS       shared at UEP12 : 3
var volatile bit    UEP12_EPOUTEN        shared at UEP12 : 2
var volatile bit    UEP12_EPINEN         shared at UEP12 : 1
var volatile bit    UEP12_EPSTALL        shared at UEP12 : 0
-- ------------------------------------------------
var volatile byte   UEP13                shared at 0xF7D
var volatile bit    UEP13_EPHSHK         shared at UEP13 : 4
var volatile bit    UEP13_EPCONDIS       shared at UEP13 : 3
var volatile bit    UEP13_EPOUTEN        shared at UEP13 : 2
var volatile bit    UEP13_EPINEN         shared at UEP13 : 1
var volatile bit    UEP13_EPSTALL        shared at UEP13 : 0
-- ------------------------------------------------
var volatile byte   UEP14                shared at 0xF7E
var volatile bit    UEP14_EPHSHK         shared at UEP14 : 4
var volatile bit    UEP14_EPCONDIS       shared at UEP14 : 3
var volatile bit    UEP14_EPOUTEN        shared at UEP14 : 2
var volatile bit    UEP14_EPINEN         shared at UEP14 : 1
var volatile bit    UEP14_EPSTALL        shared at UEP14 : 0
-- ------------------------------------------------
var volatile byte   UEP15                shared at 0xF7F
var volatile bit    UEP15_EPHSHK         shared at UEP15 : 4
var volatile bit    UEP15_EPCONDIS       shared at UEP15 : 3
var volatile bit    UEP15_EPOUTEN        shared at UEP15 : 2
var volatile bit    UEP15_EPINEN         shared at UEP15 : 1
var volatile bit    UEP15_EPSTALL        shared at UEP15 : 0
-- ------------------------------------------------
var volatile byte   PORTA                shared at 0xF80
var volatile bit    PORTA_RA6            shared at PORTA : 6
var volatile bit    PORTA_RA5            shared at PORTA : 5
var volatile bit    PORTA_RA4            shared at PORTA : 4
var volatile bit    PORTA_RA3            shared at PORTA : 3
var volatile bit    PORTA_RA2            shared at PORTA : 2
var volatile bit    PORTA_RA1            shared at PORTA : 1
var volatile bit    PORTA_RA0            shared at PORTA : 0
-- ------------------------------------------------
var volatile byte   PORTB                shared at 0xF81
var volatile bit    PORTB_RB7            shared at PORTB : 7
var volatile bit    PORTB_RB6            shared at PORTB : 6
var volatile bit    PORTB_RB5            shared at PORTB : 5
var volatile bit    PORTB_RB4            shared at PORTB : 4
var volatile bit    PORTB_RB3            shared at PORTB : 3
var volatile bit    PORTB_RB2            shared at PORTB : 2
var volatile bit    PORTB_RB1            shared at PORTB : 1
var volatile bit    PORTB_RB0            shared at PORTB : 0
-- ------------------------------------------------
var volatile byte   PORTC                shared at 0xF82
var volatile bit    PORTC_RC7            shared at PORTC : 7
var volatile bit    PORTC_RC6            shared at PORTC : 6
var volatile bit    PORTC_RC5            shared at PORTC : 5
var volatile bit    PORTC_RC4            shared at PORTC : 4
var volatile bit    PORTC_RC2            shared at PORTC : 2
var volatile bit    PORTC_RC1            shared at PORTC : 1
var volatile bit    PORTC_RC0            shared at PORTC : 0
-- ------------------------------------------------
var volatile byte   PORTD                shared at 0xF83
var volatile bit    PORTD_RD7            shared at PORTD : 7
var volatile bit    PORTD_RD6            shared at PORTD : 6
var volatile bit    PORTD_RD5            shared at PORTD : 5
var volatile bit    PORTD_RD4            shared at PORTD : 4
var volatile bit    PORTD_RD3            shared at PORTD : 3
var volatile bit    PORTD_RD2            shared at PORTD : 2
var volatile bit    PORTD_RD1            shared at PORTD : 1
var volatile bit    PORTD_RD0            shared at PORTD : 0
-- ------------------------------------------------
var volatile byte   PORTE                shared at 0xF84
var volatile bit    PORTE_RDPU           shared at PORTE : 7
var volatile bit    PORTE_RE3            shared at PORTE : 3
var volatile bit    PORTE_RE2            shared at PORTE : 2
var volatile bit    PORTE_RE1            shared at PORTE : 1
var volatile bit    PORTE_RE0            shared at PORTE : 0
-- ------------------------------------------------
var volatile byte   LATA                 shared at 0xF89
--
procedure PORTA'put(byte in x) is
   pragma inline
   LATA = x
end procedure
--
procedure PORTA_low'put(byte in x) is
   LATA = (LATA & 0xF0) | (x & 0x0F)
end procedure
function PORTA_low'get() return byte is
   return (LATA & 0x0F)
end function
--
procedure PORTA_high'put(byte in x) is
   LATA = (LATA & 0x0F) | (x << 4)
end procedure
function PORTA_high'get() return byte is
   return (LATA >> 4)
end function
--
var volatile bit    LATA_LATA6           shared at LATA : 6
var volatile bit pin_A6 shared at LATA : 6
procedure pin_A6'put(bit in x at LATA : 6) is
   pragma inline
end procedure
--
var volatile bit    LATA_LATA5           shared at LATA : 5
var volatile bit pin_A5 shared at LATA : 5
procedure pin_A5'put(bit in x at LATA : 5) is
   pragma inline
end procedure
--
var volatile bit    LATA_LATA4           shared at LATA : 4
var volatile bit pin_A4 shared at LATA : 4
procedure pin_A4'put(bit in x at LATA : 4) is
   pragma inline
end procedure
--
var volatile bit    LATA_LATA3           shared at LATA : 3
var volatile bit pin_A3 shared at LATA : 3
procedure pin_A3'put(bit in x at LATA : 3) is
   pragma inline
end procedure
--
var volatile bit    LATA_LATA2           shared at LATA : 2
var volatile bit pin_A2 shared at LATA : 2
procedure pin_A2'put(bit in x at LATA : 2) is
   pragma inline
end procedure
--
var volatile bit    LATA_LATA1           shared at LATA : 1
var volatile bit pin_A1 shared at LATA : 1
procedure pin_A1'put(bit in x at LATA : 1) is
   pragma inline
end procedure
--
var volatile bit    LATA_LATA0           shared at LATA : 0
var volatile bit pin_A0 shared at LATA : 0
procedure pin_A0'put(bit in x at LATA : 0) is
   pragma inline
end procedure
--
-- ------------------------------------------------
var volatile byte   LATB                 shared at 0xF8A
--
procedure PORTB'put(byte in x) is
   pragma inline
   LATB = x
end procedure
--
procedure PORTB_low'put(byte in x) is
   LATB = (LATB & 0xF0) | (x & 0x0F)
end procedure
function PORTB_low'get() return byte is
   return (LATB & 0x0F)
end function
--
procedure PORTB_high'put(byte in x) is
   LATB = (LATB & 0x0F) | (x << 4)
end procedure
function PORTB_high'get() return byte is
   return (LATB >> 4)
end function
--
var volatile bit    LATB_LATB7           shared at LATB : 7
var volatile bit pin_B7 shared at LATB : 7
procedure pin_B7'put(bit in x at LATB : 7) is
   pragma inline
end procedure
--
var volatile bit    LATB_LATB6           shared at LATB : 6
var volatile bit pin_B6 shared at LATB : 6
procedure pin_B6'put(bit in x at LATB : 6) is
   pragma inline
end procedure
--
var volatile bit    LATB_LATB5           shared at LATB : 5
var volatile bit pin_B5 shared at LATB : 5
procedure pin_B5'put(bit in x at LATB : 5) is
   pragma inline
end procedure
--
var volatile bit    LATB_LATB4           shared at LATB : 4
var volatile bit pin_B4 shared at LATB : 4
procedure pin_B4'put(bit in x at LATB : 4) is
   pragma inline
end procedure
--
var volatile bit    LATB_LATB3           shared at LATB : 3
var volatile bit pin_B3 shared at LATB : 3
procedure pin_B3'put(bit in x at LATB : 3) is
   pragma inline
end procedure
--
var volatile bit    LATB_LATB2           shared at LATB : 2
var volatile bit pin_B2 shared at LATB : 2
procedure pin_B2'put(bit in x at LATB : 2) is
   pragma inline
end procedure
--
var volatile bit    LATB_LATB1           shared at LATB : 1
var volatile bit pin_B1 shared at LATB : 1
procedure pin_B1'put(bit in x at LATB : 1) is
   pragma inline
end procedure
--
var volatile bit    LATB_LATB0           shared at LATB : 0
var volatile bit pin_B0 shared at LATB : 0
procedure pin_B0'put(bit in x at LATB : 0) is
   pragma inline
end procedure
--
-- ------------------------------------------------
var volatile byte   LATC                 shared at 0xF8B
--
procedure PORTC'put(byte in x) is
   pragma inline
   LATC = x
end procedure
--
procedure PORTC_low'put(byte in x) is
   LATC = (LATC & 0xF0) | (x & 0x0F)
end procedure
function PORTC_low'get() return byte is
   return (LATC & 0x0F)
end function
--
procedure PORTC_high'put(byte in x) is
   LATC = (LATC & 0x0F) | (x << 4)
end procedure
function PORTC_high'get() return byte is
   return (LATC >> 4)
end function
--
var volatile bit    LATC_LATC7           shared at LATC : 7
var volatile bit pin_C7 shared at LATC : 7
procedure pin_C7'put(bit in x at LATC : 7) is
   pragma inline
end procedure
--
var volatile bit    LATC_LATC6           shared at LATC : 6
var volatile bit pin_C6 shared at LATC : 6
procedure pin_C6'put(bit in x at LATC : 6) is
   pragma inline
end procedure
--
var volatile bit    LATC_LATC2           shared at LATC : 2
var volatile bit pin_C2 shared at LATC : 2
procedure pin_C2'put(bit in x at LATC : 2) is
   pragma inline
end procedure
--
var volatile bit    LATC_LATC1           shared at LATC : 1
var volatile bit pin_C1 shared at LATC : 1
procedure pin_C1'put(bit in x at LATC : 1) is
   pragma inline
end procedure
--
var volatile bit    LATC_LATC0           shared at LATC : 0
var volatile bit pin_C0 shared at LATC : 0
procedure pin_C0'put(bit in x at LATC : 0) is
   pragma inline
end procedure
--
-- ------------------------------------------------
var volatile byte   LATD                 shared at 0xF8C
--
procedure PORTD'put(byte in x) is
   pragma inline
   LATD = x
end procedure
--
procedure PORTD_low'put(byte in x) is
   LATD = (LATD & 0xF0) | (x & 0x0F)
end procedure
function PORTD_low'get() return byte is
   return (LATD & 0x0F)
end function
--
procedure PORTD_high'put(byte in x) is
   LATD = (LATD & 0x0F) | (x << 4)
end procedure
function PORTD_high'get() return byte is
   return (LATD >> 4)
end function
--
var volatile bit    LATD_LATD7           shared at LATD : 7
var volatile bit pin_D7 shared at LATD : 7
procedure pin_D7'put(bit in x at LATD : 7) is
   pragma inline
end procedure
--
var volatile bit    LATD_LATD6           shared at LATD : 6
var volatile bit pin_D6 shared at LATD : 6
procedure pin_D6'put(bit in x at LATD : 6) is
   pragma inline
end procedure
--
var volatile bit    LATD_LATD5           shared at LATD : 5
var volatile bit pin_D5 shared at LATD : 5
procedure pin_D5'put(bit in x at LATD : 5) is
   pragma inline
end procedure
--
var volatile bit    LATD_LATD4           shared at LATD : 4
var volatile bit pin_D4 shared at LATD : 4
procedure pin_D4'put(bit in x at LATD : 4) is
   pragma inline
end procedure
--
var volatile bit    LATD_LATD3           shared at LATD : 3
var volatile bit pin_D3 shared at LATD : 3
procedure pin_D3'put(bit in x at LATD : 3) is
   pragma inline
end procedure
--
var volatile bit    LATD_LATD2           shared at LATD : 2
var volatile bit pin_D2 shared at LATD : 2
procedure pin_D2'put(bit in x at LATD : 2) is
   pragma inline
end procedure
--
var volatile bit    LATD_LATD1           shared at LATD : 1
var volatile bit pin_D1 shared at LATD : 1
procedure pin_D1'put(bit in x at LATD : 1) is
   pragma inline
end procedure
--
var volatile bit    LATD_LATD0           shared at LATD : 0
var volatile bit pin_D0 shared at LATD : 0
procedure pin_D0'put(bit in x at LATD : 0) is
   pragma inline
end procedure
--
-- ------------------------------------------------
var volatile byte   LATE                 shared at 0xF8D
--
procedure PORTE'put(byte in x) is
   pragma inline
   LATE = x
end procedure
--
procedure PORTE_low'put(byte in x) is
   LATE = (LATE & 0xF0) | (x & 0x0F)
end procedure
function PORTE_low'get() return byte is
   return (LATE & 0x0F)
end function
--
procedure PORTE_high'put(byte in x) is
   LATE = (LATE & 0x0F) | (x << 4)
end procedure
function PORTE_high'get() return byte is
   return (LATE >> 4)
end function
--
var volatile bit    LATE_LATE2           shared at LATE : 2
var volatile bit pin_E2 shared at LATE : 2
procedure pin_E2'put(bit in x at LATE : 2) is
   pragma inline
end procedure
--
var volatile bit    LATE_LATE1           shared at LATE : 1
var volatile bit pin_E1 shared at LATE : 1
procedure pin_E1'put(bit in x at LATE : 1) is
   pragma inline
end procedure
--
var volatile bit    LATE_LATE0           shared at LATE : 0
var volatile bit pin_E0 shared at LATE : 0
procedure pin_E0'put(bit in x at LATE : 0) is
   pragma inline
end procedure
--
-- ------------------------------------------------
var volatile byte   TRISA                shared at 0xF92
var volatile byte   PORTA_direction      shared at TRISA
--
procedure PORTA_low_direction'put(byte in x) is
   TRISA = (TRISA & 0xF0) | (x & 0x0F)
end procedure
function PORTA_low_direction'get() return byte is
   return (TRISA & 0x0F)
end function
--
procedure PORTA_high_direction'put(byte in x) is
   TRISA = (TRISA & 0x0F) | (x << 4)
end procedure
function PORTA_high_direction'get() return byte is
   return (TRISA >> 4)
end function
--
var volatile bit    TRISA_TRISA6         shared at TRISA : 6
var volatile bit    pin_A6_direction     shared at TRISA : 6
var volatile bit    TRISA_TRISA5         shared at TRISA : 5
var volatile bit    pin_A5_direction     shared at TRISA : 5
var volatile bit    TRISA_TRISA4         shared at TRISA : 4
var volatile bit    pin_A4_direction     shared at TRISA : 4
var volatile bit    TRISA_TRISA3         shared at TRISA : 3
var volatile bit    pin_A3_direction     shared at TRISA : 3
var volatile bit    TRISA_TRISA2         shared at TRISA : 2
var volatile bit    pin_A2_direction     shared at TRISA : 2
var volatile bit    TRISA_TRISA1         shared at TRISA : 1
var volatile bit    pin_A1_direction     shared at TRISA : 1
var volatile bit    TRISA_TRISA0         shared at TRISA : 0
var volatile bit    pin_A0_direction     shared at TRISA : 0
-- ------------------------------------------------
var volatile byte   TRISB                shared at 0xF93
var volatile byte   PORTB_direction      shared at TRISB
--
procedure PORTB_low_direction'put(byte in x) is
   TRISB = (TRISB & 0xF0) | (x & 0x0F)
end procedure
function PORTB_low_direction'get() return byte is
   return (TRISB & 0x0F)
end function
--
procedure PORTB_high_direction'put(byte in x) is
   TRISB = (TRISB & 0x0F) | (x << 4)
end procedure
function PORTB_high_direction'get() return byte is
   return (TRISB >> 4)
end function
--
var volatile bit    TRISB_TRISB7         shared at TRISB : 7
var volatile bit    pin_B7_direction     shared at TRISB : 7
var volatile bit    TRISB_TRISB6         shared at TRISB : 6
var volatile bit    pin_B6_direction     shared at TRISB : 6
var volatile bit    TRISB_TRISB5         shared at TRISB : 5
var volatile bit    pin_B5_direction     shared at TRISB : 5
var volatile bit    TRISB_TRISB4         shared at TRISB : 4
var volatile bit    pin_B4_direction     shared at TRISB : 4
var volatile bit    TRISB_TRISB3         shared at TRISB : 3
var volatile bit    pin_B3_direction     shared at TRISB : 3
var volatile bit    TRISB_TRISB2         shared at TRISB : 2
var volatile bit    pin_B2_direction     shared at TRISB : 2
var volatile bit    TRISB_TRISB1         shared at TRISB : 1
var volatile bit    pin_B1_direction     shared at TRISB : 1
var volatile bit    TRISB_TRISB0         shared at TRISB : 0
var volatile bit    pin_B0_direction     shared at TRISB : 0
-- ------------------------------------------------
var volatile byte   TRISC                shared at 0xF94
var volatile byte   PORTC_direction      shared at TRISC
--
procedure PORTC_low_direction'put(byte in x) is
   TRISC = (TRISC & 0xF0) | (x & 0x0F)
end procedure
function PORTC_low_direction'get() return byte is
   return (TRISC & 0x0F)
end function
--
procedure PORTC_high_direction'put(byte in x) is
   TRISC = (TRISC & 0x0F) | (x << 4)
end procedure
function PORTC_high_direction'get() return byte is
   return (TRISC >> 4)
end function
--
var volatile bit    TRISC_TRISC7         shared at TRISC : 7
var volatile bit    pin_C7_direction     shared at TRISC : 7
var volatile bit    TRISC_TRISC6         shared at TRISC : 6
var volatile bit    pin_C6_direction     shared at TRISC : 6
var volatile bit    TRISC_TRISC2         shared at TRISC : 2
var volatile bit    pin_C2_direction     shared at TRISC : 2
var volatile bit    TRISC_TRISC1         shared at TRISC : 1
var volatile bit    pin_C1_direction     shared at TRISC : 1
var volatile bit    TRISC_TRISC0         shared at TRISC : 0
var volatile bit    pin_C0_direction     shared at TRISC : 0
-- ------------------------------------------------
var volatile byte   TRISD                shared at 0xF95
var volatile byte   PORTD_direction      shared at TRISD
--
procedure PORTD_low_direction'put(byte in x) is
   TRISD = (TRISD & 0xF0) | (x & 0x0F)
end procedure
function PORTD_low_direction'get() return byte is
   return (TRISD & 0x0F)
end function
--
procedure PORTD_high_direction'put(byte in x) is
   TRISD = (TRISD & 0x0F) | (x << 4)
end procedure
function PORTD_high_direction'get() return byte is
   return (TRISD >> 4)
end function
--
var volatile bit    TRISD_TRISD7         shared at TRISD : 7
var volatile bit    pin_D7_direction     shared at TRISD : 7
var volatile bit    TRISD_TRISD6         shared at TRISD : 6
var volatile bit    pin_D6_direction     shared at TRISD : 6
var volatile bit    TRISD_TRISD5         shared at TRISD : 5
var volatile bit    pin_D5_direction     shared at TRISD : 5
var volatile bit    TRISD_TRISD4         shared at TRISD : 4
var volatile bit    pin_D4_direction     shared at TRISD : 4
var volatile bit    TRISD_TRISD3         shared at TRISD : 3
var volatile bit    pin_D3_direction     shared at TRISD : 3
var volatile bit    TRISD_TRISD2         shared at TRISD : 2
var volatile bit    pin_D2_direction     shared at TRISD : 2
var volatile bit    TRISD_TRISD1         shared at TRISD : 1
var volatile bit    pin_D1_direction     shared at TRISD : 1
var volatile bit    TRISD_TRISD0         shared at TRISD : 0
var volatile bit    pin_D0_direction     shared at TRISD : 0
-- ------------------------------------------------
var volatile byte   TRISE                shared at 0xF96
var volatile byte   PORTE_direction      shared at TRISE
--
procedure PORTE_low_direction'put(byte in x) is
   TRISE = (TRISE & 0xF0) | (x & 0x0F)
end procedure
function PORTE_low_direction'get() return byte is
   return (TRISE & 0x0F)
end function
--
procedure PORTE_high_direction'put(byte in x) is
   TRISE = (TRISE & 0x0F) | (x << 4)
end procedure
function PORTE_high_direction'get() return byte is
   return (TRISE >> 4)
end function
--
var volatile bit    TRISE_TRISE2         shared at TRISE : 2
var volatile bit    pin_E2_direction     shared at TRISE : 2
var volatile bit    TRISE_TRISE1         shared at TRISE : 1
var volatile bit    pin_E1_direction     shared at TRISE : 1
var volatile bit    TRISE_TRISE0         shared at TRISE : 0
var volatile bit    pin_E0_direction     shared at TRISE : 0
-- ------------------------------------------------
var volatile byte   OSCTUNE              shared at 0xF9B
var volatile bit    OSCTUNE_HF256DIV     shared at OSCTUNE : 7
var volatile bit*5  OSCTUNE_TUN          shared at OSCTUNE : 0
-- ------------------------------------------------
var volatile byte   PIE1                 shared at 0xF9D
var volatile bit    PIE1_SPPIE           shared at PIE1 : 7
var volatile bit    PIE1_ADIE            shared at PIE1 : 6
var volatile bit    PIE1_RCIE            shared at PIE1 : 5
var volatile bit    PIE1_TXIE            shared at PIE1 : 4
var volatile bit    PIE1_SSPIE           shared at PIE1 : 3
var volatile bit    PIE1_CCP1IE          shared at PIE1 : 2
var volatile bit    PIE1_TMR2IE          shared at PIE1 : 1
var volatile bit    PIE1_TMR1IE          shared at PIE1 : 0
-- ------------------------------------------------
var volatile byte   PIR1                 shared at 0xF9E
var volatile bit    PIR1_SPPIF           shared at PIR1 : 7
var volatile bit    PIR1_ADIF            shared at PIR1 : 6
var volatile bit    PIR1_RCIF            shared at PIR1 : 5
var volatile bit    PIR1_TXIF            shared at PIR1 : 4
var volatile bit    PIR1_SSPIF           shared at PIR1 : 3
var volatile bit    PIR1_CCP1IF          shared at PIR1 : 2
var volatile bit    PIR1_TMR2IF          shared at PIR1 : 1
var volatile bit    PIR1_TMR1IF          shared at PIR1 : 0
-- ------------------------------------------------
var volatile byte   IPR1                 shared at 0xF9F
var volatile bit    IPR1_SPPIP           shared at IPR1 : 7
var volatile bit    IPR1_ADIP            shared at IPR1 : 6
var volatile bit    IPR1_RCIP            shared at IPR1 : 5
var volatile bit    IPR1_TXIP            shared at IPR1 : 4
var volatile bit    IPR1_SSPIP           shared at IPR1 : 3
var volatile bit    IPR1_CCP1IP          shared at IPR1 : 2
var volatile bit    IPR1_TMR2IP          shared at IPR1 : 1
var volatile bit    IPR1_TMR1IP          shared at IPR1 : 0
-- ------------------------------------------------
var volatile byte   PIE2                 shared at 0xFA0
var volatile bit    PIE2_OSCFIE          shared at PIE2 : 7
var volatile bit    PIE2_CMIE            shared at PIE2 : 6
var volatile bit    PIE2_USBIE           shared at PIE2 : 5
var volatile bit    PIE2_EEIE            shared at PIE2 : 4
var volatile bit    PIE2_BCLIE           shared at PIE2 : 3
var volatile bit    PIE2_HLVDIE          shared at PIE2 : 2
var volatile bit    PIE2_TMR3IE          shared at PIE2 : 1
var volatile bit    PIE2_CCP2IE          shared at PIE2 : 0
-- ------------------------------------------------
var volatile byte   PIR2                 shared at 0xFA1
var volatile bit    PIR2_OSCFIF          shared at PIR2 : 7
var volatile bit    PIR2_CMIF            shared at PIR2 : 6
var volatile bit    PIR2_USBIF           shared at PIR2 : 5
var volatile bit    PIR2_EEIF            shared at PIR2 : 4
var volatile bit    PIR2_BCLIF           shared at PIR2 : 3
var volatile bit    PIR2_HLVDIF          shared at PIR2 : 2
var volatile bit    PIR2_TMR3IF          shared at PIR2 : 1
var volatile bit    PIR2_CCP2IF          shared at PIR2 : 0
-- ------------------------------------------------
var volatile byte   IPR2                 shared at 0xFA2
var volatile bit    IPR2_OSCFIP          shared at IPR2 : 7
var volatile bit    IPR2_CMIP            shared at IPR2 : 6
var volatile bit    IPR2_USBIP           shared at IPR2 : 5
var volatile bit    IPR2_EEIP            shared at IPR2 : 4
var volatile bit    IPR2_BCLIP           shared at IPR2 : 3
var volatile bit    IPR2_HLVDIP          shared at IPR2 : 2
var volatile bit    IPR2_TMR3IP          shared at IPR2 : 1
var volatile bit    IPR2_CCP2IP          shared at IPR2 : 0
-- ------------------------------------------------
var volatile byte   EECON1               shared at 0xFA6
var volatile bit    EECON1_EEPGD         shared at EECON1 : 7
var volatile bit    EECON1_CFGS          shared at EECON1 : 6
var volatile bit    EECON1_FREE          shared at EECON1 : 4
var volatile bit    EECON1_WRERR         shared at EECON1 : 3
var volatile bit    EECON1_WREN          shared at EECON1 : 2
var volatile bit    EECON1_WR            shared at EECON1 : 1
var volatile bit    EECON1_RD            shared at EECON1 : 0
-- ------------------------------------------------
var volatile byte   EECON2               shared at 0xFA7
-- ------------------------------------------------
var volatile byte   EEDATA               shared at 0xFA8
-- ------------------------------------------------
var volatile byte   EEADR                shared at 0xFA9
-- ------------------------------------------------
var volatile byte   RCSTA                shared at 0xFAB
var volatile bit    RCSTA_SPEN           shared at RCSTA : 7
var volatile bit    RCSTA_RX9            shared at RCSTA : 6
var volatile bit    RCSTA_SREN           shared at RCSTA : 5
var volatile bit    RCSTA_CREN           shared at RCSTA : 4
var volatile bit    RCSTA_ADDEN          shared at RCSTA : 3
var volatile bit    RCSTA_FERR           shared at RCSTA : 2
var volatile bit    RCSTA_OERR           shared at RCSTA : 1
var volatile bit    RCSTA_RX9D           shared at RCSTA : 0
-- ------------------------------------------------
var volatile byte   TXSTA                shared at 0xFAC
var volatile bit    TXSTA_CSRC           shared at TXSTA : 7
var volatile bit    TXSTA_TX9            shared at TXSTA : 6
var volatile bit    TXSTA_TXEN           shared at TXSTA : 5
var volatile bit    TXSTA_SYNC           shared at TXSTA : 4
var volatile bit    TXSTA_SENDB          shared at TXSTA : 3
var volatile bit    TXSTA_BRGH           shared at TXSTA : 2
var volatile bit    TXSTA_TRMT           shared at TXSTA : 1
var volatile bit    TXSTA_TX9D           shared at TXSTA : 0
-- ------------------------------------------------
var volatile byte   TXREG                shared at 0xFAD
-- ------------------------------------------------
var volatile byte   RCREG                shared at 0xFAE
-- ------------------------------------------------
var volatile byte   SPBRG                shared at 0xFAF
-- ------------------------------------------------
var volatile byte   SPBRGH               shared at 0xFB0
-- ------------------------------------------------
var volatile byte   T3CON                shared at 0xFB1
var volatile bit    T3CON_RD16           shared at T3CON : 7
var volatile bit    T3CON_T3CCP2         shared at T3CON : 6
var volatile bit*2  T3CON_T3CKPS         shared at T3CON : 4
var volatile bit    T3CON_T3CCP1         shared at T3CON : 3
var volatile bit    T3CON_NT3SYNC        shared at T3CON : 2
var volatile bit    T3CON_TMR3CS         shared at T3CON : 1
var volatile bit    T3CON_TMR3ON         shared at T3CON : 0
-- ------------------------------------------------
var volatile word   TMR3                 shared at 0xFB2
-- ------------------------------------------------
var volatile byte   TMR3L                shared at 0xFB2
-- ------------------------------------------------
var volatile byte   TMR3H                shared at 0xFB3
-- ------------------------------------------------
var volatile byte   CMCON                shared at 0xFB4
var volatile bit    CMCON_C2OUT          shared at CMCON : 7
var volatile bit    CMCON_C1OUT          shared at CMCON : 6
var volatile bit    CMCON_C2INV          shared at CMCON : 5
var volatile bit    CMCON_C1INV          shared at CMCON : 4
var volatile bit    CMCON_CIS            shared at CMCON : 3
var volatile bit*3  CMCON_CM             shared at CMCON : 0
-- ------------------------------------------------
var volatile byte   CVRCON               shared at 0xFB5
var volatile bit    CVRCON_CVREN         shared at CVRCON : 7
var volatile bit    CVRCON_CVROE         shared at CVRCON : 6
var volatile bit    CVRCON_CVRR          shared at CVRCON : 5
var volatile bit    CVRCON_CVRSS         shared at CVRCON : 4
var volatile bit*4  CVRCON_CVR           shared at CVRCON : 0
-- ------------------------------------------------
var volatile byte   ECCP1AS              shared at 0xFB6
var volatile bit    ECCP1AS_ECCPASE      shared at ECCP1AS : 7
var volatile bit*3  ECCP1AS_ECCPAS       shared at ECCP1AS : 4
var volatile bit*2  ECCP1AS_PSSAC        shared at ECCP1AS : 2
var volatile bit*2  ECCP1AS_PSSBD        shared at ECCP1AS : 0
-- ------------------------------------------------
var volatile byte   ECCP1DEL             shared at 0xFB7
var volatile bit    ECCP1DEL_PRSEN       shared at ECCP1DEL : 7
var volatile bit*7  ECCP1DEL_PDC         shared at ECCP1DEL : 0
-- ------------------------------------------------
var volatile byte   BAUDCON              shared at 0xFB8
var volatile bit    BAUDCON_ABDOVF       shared at BAUDCON : 7
var volatile bit    BAUDCON_RCMT         shared at BAUDCON : 6
var volatile bit    BAUDCON_RXDTP        shared at BAUDCON : 5
var volatile bit    BAUDCON_TXCKP        shared at BAUDCON : 4
var volatile bit    BAUDCON_BRG16        shared at BAUDCON : 3
var volatile bit    BAUDCON_WUE          shared at BAUDCON : 1
var volatile bit    BAUDCON_ABDEN        shared at BAUDCON : 0
-- ------------------------------------------------
var volatile byte   CCP2CON              shared at 0xFBA
var volatile bit*2  CCP2CON_DC2B         shared at CCP2CON : 4
var volatile bit*4  CCP2CON_CCP2M        shared at CCP2CON : 0
-- ------------------------------------------------
var volatile word   CCPR2                shared at 0xFBB
-- ------------------------------------------------
var volatile byte   CCPR2L               shared at 0xFBB
-- ------------------------------------------------
var volatile byte   CCPR2H               shared at 0xFBC
-- ------------------------------------------------
var volatile byte   ECCP1CON             shared at 0xFBD
var volatile bit*2  ECCP1CON_P1M         shared at ECCP1CON : 6
var volatile bit*2  ECCP1CON_DC1B        shared at ECCP1CON : 4
var volatile bit*4  ECCP1CON_CCP1M       shared at ECCP1CON : 0
-- ------------------------------------------------
var volatile word   CCPR1                shared at 0xFBE
-- ------------------------------------------------
var volatile byte   CCPR1L               shared at 0xFBE
-- ------------------------------------------------
var volatile byte   CCPR1H               shared at 0xFBF
-- ------------------------------------------------
var volatile byte   ADCON2               shared at 0xFC0
var volatile bit    ADCON2_ADFM          shared at ADCON2 : 7
var volatile bit*3  ADCON2_ACQT          shared at ADCON2 : 3
var volatile bit*3  ADCON2_ADCS          shared at ADCON2 : 0
-- ------------------------------------------------
var volatile byte   ADCON1               shared at 0xFC1
var volatile bit*2  ADCON1_VCFG          shared at ADCON1 : 4
var volatile bit*4  ADCON1_PCFG          shared at ADCON1 : 0
-- ------------------------------------------------
var volatile byte   ADCON0               shared at 0xFC2
var volatile bit*4  ADCON0_CHS           shared at ADCON0 : 2
var volatile bit    ADCON0_GO            shared at ADCON0 : 1
var volatile bit    ADCON0_NDONE         shared at ADCON0 : 1
var volatile bit    ADCON0_ADON          shared at ADCON0 : 0
-- ------------------------------------------------
var volatile word   ADRES                shared at 0xFC3
-- ------------------------------------------------
var volatile byte   ADRESL               shared at 0xFC3
-- ------------------------------------------------
var volatile byte   ADRESH               shared at 0xFC4
-- ------------------------------------------------
var volatile byte   SSPCON2              shared at 0xFC5
var volatile bit    SSPCON2_GCEN         shared at SSPCON2 : 7
var volatile bit    SSPCON2_ACKSTAT      shared at SSPCON2 : 6
var volatile bit    SSPCON2_ACKDT        shared at SSPCON2 : 5
var volatile bit    SSPCON2_ACKEN        shared at SSPCON2 : 4
var volatile bit    SSPCON2_RCEN         shared at SSPCON2 : 3
var volatile bit    SSPCON2_PEN          shared at SSPCON2 : 2
var volatile bit    SSPCON2_RSEN         shared at SSPCON2 : 1
var volatile bit    SSPCON2_SEN          shared at SSPCON2 : 0
-- ------------------------------------------------
var volatile byte   SSPCON1              shared at 0xFC6
var volatile bit    SSPCON1_WCOL         shared at SSPCON1 : 7
var volatile bit    SSPCON1_SSPOV        shared at SSPCON1 : 6
var volatile bit    SSPCON1_SSPEN        shared at SSPCON1 : 5
var volatile bit    SSPCON1_CKP          shared at SSPCON1 : 4
var volatile bit*4  SSPCON1_SSPM         shared at SSPCON1 : 0
-- ------------------------------------------------
var volatile byte   SSPSTAT              shared at 0xFC7
var volatile bit    SSPSTAT_SMP          shared at SSPSTAT : 7
var volatile bit    SSPSTAT_CKE          shared at SSPSTAT : 6
var volatile bit    SSPSTAT_D            shared at SSPSTAT : 5
var volatile bit    SSPSTAT_NA           shared at SSPSTAT : 5
var volatile bit    SSPSTAT_P            shared at SSPSTAT : 4
var volatile bit    SSPSTAT_S            shared at SSPSTAT : 3
var volatile bit    SSPSTAT_R            shared at SSPSTAT : 2
var volatile bit    SSPSTAT_NW           shared at SSPSTAT : 2
var volatile bit    SSPSTAT_UA           shared at SSPSTAT : 1
var volatile bit    SSPSTAT_BF           shared at SSPSTAT : 0
-- ------------------------------------------------
var volatile byte   SSPADD               shared at 0xFC8
-- ------------------------------------------------
var volatile byte   SSPBUF               shared at 0xFC9
-- ------------------------------------------------
var volatile byte   T2CON                shared at 0xFCA
var volatile bit*4  T2CON_TOUTPS         shared at T2CON : 3
var volatile bit    T2CON_TMR2ON         shared at T2CON : 2
var volatile bit*2  T2CON_T2CKPS         shared at T2CON : 0
-- ------------------------------------------------
var volatile byte   PR2                  shared at 0xFCB
-- ------------------------------------------------
var volatile byte   TMR2                 shared at 0xFCC
-- ------------------------------------------------
var volatile byte   T1CON                shared at 0xFCD
var volatile bit    T1CON_RD16           shared at T1CON : 7
var volatile bit    T1CON_T1RUN          shared at T1CON : 6
var volatile bit*2  T1CON_T1CKPS         shared at T1CON : 4
var volatile bit    T1CON_T1OSCEN        shared at T1CON : 3
var volatile bit    T1CON_NT1SYNC        shared at T1CON : 2
var volatile bit    T1CON_TMR1CS         shared at T1CON : 1
var volatile bit    T1CON_TMR1ON         shared at T1CON : 0
-- ------------------------------------------------
var volatile word   TMR1                 shared at 0xFCE
-- ------------------------------------------------
var volatile byte   TMR1L                shared at 0xFCE
-- ------------------------------------------------
var volatile byte   TMR1H                shared at 0xFCF
-- ------------------------------------------------
var volatile byte   RCON                 shared at 0xFD0
var volatile bit    RCON_IPEN            shared at RCON : 7
var volatile bit    RCON_SBOREN          shared at RCON : 6
var volatile bit    RCON_NRI             shared at RCON : 4
var volatile bit    RCON_NTO             shared at RCON : 3
var volatile bit    RCON_NPD             shared at RCON : 2
var volatile bit    RCON_NPOR            shared at RCON : 1
var volatile bit    RCON_NBOR            shared at RCON : 0
-- ------------------------------------------------
var volatile byte   WDTCON               shared at 0xFD1
var volatile bit    WDTCON_SWDTEN        shared at WDTCON : 0
-- ------------------------------------------------
var volatile byte   HLVDCON              shared at 0xFD2
var volatile bit    HLVDCON_VDIRMAG      shared at HLVDCON : 7
var volatile bit    HLVDCON_IRVST        shared at HLVDCON : 5
var volatile bit    HLVDCON_HLVDEN       shared at HLVDCON : 4
var volatile bit*4  HLVDCON_HLVDL        shared at HLVDCON : 0
-- ------------------------------------------------
var volatile byte   OSCCON               shared at 0xFD3
var volatile bit    OSCCON_IDLEN         shared at OSCCON : 7
var volatile bit*3  OSCCON_IRCF          shared at OSCCON : 4
var volatile bit    OSCCON_OSTS          shared at OSCCON : 3
var volatile bit    OSCCON_FLTS          shared at OSCCON : 2
var volatile bit*2  OSCCON_SCS           shared at OSCCON : 0
-- ------------------------------------------------
var volatile byte   T0CON                shared at 0xFD5
var volatile bit    T0CON_TMR0ON         shared at T0CON : 7
var volatile bit    T0CON_T08BIT         shared at T0CON : 6
var volatile bit    T0CON_T0CS           shared at T0CON : 5
var volatile bit    T0CON_T0SE           shared at T0CON : 4
var volatile bit    T0CON_PSA            shared at T0CON : 3
var volatile bit*3  T0CON_T0PS           shared at T0CON : 0
-- ------------------------------------------------
var volatile word   TMR0                 shared at 0xFD6
-- ------------------------------------------------
var volatile byte   TMR0L                shared at 0xFD6
-- ------------------------------------------------
var volatile byte   TMR0H                shared at 0xFD7
-- ------------------------------------------------
var volatile byte   STATUS               shared at 0xFD8
var volatile bit    STATUS_N             shared at STATUS : 4
var volatile bit    STATUS_OV            shared at STATUS : 3
var volatile bit    STATUS_Z             shared at STATUS : 2
var volatile bit    STATUS_DC            shared at STATUS : 1
var volatile bit    STATUS_C             shared at STATUS : 0
var volatile byte   _status              shared at 0xFD8      -- (compiler)
const        byte   _n                   =  4      -- (compiler)
const        byte   _ov                  =  3      -- (compiler)
const        byte   _z                   =  2      -- (compiler)
const        byte   _dc                  =  1      -- (compiler)
const        byte   _c                   =  0      -- (compiler)
const        byte   _banked              =  1      -- (compiler - use BSR)
const        byte   _access              =  0      -- (compiler - use ACCESS)
-- ------------------------------------------------
var volatile word   FSR2                 shared at 0xFD9
-- ------------------------------------------------
var volatile byte   FSR2L                shared at 0xFD9
-- ------------------------------------------------
var volatile byte   FSR2H                shared at 0xFDA
var volatile bit*4  FSR2H_FSR2H          shared at FSR2H : 0
-- ------------------------------------------------
var volatile byte   PLUSW2               shared at 0xFDB
-- ------------------------------------------------
var volatile byte   PREINC2              shared at 0xFDC
-- ------------------------------------------------
var volatile byte   POSTDEC2             shared at 0xFDD
-- ------------------------------------------------
var volatile byte   POSTINC2             shared at 0xFDE
-- ------------------------------------------------
var volatile byte   INDF2                shared at 0xFDF
-- ------------------------------------------------
var volatile byte   BSR                  shared at 0xFE0
var volatile bit*4  BSR_BSR              shared at BSR : 0
-- ------------------------------------------------
var volatile word   FSR1                 shared at 0xFE1
-- ------------------------------------------------
var volatile byte   FSR1L                shared at 0xFE1
-- ------------------------------------------------
var volatile byte   FSR1H                shared at 0xFE2
var volatile bit*4  FSR1H_FSR1H          shared at FSR1H : 0
-- ------------------------------------------------
var volatile byte   PLUSW1               shared at 0xFE3
-- ------------------------------------------------
var volatile byte   PREINC1              shared at 0xFE4
-- ------------------------------------------------
var volatile byte   POSTDEC1             shared at 0xFE5
-- ------------------------------------------------
var volatile byte   POSTINC1             shared at 0xFE6
-- ------------------------------------------------
var volatile byte   INDF1                shared at 0xFE7
-- ------------------------------------------------
var volatile byte   WREG                 shared at 0xFE8
-- ------------------------------------------------
var volatile word   FSR0                 shared at 0xFE9
var volatile word   _fsr0                shared at 0xFE9      -- (compiler)
-- ------------------------------------------------
var volatile byte   FSR0L                shared at 0xFE9
var volatile byte   _fsr0l               shared at 0xFE9      -- (compiler)
-- ------------------------------------------------
var volatile byte   FSR0H                shared at 0xFEA
var volatile bit*4  FSR0H_FSR0H          shared at FSR0H : 0
var volatile byte   _fsr0h               shared at 0xFEA      -- (compiler)
-- ------------------------------------------------
var volatile byte   PLUSW0               shared at 0xFEB
-- ------------------------------------------------
var volatile byte   PREINC0              shared at 0xFEC
-- ------------------------------------------------
var volatile byte   POSTDEC0             shared at 0xFED
-- ------------------------------------------------
var volatile byte   POSTINC0             shared at 0xFEE
-- ------------------------------------------------
var volatile byte   INDF0                shared at 0xFEF
var volatile byte   _ind0                shared at 0xFEF      -- (compiler)
-- ------------------------------------------------
var volatile byte   INTCON3              shared at 0xFF0
var volatile bit    INTCON3_INT2IP       shared at INTCON3 : 7
var volatile bit    INTCON3_INT1IP       shared at INTCON3 : 6
var volatile bit    INTCON3_INT2IE       shared at INTCON3 : 4
var volatile bit    INTCON3_INT1IE       shared at INTCON3 : 3
var volatile bit    INTCON3_INT2IF       shared at INTCON3 : 1
var volatile bit    INTCON3_INT1IF       shared at INTCON3 : 0
-- ------------------------------------------------
var volatile byte   INTCON2              shared at 0xFF1
var volatile bit    INTCON2_NRBPU        shared at INTCON2 : 7
var volatile bit    INTCON2_INTEDG0      shared at INTCON2 : 6
var volatile bit    INTCON2_INTEDG1      shared at INTCON2 : 5
var volatile bit    INTCON2_INTEDG2      shared at INTCON2 : 4
var volatile bit    INTCON2_TMR0IP       shared at INTCON2 : 2
var volatile bit    INTCON2_RBIP         shared at INTCON2 : 0
-- ------------------------------------------------
var volatile byte   INTCON               shared at 0xFF2
var volatile bit    INTCON_GIE           shared at INTCON : 7
var volatile bit    INTCON_GIEH          shared at INTCON : 7
var volatile bit    INTCON_PEIE          shared at INTCON : 6
var volatile bit    INTCON_GIEL          shared at INTCON : 6
var volatile bit    INTCON_TMR0IE        shared at INTCON : 5
var volatile bit    REG_T0IE             shared at INTCON : 5
var volatile bit    INTCON_INT0IE        shared at INTCON : 4
var volatile bit    INTCON_RBIE          shared at INTCON : 3
var volatile bit    INTCON_TMR0IF        shared at INTCON : 2
var volatile bit    REG_T0IF             shared at INTCON : 2
var volatile bit    INTCON_INT0IF        shared at INTCON : 1
var volatile bit    INTCON_RBIF          shared at INTCON : 0
-- ------------------------------------------------
var volatile word   PROD                 shared at 0xFF3
-- ------------------------------------------------
var volatile byte   PRODL                shared at 0xFF3
-- ------------------------------------------------
var volatile byte   PRODH                shared at 0xFF4
-- ------------------------------------------------
var volatile byte   TABLAT               shared at 0xFF5
var volatile byte   _tablat              shared at 0xFF5      -- (compiler)
-- ------------------------------------------------
var volatile byte*3 TBLPTR               shared at 0xFF6
var volatile byte*3 _tblptr              shared at 0xFF6      -- (compiler)
-- ------------------------------------------------
var volatile byte   TBLPTRL              shared at 0xFF6
-- ------------------------------------------------
var volatile byte   TBLPTRH              shared at 0xFF7
-- ------------------------------------------------
var volatile byte   TBLPTRU              shared at 0xFF8
var volatile bit*5  TBLPTRU_TBLPTRU      shared at TBLPTRU : 0
-- ------------------------------------------------
var volatile byte*3 PCLAT                shared at 0xFF9
-- ------------------------------------------------
var volatile byte   PCL                  shared at 0xFF9
var volatile byte   _pcl                 shared at 0xFF9      -- (compiler)
-- ------------------------------------------------
var volatile byte   PCLATH               shared at 0xFFA
var volatile byte   PCLATH_PCH           shared at PCLATH
var volatile byte   _pclath              shared at 0xFFA      -- (compiler)
-- ------------------------------------------------
var volatile byte   PCLATU               shared at 0xFFB
var volatile bit*5  PCLATU_PCU           shared at PCLATU : 0
var volatile byte   _pclatu              shared at 0xFFB      -- (compiler)
-- ------------------------------------------------
var volatile byte   STKPTR               shared at 0xFFC
var volatile bit    STKPTR_STKFUL        shared at STKPTR : 7
var volatile bit    STKPTR_STKUNF        shared at STKPTR : 6
var volatile bit*5  STKPTR_STKPTR        shared at STKPTR : 0
-- ------------------------------------------------
var volatile byte*3 TOS                  shared at 0xFFD
-- ------------------------------------------------
var volatile byte   TOSL                 shared at 0xFFD
-- ------------------------------------------------
var volatile byte   TOSH                 shared at 0xFFE
-- ------------------------------------------------
var volatile byte   TOSU                 shared at 0xFFF
var volatile bit*5  TOSU_TOSU            shared at TOSU : 0
--
-- ===================================================
--
-- Special device dependent procedures
--
-- ---------------------------------------------------
-- Disable ADC module (ADC_group ADC_V5)
--
procedure adc_off() is
   pragma inline
   ADCON0 = 0b0000_0000         -- disable ADC
   ADCON1 = 0b0000_1111         -- digital I/O
   ADCON2 = 0b0000_0000
end procedure
--
-- ---------------------------------------------------
-- Disable comparator module
--
procedure comparator_off() is
   pragma inline
   CMCON  = 0b0000_0111        -- disable comparators
end procedure
--
-- ---------------------------------------------------
-- Switch analog ports to digital mode (if analog module present).
--
procedure enable_digital_io() is
   pragma inline
   adc_off()
   comparator_off()
end procedure
--
--
-- ==================================================
--
-- Symbolic Fuse definitions
-- -------------------------
--
-- addr 0x300000
--
pragma fuse_def PLLDIV:0 0x7 {
       DIVIDE_BY_12__48MHZ_INPUT_ = 0x7
       DIVIDE_BY_10__40MHZ_INPUT_ = 0x6
       DIVIDE_BY_6__24MHZ_INPUT_ = 0x5
       DIVIDE_BY_5__20MHZ_INPUT_ = 0x4
       DIVIDE_BY_4__16MHZ_INPUT_ = 0x3
       DIVIDE_BY_3__12MHZ_INPUT_ = 0x2
       DIVIDE_BY_2__8MHZ_INPUT_ = 0x1
       NO_DIVIDE__4MHZ_INPUT_ = 0x0
       }
pragma fuse_def CPUDIV:0 0x18 {
       _OSC1_OSC2_SRC___4__96MHZ_PLL_SRC___6_ = 0x18
       _OSC1_OSC2_SRC___3__96MHZ_PLL_SRC___4_ = 0x10
       _OSC1_OSC2_SRC___2__96MHZ_PLL_SRC___3_ = 0x8
       _OSC1_OSC2_SRC___1__96MHZ_PLL_SRC___2_ = 0x0
       }
pragma fuse_def USBPLL:0 0x20 {
       CLOCK_SRC_FROM_96MHZ_PLL_2 = 0x20
       CLOCK_SRC_FROM_OSC1_OSC2 = 0x0
       }
--
-- addr 0x300001
--
pragma fuse_def OSC:1 0xF {
       HS_PLL = 0xE
       HS_USB = 0xC
       XT_USB = 0xA
       INTOSC_NOCLKOUT = 0x9
       EC_NOCLKOUT = 0x7
       XT_PLL = 0x2
       }
pragma fuse_def FCMEN:1 0x40 {
       DISABLED = 0x0
       ENABLED = 0x40
       }
pragma fuse_def IESO:1 0x80 {
       DISABLED = 0x0
       ENABLED = 0x80
       }
--
-- addr 0x300002
--
pragma fuse_def PWRTE:2 0x1 {
       DISABLED = 0x1
       ENABLED = 0x0
       }
pragma fuse_def BROWNOUT:2 0x6 {
       ENABLED = 0x6
       RUNONLY = 0x4
       CONTROL = 0x2
       DISABLED = 0x0
       }
pragma fuse_def VOLTAGE:2 0x18 {
       V20 = 0x18
       V27 = 0x10
       V42 = 0x8
       V45 = 0x0
       }
pragma fuse_def VREGEN:2 0x20 {
       ENABLED = 0x20
       DISABLED = 0x0
       }
--
-- addr 0x300003
--
pragma fuse_def WDT:3 0x1 {
       ENABLED = 0x1
       DISABLED = 0x0
       }
pragma fuse_def WDTPS:3 0x1E {
       P32768 = 0x1E
       P16384 = 0x1C
       P8192 = 0x1A
       P4096 = 0x18
       P2048 = 0x16
       P1024 = 0x14
       P512 = 0x12
       P256 = 0x10
       P128 = 0xE
       P64 = 0xC
       P32 = 0xA
       P16 = 0x8
       P8 = 0x6
       P4 = 0x4
       P2 = 0x2
       P1 = 0x0
       }
--
-- addr 0x300005
--
pragma fuse_def CCP2MUX:5 0x1 {
       RC1 = 0x1
       RB3 = 0x0
       }
pragma fuse_def PBADEN:5 0x2 {
       ANALOG = 0x2
       DIGITAL = 0x0
       }
pragma fuse_def LPT1OSC:5 0x4 {
       ENABLED = 0x4
       DISABLED = 0x0
       }
pragma fuse_def MCLR:5 0x80 {
       EXTERNAL = 0x80
       INTERNAL = 0x0
       }
--
-- addr 0x300006
--
pragma fuse_def STVR:6 0x1 {
       ENABLED = 0x1
       DISABLED = 0x0
       }
pragma fuse_def LVP:6 0x4 {
       ENABLED = 0x4
       DISABLED = 0x0
       }
pragma fuse_def ENICPORT:6 0x20 {
       ENABLED = 0x20
       DISABLED = 0x0
       }
pragma fuse_def XINST:6 0x40 {
       ENABLED = 0x40
       DISABLED = 0x0
       }
pragma fuse_def BACKBUG:6 0x80 {
       DISABLED = 0x80
       ENABLED = 0x0
       }
--
-- addr 0x300008
--
pragma fuse_def CP_0:8 0x1 {
       DISABLED = 0x1
       ENABLED = 0x0
       }
pragma fuse_def CP_1:8 0x2 {
       DISABLED = 0x2
       ENABLED = 0x0
       }
pragma fuse_def CP_2:8 0x4 {
       DISABLED = 0x4
       ENABLED = 0x0
       }
pragma fuse_def CP_3:8 0x8 {
       DISABLED = 0x8
       ENABLED = 0x0
       }
--
-- addr 0x300009
--
pragma fuse_def CPB:9 0x40 {
       DISABLED = 0x40
       ENABLED = 0x0
       }
pragma fuse_def CPD:9 0x80 {
       DISABLED = 0x80
       ENABLED = 0x0
       }
--
-- addr 0x30000A
--
pragma fuse_def WRT_0:10 0x1 {
       DISABLED = 0x1
       ENABLED = 0x0
       }
pragma fuse_def WRT_1:10 0x2 {
       DISABLED = 0x2
       ENABLED = 0x0
       }
pragma fuse_def WRT_2:10 0x4 {
       DISABLED = 0x4
       ENABLED = 0x0
       }
pragma fuse_def WRT_3:10 0x8 {
       DISABLED = 0x8
       ENABLED = 0x0
       }
--
-- addr 0x30000B
--
pragma fuse_def WRTC:11 0x20 {
       DISABLED = 0x20
       ENABLED = 0x0
       }
pragma fuse_def WRTB:11 0x40 {
       DISABLED = 0x40
       ENABLED = 0x0
       }
pragma fuse_def WRTD:11 0x80 {
       DISABLED = 0x80
       ENABLED = 0x0
       }
--
-- addr 0x30000C
--
pragma fuse_def EBTR_0:12 0x1 {
       DISABLED = 0x1
       ENABLED = 0x0
       }
pragma fuse_def EBTR_1:12 0x2 {
       DISABLED = 0x2
       ENABLED = 0x0
       }
pragma fuse_def EBTR_2:12 0x4 {
       DISABLED = 0x4
       ENABLED = 0x0
       }
pragma fuse_def EBTR_3:12 0x8 {
       DISABLED = 0x8
       ENABLED = 0x0
       }
--
-- addr 0x30000D
--
pragma fuse_def EBTRB:13 0x40 {
       DISABLED = 0x40
       ENABLED = 0x0
       }
--
