-- ===================================================
-- Title: JalV2 device include file for pic18f45j10
--
-- Author: Rob Hamerling, Copyright (c) 2008..2008, all rights reserved.
--
-- Adapted-by:
--
-- Compiler: =2.4h
--
-- This file is part of jallib  (http://jallib.googlecode.com)
-- Released under the BSD license (http://www.opensource.org/licenses/bsd-license.php)
--
-- Description: Device include file for pic18f45j10, containing:
--                - Declaration of ports and pins of the chip.
--                - Procedures to force the use of the LATx register
--                  when PORTx is addressed.
--                - Symbolic definitions for config bits (fuses)
--                - Some device dependent procedures for common
--                  operations, like:
--                   . enable_digital_io()
--
-- Sources:
--  - x:/mplab814/mplab_ide/device/pic18f45j10.dev
--  - x:/mplab814/mpasm_suite/lkr/18f45j10_g.lkr
--
-- Notes:
--  - Created with Dev2Jal Rexx script version 0.0.50
--  - File creation date/time: 11 Oct 2008 21:07:26.
--
-- ===================================================
--
-- Device-ID: 0x1C20
-- DataSheet: 39682
-- Programming Specifications: 39687
-- Vdd Range: 2.125-3.500 Nominal: 3.250
-- Vpp Range: 2.125-3.500 Default: 3.250
--
-- ---------------------------------------------------
--
include chipdef_jallib                  -- common constants
--
pragma  target  cpu   PIC_16            -- (banks = 16)
pragma  target  chip  18f45j10
pragma  target  bank  0x0100
pragma  stack   31
pragma  code    32760
pragma  data    0x80-0xFF,0x100-0x1FF,0x200-0x2FF,0x300-0x3FF
pragma  shared  0x0-0x7F
--
var volatile byte _pic_accum shared at 0x7E   -- (compiler)
var volatile byte _pic_isr_w shared at 0x7F   -- (compiler)
--
const word  _FUSES_CT             = 8
const dword _FUSE_BASE[_FUSES_CT] = { 0x007FF8,
                                      0x007FF9,
                                      0x007FFA,
                                      0x007FFB,
                                      0x007FFC,
                                      0x007FFD,
                                      0x007FFE,
                                      0x007FFF }
const byte  _FUSES[_FUSES_CT]     = { 0xE1,
                                      0xFC,
                                      0xC7,
                                      0xFF,
                                      0x00,
                                      0xF1,
                                      0x00,
                                      0x00 }
--
-- ------------------------------------------------
var volatile byte   PORTA                shared at 0xF80
var volatile bit    PORTA_RA5            shared at PORTA : 5
var volatile bit    PORTA_RA3            shared at PORTA : 3
var volatile bit    PORTA_RA2            shared at PORTA : 2
var volatile bit    PORTA_RA1            shared at PORTA : 1
var volatile bit    PORTA_RA0            shared at PORTA : 0
-- ------------------------------------------------
var volatile byte   PORTB                shared at 0xF81
var volatile bit    PORTB_RB7            shared at PORTB : 7
var volatile bit    PORTB_RB6            shared at PORTB : 6
var volatile bit    PORTB_RB5            shared at PORTB : 5
var volatile bit    PORTB_RB4            shared at PORTB : 4
var volatile bit    PORTB_RB3            shared at PORTB : 3
var volatile bit    PORTB_RB2            shared at PORTB : 2
var volatile bit    PORTB_RB1            shared at PORTB : 1
var volatile bit    PORTB_RB0            shared at PORTB : 0
-- ------------------------------------------------
var volatile byte   PORTC                shared at 0xF82
var volatile bit    PORTC_RC7            shared at PORTC : 7
var volatile bit    PORTC_RC6            shared at PORTC : 6
var volatile bit    PORTC_RC5            shared at PORTC : 5
var volatile bit    PORTC_RC4            shared at PORTC : 4
var volatile bit    PORTC_RC3            shared at PORTC : 3
var volatile bit    PORTC_RC2            shared at PORTC : 2
var volatile bit    PORTC_RC1            shared at PORTC : 1
var volatile bit    PORTC_RC0            shared at PORTC : 0
-- ------------------------------------------------
var volatile byte   PORTD                shared at 0xF83
var volatile bit    PORTD_RD7            shared at PORTD : 7
var volatile bit    PORTD_RD6            shared at PORTD : 6
var volatile bit    PORTD_RD5            shared at PORTD : 5
var volatile bit    PORTD_RD4            shared at PORTD : 4
var volatile bit    PORTD_RD3            shared at PORTD : 3
var volatile bit    PORTD_RD2            shared at PORTD : 2
var volatile bit    PORTD_RD1            shared at PORTD : 1
var volatile bit    PORTD_RD0            shared at PORTD : 0
-- ------------------------------------------------
var volatile byte   PORTE                shared at 0xF84
var volatile bit    PORTE_RE2            shared at PORTE : 2
var volatile bit    PORTE_RE1            shared at PORTE : 1
var volatile bit    PORTE_RE0            shared at PORTE : 0
-- ------------------------------------------------
var volatile byte   SSP2CON2             shared at 0xF85
var volatile bit    SSP2CON2_GCEN        shared at SSP2CON2 : 7
var volatile bit    SSP2CON2_ACKSTAT     shared at SSP2CON2 : 6
var volatile bit    SSP2CON2_ACKDT       shared at SSP2CON2 : 5
var volatile bit    SSP2CON2_ACKEN       shared at SSP2CON2 : 4
var volatile bit    SSP2CON2_RCEN        shared at SSP2CON2 : 3
var volatile bit    SSP2CON2_PEN         shared at SSP2CON2 : 2
var volatile bit    SSP2CON2_RSEN        shared at SSP2CON2 : 1
var volatile bit    SSP2CON2_SEN         shared at SSP2CON2 : 0
-- ------------------------------------------------
var volatile byte   SSP2CON1             shared at 0xF86
var volatile bit    SSP2CON1_WCOL        shared at SSP2CON1 : 7
var volatile bit    SSP2CON1_SSPOV       shared at SSP2CON1 : 6
var volatile bit    SSP2CON1_SSPEN       shared at SSP2CON1 : 5
var volatile bit    SSP2CON1_CKP         shared at SSP2CON1 : 4
var volatile bit*4  SSP2CON1_SSPM        shared at SSP2CON1 : 0
-- ------------------------------------------------
var volatile byte   SSP2STAT             shared at 0xF87
var volatile bit    SSP2STAT_SMP         shared at SSP2STAT : 7
var volatile bit    SSP2STAT_CKE         shared at SSP2STAT : 6
var volatile bit    SSP2STAT_D           shared at SSP2STAT : 5
var volatile bit    SSP2STAT_NA          shared at SSP2STAT : 5
var volatile bit    SSP2STAT_P           shared at SSP2STAT : 4
var volatile bit    SSP2STAT_S           shared at SSP2STAT : 3
var volatile bit    SSP2STAT_R           shared at SSP2STAT : 2
var volatile bit    SSP2STAT_NW          shared at SSP2STAT : 2
var volatile bit    SSP2STAT_UA          shared at SSP2STAT : 1
var volatile bit    SSP2STAT_BF          shared at SSP2STAT : 0
-- ------------------------------------------------
var volatile byte   SSP2ADD              shared at 0xF88
var volatile byte   SSP2ADD_SSPADD       shared at SSP2ADD
-- ------------------------------------------------
var volatile byte   LATA                 shared at 0xF89
--
procedure PORTA'put(byte in x) is
   pragma inline
   LATA = x
end procedure
--
procedure PORTA_low'put(byte in x) is
   LATA = (LATA & 0xF0) | (x & 0x0F)
end procedure
function PORTA_low'get() return byte is
   return (LATA & 0x0F)
end function
--
procedure PORTA_high'put(byte in x) is
   LATA = (LATA & 0x0F) | (x << 4)
end procedure
function PORTA_high'get() return byte is
   return (LATA >> 4)
end function
--
var volatile bit    LATA_LATA5           shared at LATA : 5
var volatile bit pin_A5 shared at LATA : 5
procedure pin_A5'put(bit in x at LATA : 5) is
   pragma inline
end procedure
--
var volatile bit    LATA_LATA3           shared at LATA : 3
var volatile bit pin_A3 shared at LATA : 3
procedure pin_A3'put(bit in x at LATA : 3) is
   pragma inline
end procedure
--
var volatile bit    LATA_LATA2           shared at LATA : 2
var volatile bit pin_A2 shared at LATA : 2
procedure pin_A2'put(bit in x at LATA : 2) is
   pragma inline
end procedure
--
var volatile bit    LATA_LATA1           shared at LATA : 1
var volatile bit pin_A1 shared at LATA : 1
procedure pin_A1'put(bit in x at LATA : 1) is
   pragma inline
end procedure
--
var volatile bit    LATA_LATA0           shared at LATA : 0
var volatile bit pin_A0 shared at LATA : 0
procedure pin_A0'put(bit in x at LATA : 0) is
   pragma inline
end procedure
--
-- ------------------------------------------------
var volatile byte   LATB                 shared at 0xF8A
--
procedure PORTB'put(byte in x) is
   pragma inline
   LATB = x
end procedure
--
procedure PORTB_low'put(byte in x) is
   LATB = (LATB & 0xF0) | (x & 0x0F)
end procedure
function PORTB_low'get() return byte is
   return (LATB & 0x0F)
end function
--
procedure PORTB_high'put(byte in x) is
   LATB = (LATB & 0x0F) | (x << 4)
end procedure
function PORTB_high'get() return byte is
   return (LATB >> 4)
end function
--
var volatile bit    LATB_LATB7           shared at LATB : 7
var volatile bit pin_B7 shared at LATB : 7
procedure pin_B7'put(bit in x at LATB : 7) is
   pragma inline
end procedure
--
var volatile bit    LATB_LATB6           shared at LATB : 6
var volatile bit pin_B6 shared at LATB : 6
procedure pin_B6'put(bit in x at LATB : 6) is
   pragma inline
end procedure
--
var volatile bit    LATB_LATB5           shared at LATB : 5
var volatile bit pin_B5 shared at LATB : 5
procedure pin_B5'put(bit in x at LATB : 5) is
   pragma inline
end procedure
--
var volatile bit    LATB_LATB4           shared at LATB : 4
var volatile bit pin_B4 shared at LATB : 4
procedure pin_B4'put(bit in x at LATB : 4) is
   pragma inline
end procedure
--
var volatile bit    LATB_LATB3           shared at LATB : 3
var volatile bit pin_B3 shared at LATB : 3
procedure pin_B3'put(bit in x at LATB : 3) is
   pragma inline
end procedure
--
var volatile bit    LATB_LATB2           shared at LATB : 2
var volatile bit pin_B2 shared at LATB : 2
procedure pin_B2'put(bit in x at LATB : 2) is
   pragma inline
end procedure
--
var volatile bit    LATB_LATB1           shared at LATB : 1
var volatile bit pin_B1 shared at LATB : 1
procedure pin_B1'put(bit in x at LATB : 1) is
   pragma inline
end procedure
--
var volatile bit    LATB_LATB0           shared at LATB : 0
var volatile bit pin_B0 shared at LATB : 0
procedure pin_B0'put(bit in x at LATB : 0) is
   pragma inline
end procedure
--
-- ------------------------------------------------
var volatile byte   LATC                 shared at 0xF8B
--
procedure PORTC'put(byte in x) is
   pragma inline
   LATC = x
end procedure
--
procedure PORTC_low'put(byte in x) is
   LATC = (LATC & 0xF0) | (x & 0x0F)
end procedure
function PORTC_low'get() return byte is
   return (LATC & 0x0F)
end function
--
procedure PORTC_high'put(byte in x) is
   LATC = (LATC & 0x0F) | (x << 4)
end procedure
function PORTC_high'get() return byte is
   return (LATC >> 4)
end function
--
var volatile bit    LATC_LATC7           shared at LATC : 7
var volatile bit pin_C7 shared at LATC : 7
procedure pin_C7'put(bit in x at LATC : 7) is
   pragma inline
end procedure
--
var volatile bit    LATC_LATC6           shared at LATC : 6
var volatile bit pin_C6 shared at LATC : 6
procedure pin_C6'put(bit in x at LATC : 6) is
   pragma inline
end procedure
--
var volatile bit    LATC_LATC5           shared at LATC : 5
var volatile bit pin_C5 shared at LATC : 5
procedure pin_C5'put(bit in x at LATC : 5) is
   pragma inline
end procedure
--
var volatile bit    LATC_LATC4           shared at LATC : 4
var volatile bit pin_C4 shared at LATC : 4
procedure pin_C4'put(bit in x at LATC : 4) is
   pragma inline
end procedure
--
var volatile bit    LATC_LATC3           shared at LATC : 3
var volatile bit pin_C3 shared at LATC : 3
procedure pin_C3'put(bit in x at LATC : 3) is
   pragma inline
end procedure
--
var volatile bit    LATC_LATC2           shared at LATC : 2
var volatile bit pin_C2 shared at LATC : 2
procedure pin_C2'put(bit in x at LATC : 2) is
   pragma inline
end procedure
--
var volatile bit    LATC_LATC1           shared at LATC : 1
var volatile bit pin_C1 shared at LATC : 1
procedure pin_C1'put(bit in x at LATC : 1) is
   pragma inline
end procedure
--
var volatile bit    LATC_LATC0           shared at LATC : 0
var volatile bit pin_C0 shared at LATC : 0
procedure pin_C0'put(bit in x at LATC : 0) is
   pragma inline
end procedure
--
-- ------------------------------------------------
var volatile byte   LATD                 shared at 0xF8C
--
procedure PORTD'put(byte in x) is
   pragma inline
   LATD = x
end procedure
--
procedure PORTD_low'put(byte in x) is
   LATD = (LATD & 0xF0) | (x & 0x0F)
end procedure
function PORTD_low'get() return byte is
   return (LATD & 0x0F)
end function
--
procedure PORTD_high'put(byte in x) is
   LATD = (LATD & 0x0F) | (x << 4)
end procedure
function PORTD_high'get() return byte is
   return (LATD >> 4)
end function
--
var volatile bit    LATD_LATD7           shared at LATD : 7
var volatile bit pin_D7 shared at LATD : 7
procedure pin_D7'put(bit in x at LATD : 7) is
   pragma inline
end procedure
--
var volatile bit    LATD_LATD6           shared at LATD : 6
var volatile bit pin_D6 shared at LATD : 6
procedure pin_D6'put(bit in x at LATD : 6) is
   pragma inline
end procedure
--
var volatile bit    LATD_LATD5           shared at LATD : 5
var volatile bit pin_D5 shared at LATD : 5
procedure pin_D5'put(bit in x at LATD : 5) is
   pragma inline
end procedure
--
var volatile bit    LATD_LATD4           shared at LATD : 4
var volatile bit pin_D4 shared at LATD : 4
procedure pin_D4'put(bit in x at LATD : 4) is
   pragma inline
end procedure
--
var volatile bit    LATD_LATD3           shared at LATD : 3
var volatile bit pin_D3 shared at LATD : 3
procedure pin_D3'put(bit in x at LATD : 3) is
   pragma inline
end procedure
--
var volatile bit    LATD_LATD2           shared at LATD : 2
var volatile bit pin_D2 shared at LATD : 2
procedure pin_D2'put(bit in x at LATD : 2) is
   pragma inline
end procedure
--
var volatile bit    LATD_LATD1           shared at LATD : 1
var volatile bit pin_D1 shared at LATD : 1
procedure pin_D1'put(bit in x at LATD : 1) is
   pragma inline
end procedure
--
var volatile bit    LATD_LATD0           shared at LATD : 0
var volatile bit pin_D0 shared at LATD : 0
procedure pin_D0'put(bit in x at LATD : 0) is
   pragma inline
end procedure
--
-- ------------------------------------------------
var volatile byte   LATE                 shared at 0xF8D
--
procedure PORTE'put(byte in x) is
   pragma inline
   LATE = x
end procedure
--
procedure PORTE_low'put(byte in x) is
   LATE = (LATE & 0xF0) | (x & 0x0F)
end procedure
function PORTE_low'get() return byte is
   return (LATE & 0x0F)
end function
--
procedure PORTE_high'put(byte in x) is
   LATE = (LATE & 0x0F) | (x << 4)
end procedure
function PORTE_high'get() return byte is
   return (LATE >> 4)
end function
--
var volatile bit    LATE_LATE2           shared at LATE : 2
var volatile bit pin_E2 shared at LATE : 2
procedure pin_E2'put(bit in x at LATE : 2) is
   pragma inline
end procedure
--
var volatile bit    LATE_LATE1           shared at LATE : 1
var volatile bit pin_E1 shared at LATE : 1
procedure pin_E1'put(bit in x at LATE : 1) is
   pragma inline
end procedure
--
var volatile bit    LATE_LATE0           shared at LATE : 0
var volatile bit pin_E0 shared at LATE : 0
procedure pin_E0'put(bit in x at LATE : 0) is
   pragma inline
end procedure
--
-- ------------------------------------------------
var volatile byte   SSP2BUF              shared at 0xF8E
var volatile byte   SSP2BUF_SSPBUF       shared at SSP2BUF
-- ------------------------------------------------
var volatile byte   TRISA                shared at 0xF92
var volatile byte   PORTA_direction      shared at TRISA
--
procedure PORTA_low_direction'put(byte in x) is
   TRISA = (TRISA & 0xF0) | (x & 0x0F)
end procedure
function PORTA_low_direction'get() return byte is
   return (TRISA & 0x0F)
end function
--
procedure PORTA_high_direction'put(byte in x) is
   TRISA = (TRISA & 0x0F) | (x << 4)
end procedure
function PORTA_high_direction'get() return byte is
   return (TRISA >> 4)
end function
--
var volatile bit    TRISA_TRISA5         shared at TRISA : 5
var volatile bit    pin_A5_direction     shared at TRISA : 5
var volatile bit    TRISA_TRISA3         shared at TRISA : 3
var volatile bit    pin_A3_direction     shared at TRISA : 3
var volatile bit    TRISA_TRISA2         shared at TRISA : 2
var volatile bit    pin_A2_direction     shared at TRISA : 2
var volatile bit    TRISA_TRISA1         shared at TRISA : 1
var volatile bit    pin_A1_direction     shared at TRISA : 1
var volatile bit    TRISA_TRISA0         shared at TRISA : 0
var volatile bit    pin_A0_direction     shared at TRISA : 0
-- ------------------------------------------------
var volatile byte   TRISB                shared at 0xF93
var volatile byte   PORTB_direction      shared at TRISB
--
procedure PORTB_low_direction'put(byte in x) is
   TRISB = (TRISB & 0xF0) | (x & 0x0F)
end procedure
function PORTB_low_direction'get() return byte is
   return (TRISB & 0x0F)
end function
--
procedure PORTB_high_direction'put(byte in x) is
   TRISB = (TRISB & 0x0F) | (x << 4)
end procedure
function PORTB_high_direction'get() return byte is
   return (TRISB >> 4)
end function
--
var volatile bit    TRISB_TRISB7         shared at TRISB : 7
var volatile bit    pin_B7_direction     shared at TRISB : 7
var volatile bit    TRISB_TRISB6         shared at TRISB : 6
var volatile bit    pin_B6_direction     shared at TRISB : 6
var volatile bit    TRISB_TRISB5         shared at TRISB : 5
var volatile bit    pin_B5_direction     shared at TRISB : 5
var volatile bit    TRISB_TRISB4         shared at TRISB : 4
var volatile bit    pin_B4_direction     shared at TRISB : 4
var volatile bit    TRISB_TRISB3         shared at TRISB : 3
var volatile bit    pin_B3_direction     shared at TRISB : 3
var volatile bit    TRISB_TRISB2         shared at TRISB : 2
var volatile bit    pin_B2_direction     shared at TRISB : 2
var volatile bit    TRISB_TRISB1         shared at TRISB : 1
var volatile bit    pin_B1_direction     shared at TRISB : 1
var volatile bit    TRISB_TRISB0         shared at TRISB : 0
var volatile bit    pin_B0_direction     shared at TRISB : 0
-- ------------------------------------------------
var volatile byte   TRISC                shared at 0xF94
var volatile byte   PORTC_direction      shared at TRISC
--
procedure PORTC_low_direction'put(byte in x) is
   TRISC = (TRISC & 0xF0) | (x & 0x0F)
end procedure
function PORTC_low_direction'get() return byte is
   return (TRISC & 0x0F)
end function
--
procedure PORTC_high_direction'put(byte in x) is
   TRISC = (TRISC & 0x0F) | (x << 4)
end procedure
function PORTC_high_direction'get() return byte is
   return (TRISC >> 4)
end function
--
var volatile bit    TRISC_TRISC7         shared at TRISC : 7
var volatile bit    pin_C7_direction     shared at TRISC : 7
var volatile bit    TRISC_TRISC6         shared at TRISC : 6
var volatile bit    pin_C6_direction     shared at TRISC : 6
var volatile bit    TRISC_TRISC5         shared at TRISC : 5
var volatile bit    pin_C5_direction     shared at TRISC : 5
var volatile bit    TRISC_TRISC4         shared at TRISC : 4
var volatile bit    pin_C4_direction     shared at TRISC : 4
var volatile bit    TRISC_TRISC3         shared at TRISC : 3
var volatile bit    pin_C3_direction     shared at TRISC : 3
var volatile bit    TRISC_TRISC2         shared at TRISC : 2
var volatile bit    pin_C2_direction     shared at TRISC : 2
var volatile bit    TRISC_TRISC1         shared at TRISC : 1
var volatile bit    pin_C1_direction     shared at TRISC : 1
var volatile bit    TRISC_TRISC0         shared at TRISC : 0
var volatile bit    pin_C0_direction     shared at TRISC : 0
-- ------------------------------------------------
var volatile byte   TRISD                shared at 0xF95
var volatile byte   PORTD_direction      shared at TRISD
--
procedure PORTD_low_direction'put(byte in x) is
   TRISD = (TRISD & 0xF0) | (x & 0x0F)
end procedure
function PORTD_low_direction'get() return byte is
   return (TRISD & 0x0F)
end function
--
procedure PORTD_high_direction'put(byte in x) is
   TRISD = (TRISD & 0x0F) | (x << 4)
end procedure
function PORTD_high_direction'get() return byte is
   return (TRISD >> 4)
end function
--
var volatile bit    TRISD_TRISD7         shared at TRISD : 7
var volatile bit    pin_D7_direction     shared at TRISD : 7
var volatile bit    TRISD_TRISD6         shared at TRISD : 6
var volatile bit    pin_D6_direction     shared at TRISD : 6
var volatile bit    TRISD_TRISD5         shared at TRISD : 5
var volatile bit    pin_D5_direction     shared at TRISD : 5
var volatile bit    TRISD_TRISD4         shared at TRISD : 4
var volatile bit    pin_D4_direction     shared at TRISD : 4
var volatile bit    TRISD_TRISD3         shared at TRISD : 3
var volatile bit    pin_D3_direction     shared at TRISD : 3
var volatile bit    TRISD_TRISD2         shared at TRISD : 2
var volatile bit    pin_D2_direction     shared at TRISD : 2
var volatile bit    TRISD_TRISD1         shared at TRISD : 1
var volatile bit    pin_D1_direction     shared at TRISD : 1
var volatile bit    TRISD_TRISD0         shared at TRISD : 0
var volatile bit    pin_D0_direction     shared at TRISD : 0
-- ------------------------------------------------
var volatile byte   TRISE                shared at 0xF96
var volatile byte   PORTE_direction      shared at TRISE
--
procedure PORTE_low_direction'put(byte in x) is
   TRISE = (TRISE & 0xF0) | (x & 0x0F)
end procedure
function PORTE_low_direction'get() return byte is
   return (TRISE & 0x0F)
end function
--
procedure PORTE_high_direction'put(byte in x) is
   TRISE = (TRISE & 0x0F) | (x << 4)
end procedure
function PORTE_high_direction'get() return byte is
   return (TRISE >> 4)
end function
--
var volatile bit    TRISE_IBF            shared at TRISE : 7
var volatile bit    TRISE_OBF            shared at TRISE : 6
var volatile bit    TRISE_IBOV           shared at TRISE : 5
var volatile bit    TRISE_PSPMODE        shared at TRISE : 4
var volatile bit    TRISE_TRISE2         shared at TRISE : 2
var volatile bit    pin_E2_direction     shared at TRISE : 2
var volatile bit    TRISE_TRISE1         shared at TRISE : 1
var volatile bit    pin_E1_direction     shared at TRISE : 1
var volatile bit    TRISE_TRISE0         shared at TRISE : 0
var volatile bit    pin_E0_direction     shared at TRISE : 0
-- ------------------------------------------------
var volatile byte   OSCTUNE              shared at 0xF9B
var volatile bit    OSCTUNE_PLLEN        shared at OSCTUNE : 6
-- ------------------------------------------------
var volatile byte   PIE1                 shared at 0xF9D
var volatile bit    PIE1_PSPIE           shared at PIE1 : 7
var volatile bit    PIE1_ADIE            shared at PIE1 : 6
var volatile bit    PIE1_RCIE            shared at PIE1 : 5
var volatile bit    PIE1_TXIE            shared at PIE1 : 4
var volatile bit    PIE1_SSP1IE          shared at PIE1 : 3
var volatile bit    PIE1_CCP1IE          shared at PIE1 : 2
var volatile bit    PIE1_TMR2IE          shared at PIE1 : 1
var volatile bit    PIE1_TMR1IE          shared at PIE1 : 0
-- ------------------------------------------------
var volatile byte   PIR1                 shared at 0xF9E
var volatile bit    PIR1_PSPIF           shared at PIR1 : 7
var volatile bit    PIR1_ADIF            shared at PIR1 : 6
var volatile bit    PIR1_RCIF            shared at PIR1 : 5
var volatile bit    PIR1_TXIF            shared at PIR1 : 4
var volatile bit    PIR1_SSP1IF          shared at PIR1 : 3
var volatile bit    PIR1_CCP1IF          shared at PIR1 : 2
var volatile bit    PIR1_TMR2IF          shared at PIR1 : 1
var volatile bit    PIR1_TMR1IF          shared at PIR1 : 0
-- ------------------------------------------------
var volatile byte   IPR1                 shared at 0xF9F
var volatile bit    IPR1_PSPIP           shared at IPR1 : 7
var volatile bit    IPR1_ADIP            shared at IPR1 : 6
var volatile bit    IPR1_RCIP            shared at IPR1 : 5
var volatile bit    IPR1_TXIP            shared at IPR1 : 4
var volatile bit    IPR1_SSP1IP          shared at IPR1 : 3
var volatile bit    IPR1_CCP1IP          shared at IPR1 : 2
var volatile bit    IPR1_TMR2IP          shared at IPR1 : 1
var volatile bit    IPR1_TMR1IP          shared at IPR1 : 0
-- ------------------------------------------------
var volatile byte   PIE2                 shared at 0xFA0
var volatile bit    PIE2_OSCFIE          shared at PIE2 : 7
var volatile bit    PIE2_CMIE            shared at PIE2 : 6
var volatile bit    PIE2_BCL1IE          shared at PIE2 : 3
var volatile bit    PIE2_CCP2IE          shared at PIE2 : 0
-- ------------------------------------------------
var volatile byte   PIR2                 shared at 0xFA1
var volatile bit    PIR2_OSCFIF          shared at PIR2 : 7
var volatile bit    PIR2_CMIF            shared at PIR2 : 6
var volatile bit    PIR2_BCL1IF          shared at PIR2 : 3
var volatile bit    PIR2_CCP2IF          shared at PIR2 : 0
-- ------------------------------------------------
var volatile byte   IPR2                 shared at 0xFA2
var volatile bit    IPR2_OSCFIP          shared at IPR2 : 7
var volatile bit    IPR2_CMIP            shared at IPR2 : 6
var volatile bit    IPR2_BCL1IP          shared at IPR2 : 3
var volatile bit    IPR2_CCP2IP          shared at IPR2 : 0
-- ------------------------------------------------
var volatile byte   PIE3                 shared at 0xFA3
var volatile bit    PIE3_SSP2IE          shared at PIE3 : 7
var volatile bit    PIE3_BCL2IE          shared at PIE3 : 6
-- ------------------------------------------------
var volatile byte   PIR3                 shared at 0xFA4
var volatile bit    PIR3_SSP2IF          shared at PIR3 : 7
var volatile bit    PIR3_BCL2IF          shared at PIR3 : 6
-- ------------------------------------------------
var volatile byte   IPR3                 shared at 0xFA5
var volatile bit    IPR3_SSP2IP          shared at IPR3 : 7
var volatile bit    IPR3_BCL2IP          shared at IPR3 : 6
-- ------------------------------------------------
var volatile byte   EECON1               shared at 0xFA6
var volatile bit    EECON1_FREE          shared at EECON1 : 4
var volatile bit    EECON1_WRERR         shared at EECON1 : 3
var volatile bit    EECON1_WREN          shared at EECON1 : 2
var volatile bit    EECON1_WR            shared at EECON1 : 1
-- ------------------------------------------------
var volatile byte   EECON2               shared at 0xFA7
-- ------------------------------------------------
var volatile byte   RCSTA                shared at 0xFAB
var volatile bit    RCSTA_SPEN           shared at RCSTA : 7
var volatile bit    RCSTA_RX9            shared at RCSTA : 6
var volatile bit    RCSTA_SREN           shared at RCSTA : 5
var volatile bit    RCSTA_CREN           shared at RCSTA : 4
var volatile bit    RCSTA_ADDEN          shared at RCSTA : 3
var volatile bit    RCSTA_FERR           shared at RCSTA : 2
var volatile bit    RCSTA_OERR           shared at RCSTA : 1
var volatile bit    RCSTA_RX9D           shared at RCSTA : 0
-- ------------------------------------------------
var volatile byte   TXSTA                shared at 0xFAC
var volatile bit    TXSTA_CSRC           shared at TXSTA : 7
var volatile bit    TXSTA_TX9            shared at TXSTA : 6
var volatile bit    TXSTA_TXEN           shared at TXSTA : 5
var volatile bit    TXSTA_SYNC           shared at TXSTA : 4
var volatile bit    TXSTA_SENDB          shared at TXSTA : 3
var volatile bit    TXSTA_BRGH           shared at TXSTA : 2
var volatile bit    TXSTA_TRMT           shared at TXSTA : 1
var volatile bit    TXSTA_TX9D           shared at TXSTA : 0
-- ------------------------------------------------
var volatile byte   TXREG                shared at 0xFAD
-- ------------------------------------------------
var volatile byte   RCREG                shared at 0xFAE
-- ------------------------------------------------
var volatile byte   SPBRG                shared at 0xFAF
-- ------------------------------------------------
var volatile byte   SPBRGH               shared at 0xFB0
-- ------------------------------------------------
var volatile byte   CMCON                shared at 0xFB4
var volatile bit    CMCON_C2OUT          shared at CMCON : 7
var volatile bit    CMCON_C1OUT          shared at CMCON : 6
var volatile bit    CMCON_C2INV          shared at CMCON : 5
var volatile bit    CMCON_C1INV          shared at CMCON : 4
var volatile bit    CMCON_CIS            shared at CMCON : 3
var volatile bit*3  CMCON_CM             shared at CMCON : 0
-- ------------------------------------------------
var volatile byte   CVRCON               shared at 0xFB5
var volatile bit    CVRCON_CVREN         shared at CVRCON : 7
var volatile bit    CVRCON_CVROE         shared at CVRCON : 6
var volatile bit    CVRCON_CVRR          shared at CVRCON : 5
var volatile bit    CVRCON_CVRSS         shared at CVRCON : 4
var volatile bit*4  CVRCON_CVR           shared at CVRCON : 0
-- ------------------------------------------------
var volatile byte   ECCP1AS              shared at 0xFB6
var volatile bit    ECCP1AS_ECCPASE      shared at ECCP1AS : 7
var volatile bit*3  ECCP1AS_ECCPAS       shared at ECCP1AS : 4
var volatile bit*2  ECCP1AS_PSSAC        shared at ECCP1AS : 2
var volatile bit*2  ECCP1AS_PSSBD        shared at ECCP1AS : 0
-- ------------------------------------------------
var volatile byte   PWM1CON              shared at 0xFB7
var volatile bit    PWM1CON_PRSEN        shared at PWM1CON : 7
var volatile bit*7  PWM1CON_PDC          shared at PWM1CON : 0
-- ------------------------------------------------
var volatile byte   BAUDCON              shared at 0xFB8
var volatile bit    BAUDCON_ABDOVF       shared at BAUDCON : 7
var volatile bit    BAUDCON_RCMT         shared at BAUDCON : 6
var volatile bit    BAUDCON_SCKP         shared at BAUDCON : 4
var volatile bit    BAUDCON_BRG16        shared at BAUDCON : 3
var volatile bit    BAUDCON_WUE          shared at BAUDCON : 1
var volatile bit    BAUDCON_ABDEN        shared at BAUDCON : 0
-- ------------------------------------------------
var volatile byte   CCP2CON              shared at 0xFBA
var volatile bit*2  CCP2CON_DC2B         shared at CCP2CON : 4
var volatile bit*4  CCP2CON_CCP2M        shared at CCP2CON : 0
-- ------------------------------------------------
var volatile word   CCPR2                shared at 0xFBB
-- ------------------------------------------------
var volatile byte   CCPR2L               shared at 0xFBB
-- ------------------------------------------------
var volatile byte   CCPR2H               shared at 0xFBC
-- ------------------------------------------------
var volatile byte   ECCP1CON             shared at 0xFBD
var volatile bit*2  ECCP1CON_P1M         shared at ECCP1CON : 6
var volatile bit*2  ECCP1CON_DC1B        shared at ECCP1CON : 4
var volatile bit*4  ECCP1CON_CCP1M       shared at ECCP1CON : 0
-- ------------------------------------------------
var volatile word   CCPR1                shared at 0xFBE
-- ------------------------------------------------
var volatile byte   CCPR1L               shared at 0xFBE
-- ------------------------------------------------
var volatile byte   CCPR1H               shared at 0xFBF
-- ------------------------------------------------
var volatile byte   ADCON2               shared at 0xFC0
var volatile bit    ADCON2_ADFM          shared at ADCON2 : 7
var volatile bit*3  ADCON2_ACQT          shared at ADCON2 : 3
var volatile bit*3  ADCON2_ADCS          shared at ADCON2 : 0
-- ------------------------------------------------
var volatile byte   ADCON1               shared at 0xFC1
var volatile bit*2  ADCON1_VCFG          shared at ADCON1 : 4
var volatile bit*4  ADCON1_PCFG          shared at ADCON1 : 0
-- ------------------------------------------------
var volatile byte   ADCON0               shared at 0xFC2
var volatile bit*4  ADCON0_CHS           shared at ADCON0 : 2
var volatile bit    ADCON0_GO            shared at ADCON0 : 1
var volatile bit    ADCON0_NDONE         shared at ADCON0 : 1
var volatile bit    ADCON0_ADON          shared at ADCON0 : 0
-- ------------------------------------------------
var volatile word   ADRES                shared at 0xFC3
-- ------------------------------------------------
var volatile byte   ADRESL               shared at 0xFC3
-- ------------------------------------------------
var volatile byte   ADRESH               shared at 0xFC4
-- ------------------------------------------------
var volatile byte   SSPCON2              shared at 0xFC5
var volatile bit    SSPCON2_GCEN         shared at SSPCON2 : 7
var volatile bit    SSPCON2_ACKSTAT      shared at SSPCON2 : 6
var volatile bit    SSPCON2_ACKDT        shared at SSPCON2 : 5
var volatile bit    SSPCON2_ACKEN        shared at SSPCON2 : 4
var volatile bit    SSPCON2_RCEN         shared at SSPCON2 : 3
var volatile bit    SSPCON2_PEN          shared at SSPCON2 : 2
var volatile bit    SSPCON2_RSEN         shared at SSPCON2 : 1
var volatile bit    SSPCON2_SEN          shared at SSPCON2 : 0
-- ------------------------------------------------
var volatile byte   SSPCON1              shared at 0xFC6
var volatile bit    SSPCON1_WCOL         shared at SSPCON1 : 7
var volatile bit    SSPCON1_SSPOV        shared at SSPCON1 : 6
var volatile bit    SSPCON1_SSPEN        shared at SSPCON1 : 5
var volatile bit    SSPCON1_CKP          shared at SSPCON1 : 4
var volatile bit*4  SSPCON1_SSPM         shared at SSPCON1 : 0
-- ------------------------------------------------
var volatile byte   SSPSTAT              shared at 0xFC7
var volatile bit    SSPSTAT_SMP          shared at SSPSTAT : 7
var volatile bit    SSPSTAT_CKE          shared at SSPSTAT : 6
var volatile bit    SSPSTAT_D            shared at SSPSTAT : 5
var volatile bit    SSPSTAT_NA           shared at SSPSTAT : 5
var volatile bit    SSPSTAT_P            shared at SSPSTAT : 4
var volatile bit    SSPSTAT_S            shared at SSPSTAT : 3
var volatile bit    SSPSTAT_R            shared at SSPSTAT : 2
var volatile bit    SSPSTAT_NW           shared at SSPSTAT : 2
var volatile bit    SSPSTAT_UA           shared at SSPSTAT : 1
var volatile bit    SSPSTAT_BF           shared at SSPSTAT : 0
-- ------------------------------------------------
var volatile byte   SSPADD               shared at 0xFC8
-- ------------------------------------------------
var volatile byte   SSPBUF               shared at 0xFC9
-- ------------------------------------------------
var volatile byte   T2CON                shared at 0xFCA
var volatile bit*4  T2CON_TOUTPS         shared at T2CON : 3
var volatile bit    T2CON_TMR2ON         shared at T2CON : 2
var volatile bit*2  T2CON_T2CKPS         shared at T2CON : 0
-- ------------------------------------------------
var volatile byte   PR2                  shared at 0xFCB
-- ------------------------------------------------
var volatile byte   TMR2                 shared at 0xFCC
-- ------------------------------------------------
var volatile byte   T1CON                shared at 0xFCD
var volatile bit    T1CON_RD16           shared at T1CON : 7
var volatile bit    T1CON_T1RUN          shared at T1CON : 6
var volatile bit*2  T1CON_T1CKPS         shared at T1CON : 4
var volatile bit    T1CON_T1OSCEN        shared at T1CON : 3
var volatile bit    T1CON_NT1SYNC        shared at T1CON : 2
var volatile bit    T1CON_TMR1CS         shared at T1CON : 1
var volatile bit    T1CON_TMR1ON         shared at T1CON : 0
-- ------------------------------------------------
var volatile word   TMR1                 shared at 0xFCE
-- ------------------------------------------------
var volatile byte   TMR1L                shared at 0xFCE
-- ------------------------------------------------
var volatile byte   TMR1H                shared at 0xFCF
-- ------------------------------------------------
var volatile byte   RCON                 shared at 0xFD0
var volatile bit    RCON_IPEN            shared at RCON : 7
var volatile bit    RCON_NRI             shared at RCON : 4
var volatile bit    RCON_NTO             shared at RCON : 3
var volatile bit    RCON_NPD             shared at RCON : 2
var volatile bit    RCON_NPOR            shared at RCON : 1
var volatile bit    RCON_NBOR            shared at RCON : 0
-- ------------------------------------------------
var volatile byte   WDTCON               shared at 0xFD1
var volatile bit    WDTCON_SWDTEN        shared at WDTCON : 0
-- ------------------------------------------------
var volatile byte   OSCCON               shared at 0xFD3
var volatile bit    OSCCON_IDLEN         shared at OSCCON : 7
var volatile bit    OSCCON_OSTS          shared at OSCCON : 3
var volatile bit*2  OSCCON_SCS           shared at OSCCON : 0
-- ------------------------------------------------
var volatile byte   T0CON                shared at 0xFD5
var volatile bit    T0CON_TMR0ON         shared at T0CON : 7
var volatile bit    T0CON_T08BIT         shared at T0CON : 6
var volatile bit    T0CON_T0CS           shared at T0CON : 5
var volatile bit    T0CON_T0SE           shared at T0CON : 4
var volatile bit    T0CON_PSA            shared at T0CON : 3
var volatile bit*3  T0CON_T0PS           shared at T0CON : 0
-- ------------------------------------------------
var volatile word   TMR0                 shared at 0xFD6
-- ------------------------------------------------
var volatile byte   TMR0L                shared at 0xFD6
-- ------------------------------------------------
var volatile byte   TMR0H                shared at 0xFD7
-- ------------------------------------------------
var volatile byte   STATUS               shared at 0xFD8
var volatile bit    STATUS_N             shared at STATUS : 4
var volatile bit    STATUS_OV            shared at STATUS : 3
var volatile bit    STATUS_Z             shared at STATUS : 2
var volatile bit    STATUS_DC            shared at STATUS : 1
var volatile bit    STATUS_C             shared at STATUS : 0
var volatile byte   _status              shared at 0xFD8      -- (compiler)
const        byte   _n                   =  4      -- (compiler)
const        byte   _ov                  =  3      -- (compiler)
const        byte   _z                   =  2      -- (compiler)
const        byte   _dc                  =  1      -- (compiler)
const        byte   _c                   =  0      -- (compiler)
const        byte   _banked              =  1      -- (compiler - use BSR)
const        byte   _access              =  0      -- (compiler - use ACCESS)
-- ------------------------------------------------
var volatile word   FSR2                 shared at 0xFD9
-- ------------------------------------------------
var volatile byte   FSR2L                shared at 0xFD9
-- ------------------------------------------------
var volatile byte   FSR2H                shared at 0xFDA
var volatile bit*4  FSR2H_FSR2H          shared at FSR2H : 0
-- ------------------------------------------------
var volatile byte   PLUSW2               shared at 0xFDB
-- ------------------------------------------------
var volatile byte   PREINC2              shared at 0xFDC
-- ------------------------------------------------
var volatile byte   POSTDEC2             shared at 0xFDD
-- ------------------------------------------------
var volatile byte   POSTINC2             shared at 0xFDE
-- ------------------------------------------------
var volatile byte   INDF2                shared at 0xFDF
-- ------------------------------------------------
var volatile byte   BSR                  shared at 0xFE0
var volatile bit*4  BSR_BSR              shared at BSR : 0
-- ------------------------------------------------
var volatile word   FSR1                 shared at 0xFE1
-- ------------------------------------------------
var volatile byte   FSR1L                shared at 0xFE1
-- ------------------------------------------------
var volatile byte   FSR1H                shared at 0xFE2
var volatile bit*4  FSR1H_FSR1H          shared at FSR1H : 0
-- ------------------------------------------------
var volatile byte   PLUSW1               shared at 0xFE3
-- ------------------------------------------------
var volatile byte   PREINC1              shared at 0xFE4
-- ------------------------------------------------
var volatile byte   POSTDEC1             shared at 0xFE5
-- ------------------------------------------------
var volatile byte   POSTINC1             shared at 0xFE6
-- ------------------------------------------------
var volatile byte   INDF1                shared at 0xFE7
-- ------------------------------------------------
var volatile byte   WREG                 shared at 0xFE8
-- ------------------------------------------------
var volatile word   FSR0                 shared at 0xFE9
var volatile word   _fsr0                shared at 0xFE9      -- (compiler)
-- ------------------------------------------------
var volatile byte   FSR0L                shared at 0xFE9
var volatile byte   _fsr0l               shared at 0xFE9      -- (compiler)
-- ------------------------------------------------
var volatile byte   FSR0H                shared at 0xFEA
var volatile bit*4  FSR0H_FSR0H          shared at FSR0H : 0
var volatile byte   _fsr0h               shared at 0xFEA      -- (compiler)
-- ------------------------------------------------
var volatile byte   PLUSW0               shared at 0xFEB
-- ------------------------------------------------
var volatile byte   PREINC0              shared at 0xFEC
-- ------------------------------------------------
var volatile byte   POSTDEC0             shared at 0xFED
-- ------------------------------------------------
var volatile byte   POSTINC0             shared at 0xFEE
-- ------------------------------------------------
var volatile byte   INDF0                shared at 0xFEF
var volatile byte   _ind0                shared at 0xFEF      -- (compiler)
-- ------------------------------------------------
var volatile byte   INTCON3              shared at 0xFF0
var volatile bit    INTCON3_INT2IP       shared at INTCON3 : 7
var volatile bit    INTCON3_INT1IP       shared at INTCON3 : 6
var volatile bit    INTCON3_INT2IE       shared at INTCON3 : 4
var volatile bit    INTCON3_INT1IE       shared at INTCON3 : 3
var volatile bit    INTCON3_INT2IF       shared at INTCON3 : 1
var volatile bit    INTCON3_INT1IF       shared at INTCON3 : 0
-- ------------------------------------------------
var volatile byte   INTCON2              shared at 0xFF1
var volatile bit    INTCON2_NRBPU        shared at INTCON2 : 7
var volatile bit    INTCON2_INTEDG0      shared at INTCON2 : 6
var volatile bit    INTCON2_INTEDG1      shared at INTCON2 : 5
var volatile bit    INTCON2_INTEDG2      shared at INTCON2 : 4
var volatile bit    INTCON2_TMR0IP       shared at INTCON2 : 2
var volatile bit    INTCON2_RBIP         shared at INTCON2 : 0
-- ------------------------------------------------
var volatile byte   INTCON               shared at 0xFF2
var volatile bit    INTCON_GIE           shared at INTCON : 7
var volatile bit    INTCON_GIEH          shared at INTCON : 7
var volatile bit    INTCON_PEIE          shared at INTCON : 6
var volatile bit    INTCON_GIEL          shared at INTCON : 6
var volatile bit    INTCON_TMR0IE        shared at INTCON : 5
var volatile bit    REG_T0IE             shared at INTCON : 5
var volatile bit    INTCON_INT0IE        shared at INTCON : 4
var volatile bit    INTCON_RBIE          shared at INTCON : 3
var volatile bit    INTCON_TMR0IF        shared at INTCON : 2
var volatile bit    REG_T0IF             shared at INTCON : 2
var volatile bit    INTCON_INT0IF        shared at INTCON : 1
var volatile bit    INTCON_RBIF          shared at INTCON : 0
-- ------------------------------------------------
var volatile word   PROD                 shared at 0xFF3
-- ------------------------------------------------
var volatile byte   PRODL                shared at 0xFF3
-- ------------------------------------------------
var volatile byte   PRODH                shared at 0xFF4
-- ------------------------------------------------
var volatile byte   TABLAT               shared at 0xFF5
var volatile byte   _tablat              shared at 0xFF5      -- (compiler)
-- ------------------------------------------------
var volatile byte*3 TBLPTR               shared at 0xFF6
var volatile bit    TBLPTR_ACSS          shared at TBLPTR : 5
var volatile byte*3 _tblptr              shared at 0xFF6      -- (compiler)
-- ------------------------------------------------
var volatile byte   TBLPTRL              shared at 0xFF6
-- ------------------------------------------------
var volatile byte   TBLPTRH              shared at 0xFF7
-- ------------------------------------------------
var volatile byte   TBLPTRU              shared at 0xFF8
var volatile bit    TBLPTRU_ACSS         shared at TBLPTRU : 5
var volatile bit*5  TBLPTRU_TBLPTRU      shared at TBLPTRU : 0
-- ------------------------------------------------
var volatile byte*3 PCLAT                shared at 0xFF9
-- ------------------------------------------------
var volatile byte   PCL                  shared at 0xFF9
var volatile byte   _pcl                 shared at 0xFF9      -- (compiler)
-- ------------------------------------------------
var volatile byte   PCLATH               shared at 0xFFA
var volatile byte   PCLATH_PCH           shared at PCLATH
var volatile byte   _pclath              shared at 0xFFA      -- (compiler)
-- ------------------------------------------------
var volatile byte   PCLATU               shared at 0xFFB
var volatile bit*5  PCLATU_PCU           shared at PCLATU : 0
var volatile byte   _pclatu              shared at 0xFFB      -- (compiler)
-- ------------------------------------------------
var volatile byte   STKPTR               shared at 0xFFC
var volatile bit    STKPTR_STKFUL        shared at STKPTR : 7
var volatile bit    STKPTR_STKUNF        shared at STKPTR : 6
var volatile bit*5  STKPTR_STKPTR        shared at STKPTR : 0
-- ------------------------------------------------
var volatile byte*3 TOS                  shared at 0xFFD
-- ------------------------------------------------
var volatile byte   TOSL                 shared at 0xFFD
-- ------------------------------------------------
var volatile byte   TOSH                 shared at 0xFFE
-- ------------------------------------------------
var volatile byte   TOSU                 shared at 0xFFF
var volatile bit*5  TOSU_TOSU            shared at TOSU : 0
--
-- ===================================================
--
-- Special device dependent procedures
--
-- ---------------------------------------------------
-- Disable ADC module (ADC_group ADC_V6)
--
procedure adc_off() is
   pragma inline
   ADCON0 = 0b0000_0000         -- disable ADC
   ADCON1 = 0b0000_1111         -- digital I/O
   ADCON2 = 0b0000_0000
end procedure
--
-- ---------------------------------------------------
-- Disable comparator module
--
procedure comparator_off() is
   pragma inline
   CMCON  = 0b0000_0111        -- disable comparators
end procedure
--
-- ---------------------------------------------------
-- Switch analog ports to digital mode (if analog module present).
--
procedure enable_digital_io() is
   pragma inline
   adc_off()
   comparator_off()
end procedure
--
--
-- ==================================================
--
-- Symbolic Fuse definitions
-- -------------------------
--
-- addr 0x7FF8
--
pragma fuse_def WDT:0 0x1 {
       ENABLED = 0x1
       DISABLED = 0x0
       }
pragma fuse_def STVREN:0 0x20 {
       ENABLED = 0x20
       DISABLED = 0x0
       }
pragma fuse_def XINST:0 0x40 {
       ENABLED = 0x40
       DISABLED = 0x0
       }
pragma fuse_def BACKBUG:0 0x80 {
       DISABLED = 0x80
       ENABLED = 0x0
       }
--
-- addr 0x7FF9
--
pragma fuse_def CP_0:1 0x4 {
       DISABLED = 0x4
       ENABLED = 0x0
       }
pragma fuse_def SIGN:1 0x8 {
       BULK_ERASE_OF_MEMORY_NOT_CONDUCATED = 0x8
       BULK_ERASE_OF_MEMORY_AREA_COMPLETE = 0x0
       }
pragma fuse_def FNOP_0:1 0xF0 {
       NOPD = 0xF0
       }
--
-- addr 0x7FFA
--
pragma fuse_def OSC:2 0x3 {
       EC_CLKOUT = 0x3
       HS_PLL = 0x1
       HS = 0x0
       }
pragma fuse_def FOSC2:2 0x4 {
       CLOCK_SELECT_BY_FOSC = 0x4
       INTRC_ENABLED = 0x0
       }
pragma fuse_def FCMEN:2 0x40 {
       ENABLED = 0x40
       DISABLED = 0x0
       }
pragma fuse_def IESO:2 0x80 {
       ENABLED = 0x80
       DISABLED = 0x0
       }
--
-- addr 0x7FFB
--
pragma fuse_def WDTPS:3 0xF {
       P32768 = 0xF
       P16384 = 0xE
       P8192 = 0xD
       P4096 = 0xC
       P2048 = 0xB
       P1024 = 0xA
       P512 = 0x9
       P256 = 0x8
       P128 = 0x7
       P64 = 0x6
       P32 = 0x5
       P16 = 0x4
       P8 = 0x3
       P4 = 0x2
       P2 = 0x1
       P1 = 0x0
       }
pragma fuse_def FNOP_1:3 0xF0 {
       NOPD = 0xF0
       }
--
-- addr 0x7FFD
--
pragma fuse_def CCP2MX:5 0x1 {
       CCP2_I_O_MUXED_WITH_RC1 = 0x1
       CCP2_I_O_MUXED_WITH_RB3 = 0x0
       }
pragma fuse_def FNOP_2:5 0xF0 {
       NOPD = 0xF0
       }
--
