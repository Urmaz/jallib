-- Title: bit array library
-- Author: Matthew Schinkel - borntechi.com, copyright (c) 2009, all rights reserved.
-- Adapted-by:
-- Compiler: >=2.4m
--
-- This file is part of jallib (http://jallib.googlecode.com)
-- Released under the BSD license (http://www.opensource.org/licenses/bsd-license.php)
--
-- Description: This samples shows usage of the bit array library to
--              create a bit array with up to 16383 entries
--
-- Sources:
--
-- notes:
-- uses large_array_1 library when BIT_ARRAY_1_SIZE > 2047
--
-- const dword BIT_ARRAY_1_SIZE = 100   -- choose number of array variables
-- include bit_array_1                  -- include the array library
-- alias test is bit_array_1            -- rename/alias the array to test
--

-- include chip
include 18F4620                   -- target picmicro

-- This program assumes a 20 MHz resonator or crystal
-- is connected to pins OSC1 and OSC2.
pragma target clock 20_000_000     -- oscillator frequency
-- configuration memory settings (fuses)
pragma target OSC  HS              -- HS crystal or resonator
pragma target WDT  disabled        -- no watchdog
pragma target LVP  disabled        -- no Low Voltage Programming

enable_digital_io()                -- disable analog I/O (if any)

-- setup uart for communication
const serial_hw_baudrate  = 115200   -- set the baudrate
include serial_hardware
serial_hw_init()

const dword BIT_ARRAY_1_SIZE = 2003   -- choose number of array variables
include bit_array_1                    -- include the array library
alias test is bit_array_1              -- rename/alias the array to test

;example write bit
test[2000] = 1
test[2001] = 0
test[2002] = 1

;example read bit
var bit x,y,z
x = test[2000]
y = test[2001]
z = test[2002]

-- send these three bytes via serial port 10 times
for 10 loop
   serial_hw_data = x
   serial_hw_data = y
   serial_hw_data = z
end loop

-- show the array byte that contains these bits
-- location is 2000 / 8 = 250
-- non-valued bits will be unpredictable
-- in this sample, output will be byte XXXXX101
for 10 loop
   serial_hw_data = bit_array_1_byte_array[250]
end loop

