-- Title: Test program for serial_hardware.jal
-- Author: Matthew Schinkel - borntechi.com, copyright (c) 2011, all rights reserved.
-- Adapted-by:
-- Compiler: >=2.4o
--
-- This file is part of jallib  (http://jallib.googlecode.com)
-- Released under the BSD license (http://www.opensource.org/licenses/bsd-license.php)
--
-- Description: Test program for serial hardware lib
--
-- Sources:
-- Jallib serial hardware sample by Joep Suijs
--
-- Notes:
-- Main loop was written by Joep Suijs
--

include 18f67j50                    -- target PICmicro
-- include chip
pragma target clock 48_000_000     -- oscillator frequency
-- configuration memory settings (fuses)
pragma target WDT  disabled        -- no watchdog
pragma target PLLDIV        P2     -- divide by 2
pragma target CPUDIV        P1     -- no cpu system clock divide
pragma target OSC  INTOSC_NOCLKOUT_PLL -- internal resonator
pragma target IESO  DISABLED
pragma target FCMEN DISABLED
OSCTUNE_PLLEN = 1                  -- set 96mhz pll
OSCCON_SCS = 0b00
_usec_delay(1_000)                 -- wait for OSC PLL to settle
--
enable_digital_io()   -- disable all analog pins if any
_usec_delay (100_000) -- wait for power to stablilize


include delay

include print

-- setup uart for communication
const serial_hw_baudrate  = 115200   -- set the baudrate
include serial_hardware
serial_hw_init()
-- some aliases so it is easy to change from serial hw to serial sw.
alias serial_write is serial_hw_write
alias serial_read is serial_hw_read
alias serial_data is serial_hw_data
alias serial_data_available is serial_hw_data_available

const byte str1[] = "Hello serial world"   -- define a string
print_string(serial_hw_data, str1)  -- output string to serial

-- inform user PIC is ready !
serial_hw_write("!")

-- let's build our loop
var byte char	-- will store received char
var word counter = 10
forever loop

   -- if there is a char, echo it back.
	if (serial_hw_read(char))	then
		serial_hw_write(char)	-- that's the echo...
	end if

   -- code block below prints a dot, every now and then, to signal
   -- the pic is alive, waiting to receiver character from the host
	counter = counter - 1      ; count down
	if (counter == 0) then     ; until zero
	   counter = 50000         ; then start over counting from 50000
      serial_hw_data = "."	   ; and output a dot to the serial port
   end if
end loop