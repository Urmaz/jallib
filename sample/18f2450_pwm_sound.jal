-- Title: Test program for hardware (built-in) PWM. Plays sound
-- Author: Sebastien Lelong, Copyright (c) 2008, all rights reserved.
-- Adapted-by:
-- Compiler: >=2.4i
-- 
-- This file is part of jallib (http://jallib.googlecode.com)
-- Released under the BSD license (http://www.opensource.org/licenses/bsd-license.php)
--
-- Description: this sample show how to use PWM with a constant duty cycle and 
-- a variable frequency. It plays a "nice" melody (connect a small piezzo)
-- Frequencies from 0 to 100_000Hz are played. At the beginning, no sound will come
-- the buzzer, because frequency is too low (no valid combination of PR2/T2CON)
--
-- 
--
--
-- This file has been generated on 04/06/09 23:43:05, from:
--    * board: board_18f2450_af.jal
--    * test : test_pwm_sound.jal
--

;@jallib section chipdef
-- chip setup
include 18f2450

-- even though the external crystal is 20 MHz, the configuration is such that
-- the CPU clock is derived from the 96 Mhz PLL clock (div2), therefore set
-- target frequency to 48 MHz
pragma target clock       48_000_000


-- fuses
pragma target PLLDIV		DIVIDE_BY_5__20MHZ_INPUT_
pragma target CPUDIV		_OSC1_OSC2_SRC___1__96MHZ_PLL_SRC___2_
pragma target USBPLL		CLOCK_SRC_FROM_96MHZ_PLL_2
pragma target OSC			HS_PLL
pragma target FCMEN			DISABLED
pragma target IESO			DISABLED
pragma target PWRTE			DISABLED	-- power up timer
pragma target VREGEN		ENABLED		-- USB voltage regulator
pragma target VOLTAGE		V20			-- brown out voltage
pragma target BROWNOUT		DISABLED	-- no brownout detection
pragma target WDTPS			P32768		-- watch dog saler setting
pragma target WDT			DISABLED    -- no watchdog
pragma target PBADEN		DIGITAL		-- digital input port<0..4>
pragma target LPT1OSC		DISABLED	-- low power timer 1
-- pragma target MCLR			EXTERNAL	-- master reset on RE3
pragma target MCLR			INTERNAL	-- no master reset 
pragma target STVR			DISABLED    -- reset on stack over/under flow
pragma target LVP			DISABLED    -- no low-voltage programming
pragma target ENICPORT		DISABLED	-- In circuit debugger
pragma target XINST			ENABLED		-- extended instruction set
pragma target BACKBUG		DISABLED	-- background debugging
pragma target CP_0			DISABLED	-- code block 0 not protected
pragma target CP_1			DISABLED	-- code block 1 not protected
pragma target CPB			DISABLED	-- bootblock code not write protected
pragma target WRT_0			DISABLED	-- table writeblock 0 not protected
pragma target WRT_1			DISABLED	-- table write block 1 not protected
pragma target WRTB			DISABLED	-- bootblock not write protected
pragma target WRTC			DISABLED	-- config not write protected
pragma target EBTR_0		DISABLED	-- table read block 0 not protected
pragma target EBTR_1		DISABLED	-- table read block 1 not protected
pragma target EBTRB 		DISABLED	-- boot block not protected

;@jallib section ccp
-- ccp setup
var volatile bit pin_ccp1_direction is pin_c2_direction
enable_digital_io()

-- Configure PWM
pin_ccp1_direction = output
include pwm_hardware
-- Let's go !!!
pwm1_on()


var dword counter = 0
forever loop
   
   for 100_000 using counter loop
      pwm_set_frequency(counter)
      -- Setting @50% gives max volume
      -- must be re-computed each time the frequency
      -- changes, because it depends on PR2 value
      pwm1_set_percent_dutycycle(50)
   end loop
   
end loop

