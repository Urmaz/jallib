-- Title: Hard disk library for communicating with parallel ata hard drives
--        with a 40 pin ide connector.
-- Author: Matthew Schinkel - borntechi.com, copyright (c) 2009, all rights reserved.
-- Adapted-by:
-- Compiler: >=2.4k
--
-- This file is part of jallib (http://jallib.googlecode.com)
-- Released under the BSD license (http://www.opensource.org/licenses/bsd-license.php)
--
-- Description: this library provides example usage for pata/ide hard disk drives.
--              includes examples for : spin up / spin down drive
--                                    : read sectors
--                                    : identify drive
--                                    : write sectors
--
-- Sources:
-- "connecting ide drives by tilmann reh" - http://www.gaby.de/gide/IDE-TCJ.txt
-- IDE hardware reference & information document by alex t. ivopol
-- ATA Attachement with Packet Interface 6 - d1410r3-ATA-ATAPI-6.pdf
--

-- include chip
;include 16f877                    -- target picmicro
;include 16f877a                  -- target picmicro
include 18F452                   -- target picmicro

-- this program assumes a 20 mhz resonator or crystal
-- is connected to pins osc1 and osc2.
pragma target osc hs              -- hs crystal or resonator
pragma target clock 20_000_000    -- oscillator frequency
--
pragma target wdt  disabled
pragma target lvp  disabled
--

enable_digital_io() -- disable all analog pins if any

include delay       -- include the delay library

-- setup uart for communication
const serial_hw_baudrate  = 38400   -- set the baudrate
include serial_hardware
serial_hw_init()

-- setup hard disk library
CONST BYTE PATA_HD_USE_CS0_CS1_PINS = FALSE -- set true if you will use Alternate Status, Digital Output or Drive Address registers
const bit PATA_HD_NO_INVERTER = TRUE -- if true, an external inverter chip is not needed on /iowr, /iord, /cs0, /cs1 pins
-- pin assignments
alias     pata_hd_data_low              is portb   -- data port (low bits)
alias     pata_hd_data_low_direction    is portb_direction
alias     pata_hd_data_high             is portd   -- data port (high bits)
alias     pata_hd_data_high_direction   is portd_direction
alias     pata_hd_a0                    is pin_a0
alias     pata_hd_a0_direction          is pin_a0_direction
alias     pata_hd_a1                    is pin_a1
alias     pata_hd_a1_direction          is pin_a1_direction
alias     pata_hd_a2                    is pin_a2
alias     pata_hd_a2_direction          is pin_a2_direction
alias     pata_hd_iowr                  is pin_c2
alias     pata_hd_iowr_direction        is pin_c2_direction
alias     pata_hd_iord                  is pin_c1
alias     pata_hd_iord_direction        is pin_c1_direction
;alias     pata_hd_cs1                   is pin_a3
;alias     pata_hd_cs1_direction         is pin_a3_direction
;alias     pata_hd_cs0                   is pin_a4
;alias     pata_hd_cs0_direction         is pin_a4_direction

pata_hd_a0_direction = output    -- register select pin
pata_hd_a1_direction = output    -- register select pin
pata_hd_a2_direction = output    -- register select pin
pata_hd_iowr_direction = output  -- used for write pulse
pata_hd_iord_direction = output  -- used for read pulse
;pata_hd_cs1_direction = output   -- register select pin
;pata_hd_cs0_direction = output   -- register select pin

include pata_hard_disk           -- include the parallel ata ide hard disk library
pata_hd_init()                   -- initialize startup settings

-- Function for sending hard disk data via serial port, data is read 2 bytes at a time.
procedure send_word(byte in lowbit, byte in highbit) is
   serial_hw_write( lowbit )  -- send 1st serial data byte
   serial_hw_write( highbit ) -- send 2nd serial data byte
end procedure

-- Declare variables for this example.
var byte in_a
var byte in_b

-----main prog----

_usec_delay (1_000_000) -- wait for power to stabilize

-- send "start" to pc / test uart communication
send_word("S", "T")
send_word("A", "R")
send_word("T", 0x20)
send_word(13, 10)
send_word(13, 10)

-----------------

---------------
;-- read one full sector into sd_sector_buffer (512 byte array)
pata_hd_start_read(0)                      -- get sd card ready for read at sector 0
pata_hd_read_sector()
pata_hd_stop_read()                        -- tell sd card you are done reading

-- now send it to the pc
var word count1 = 0
for 512 loop                          -- read 1 sector (512 bytes)
  serial_hw_write (pata_hd_sector_buffer[count1])          -- send byte via serial port
  count1 = count1 + 1
end loop
---------------

forever loop
end loop
-- ----------------------------------------------------------------------------
-- Example spin up & spin down drive command
-- ----------------------------------------------------------------------------
for 2 loop
   pata_hd_register_write (PATA_HD_COMMAND_REG,PATA_HD_SPIN_UP)      -- turn on motor
   _usec_delay(5_000_000) -- 5 sec delay
   pata_hd_register_write (PATA_HD_COMMAND_REG,PATA_HD_SPIN_DOWN)    -- turn off motor
   _usec_delay(5_000_000) -- 5 sec delay
end loop

pata_hd_register_write(PATA_HD_COMMAND_REG,PATA_HD_SPIN_UP)          -- turn on motor

_usec_delay(10_000_000) -- wait 10 seconds before next example


-- ----------------------------------------------------------------------------
-- Example read sectors command
-- ----------------------------------------------------------------------------

pata_hd_start_read(0) -- get drive ready for reading at sector 0 (boot sector)

-- Read one sector
for 256 loop                            -- 256 words, 512 bytes per sector
   pata_hd_read_data (in_b, in_a)        -- read data
   send_word (in_b, in_a)                -- send data via serial port
end loop

-- You will see hard disk LED on during this delay
-- because you did not finnish reading.
_usec_delay(2_000_000) -- 2 second delay

-- Read 2nd sector.
for 256 loop                            -- 256 words, 512 bytes per sector
   pata_hd_read_data (in_b, in_a)        -- read data
   send_word     (in_b, in_a)            -- send data via serial port
end loop

pata_hd_stop_read()       -- tell drive you are done reading
-- hard disk led will turn off at this point.

_usec_delay(10_000_000) -- wait 10 seconds before next example

-- ----------------------------------------------------------------------------
-- Example identify drive command (Read drive information)
-- size of drive, make, model, serial number, etc.
-- ----------------------------------------------------------------------------

-- send the identify drive command
pata_hd_register_write(PATA_HD_COMMAND_REG,PATA_HD_IDENTIFY_DRIVE)

-- check if drive is ready reading and set data ports as inputs
-- this MUST be used before reading since we did not use pata_hd_start_read
pata_hd_data_request(PATA_HD_WAIT_READ)

-- Read 512 bytes
for 256 loop                            -- 256 words, 512 bytes per sector
   pata_hd_read_data(in_b, in_a)        -- read data
   send_word(in_a, in_b )           -- send data via serial port
end loop                                -- drive info high/low bytes are in reverse order


_usec_delay(10_000_000) -- wait 10 seconds before next example

-- ----------------------------------------------------------------------------
-- Example write sectors command
-- note: this will over write data currently on your drive
-- ----------------------------------------------------------------------------

pata_hd_start_write(200) -- tell hd to get ready for reading

-- now write 1 sector + most of 2nd sector, data will not be written unless 512 bytes are sent
for 256 + 250 loop
   pata_hd_write_data(0xCC, 0xDD) -- write data 0xCC, 0xDD over and over
end loop
-- first sector has been written to the disk since 512 bytes where sent,
-- but 2nd sector is not finnished, only 500 bytes sent,
-- so lets finnish the sector with 6 more write pulses (0xFF's as data)
pata_hd_write_to_sector_end(0xFF)

pata_hd_stop_write()     -- tell hd we are done writing

-- Now read the 1st sector you just wrote, should get 0xCC, 0xDD over and over
pata_hd_start_read(200)                 -- get drive ready for reading
for 256 + 250 loop                      -- read 512 bytes + 500 bytes
   pata_hd_read_data(in_b, in_a)        -- read data
   send_word(in_b, in_a)            -- send data via serial port
end loop

-- if you want, you can read back the last 6 bytes that are 0xFF
for 6 loop
   pata_hd_read_data (in_b, in_a)        -- read data
   send_word(in_b, in_a)            -- send data via serial port
end loop

pata_hd_stop_read()                     -- tell drive we are done reading

-- We're done, lets turn off the hd motor
pata_hd_register_write (PATA_HD_COMMAND_REG,PATA_HD_SPIN_DOWN)


