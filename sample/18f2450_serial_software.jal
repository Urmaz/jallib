-- ------------------------------------------------------
-- Title: Test program for serial_software.jal
--
-- Author: Joep Suijs, Copyright (c) 2008..2008, all rights reserved.
--
-- Adapted-by: 
--
-- Compiler: >=2.4g
--
-- This file is part of jallib  (http://jallib.googlecode.com)
-- Released under the BSD license (http://www.opensource.org/licenses/bsd-license.php)
--
-- Description: Test program for serial hardware lib
-- --
-- This file defines a test for JALLIB testing, using a test-board
--  defined by a BOARD file .
--
-- Sources:
--
-- Notes: 
--    setup: a serial connection to a terminal
--
-- ------------------------------------------------------
--
-- This file has been generated from:
--    * board: board_18f2450_af.jal
--    * test : test_serial_software.jal
--

;@jallib section chipdef
-- chip setup
include 18f2450

-- even though the external crystal is 20 MHz, the configuration is such that
-- the CPU clock is derived from the 96 Mhz PLL clock (div2), therefore set
-- target frequency to 48 MHz
pragma target clock       48_000_000


-- fuses
pragma target PLLDIV        P5          -- divide by 5 (20 MHz)
pragma target CPUDIV        P2          -- 96 MHz pll src / 2
pragma target USBPLL        F48MHZ      -- clock from 96 MHz / 2
pragma target OSC           HS_PLL      -- hs + pll, usb hs
pragma target FCMEN         DISABLED
pragma target IESO          DISABLED
pragma target PWRTE         DISABLED    -- power up timer
pragma target VREGEN        ENABLED     -- USB voltage regulator
pragma target VOLTAGE       V20         -- brown out voltage
pragma target BROWNOUT      DISABLED    -- no brownout detection
pragma target WDTPS         P32K        -- watch dog saler setting
pragma target WDT           DISABLED    -- no watchdog
pragma target PBADEN        DIGITAL     -- digital input port<0..4>
pragma target LPT1OSC       LOW_POWER   -- low power timer 1
pragma target MCLR          INTERNAL    -- no master reset
pragma target STVR          DISABLED    -- reset on stack over/under flow
pragma target LVP           DISABLED    -- no low-voltage programming
pragma target XINST         ENABLED     -- extended instruction set
pragma target DEBUG         DISABLED    -- background debugging
pragma target CP0           DISABLED    -- code block 0 not protected
pragma target CP1           DISABLED    -- code block 1 not protected
pragma target CPB           DISABLED    -- bootblock code not write protected
pragma target WRT0          DISABLED    -- table writeblock 0 not protected
pragma target WRT1          DISABLED    -- table write block 1 not protected
pragma target WRTB          DISABLED    -- bootblock not write protected
pragma target WRTC          DISABLED    -- config not write protected
pragma target EBTR0         DISABLED    -- table read block 0 not protected
pragma target EBTR1         DISABLED    -- table read block 1 not protected
pragma target EBTRB         DISABLED    -- boot block not protected

;@jallib section led
-- LED IO definition
alias led             is pin_b3
alias led_direction   is pin_b3_direction
alias led2            is pin_b1
alias led2_direction  is pin_b1_direction

include delay

-- set all IO as digital
enable_digital_io()

include delay
include format
include print

led_direction = output
pin_TX_direction = output
      
alias serial_sw_tx_pin is pin_TX
alias serial_sw_rx_pin is pin_RX 

const serial_sw_baudrate = 9600

const serial_sw_invert = true
-- now we can use serial_software module
include serial_software
-- initialize the whole with our parameters
serial_sw_init()

var byte x

forever loop
;   delay_100ms( 1 )
   led = true
   delay_100ms( 1 )
   led = false

   serial_sw_read(x)
   serial_sw_write(x + 1)
     
   -- output the string, the pseudo var is the first param. 
   const byte str1[] = " - Test print.jal- bytes\r\n"   -- define a string
   print_string(serial_sw_data, str1)                 -- output string

end loop
