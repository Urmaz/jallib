-- Title: Test program for 1 PWM channel, using a LED 
-- Author: Sebastien Lelong, Copyright (c) 2008-2009, all rights reserved.
-- Adapted-by:
-- Compiler: >=2.4i
-- 
-- This file is part of jallib (http://jallib.googlecode.com)
-- Released under the BSD license (http://www.opensource.org/licenses/bsd-license.php)
--
-- Description: this sample show how to use PWM in low resolution mode.
-- It progressively light up and down a LED. Sweet...
--
-- 
--
--
-- This file has been generated from:
--    * board: board_18f14k50_af.jal
--    * test : test_pwm_led.jal
--

;@jallib section chipdef
-- chip setup
include 18f14k50

-- This file is the setup for my homebrew, 18f14k50 board
-- Currently it is a bare board, with just a PIC and a couple of headers
-- A 12 MHz external crystal and 15pf caps connected to OSC1/2
-- pin 17 (Vusb) with a 220 nF capacitor to the ground
-- The connection between PC and the 18F14k50
-- +5v to power the board (don't forget 100nf decoupling cap
-- data- wire to pin 18 (D-)
-- data+ wire to pin 19 (D+)
-- ground wire to the Vss of the PIC
-- even though the external crystal is 12 MHz, the configuration is such that
-- the CPU clock is derived from the 96 Mhz PLL clock (div2), therefore set
-- target frequency to 48 MHz
pragma target clock       48_000_000

-- fuses
pragma target CPUDIV			NO_CPU_SYSTEM_CLOCK_DIVIDE
pragma target USBDIV			USB_CLOCK_COMES_DIRECTLY_FROM_THE_OSC1_OSC2_OSCILLATOR_BLOCK__NO_DIVIDE
pragma target OSC				HS
pragma target PLLEN			OSCILLATOR_MULTIPLIED_BY_4
pragma target FCMEN			DISABLED
pragma target IESO			DISABLED
pragma target PWRTE			DISABLED		-- power up timer
pragma target BROWNOUT		DISABLED		-- no brownout detection
pragma target VOLTAGE		V30			-- brown out voltage
pragma target WDT				DISABLED    -- no watchdog
pragma target WDTPS			P32768		-- watch dog saler setting
pragma target MCLR			EXTERNAL		-- external reset
pragma target LVP				DISABLED    -- no low-voltage programming
pragma target XINST			ENABLED		-- extended instruction set
pragma target BACKBUG		DISABLED		-- background debugging
pragma target CP_0			DISABLED		-- code block 0 not protected
pragma target CP_1			DISABLED		-- code block 1 not protected
pragma target CPB				DISABLED		-- bootblock code not write protected
pragma target WRT_0			DISABLED		-- table writeblock 0 not protected
pragma target WRT_1			DISABLED		-- table write block 1 not protected
pragma target WRTB			DISABLED		-- bootblock not write protected
pragma target WRTC			DISABLED		-- config not write protected
pragma target EBTR_0			DISABLED		-- table read block 0 not protected
pragma target EBTR_1			DISABLED		-- table read block 1 not protected
pragma target EBTRB 			DISABLED		-- boot block not protected    
pragma target HFOFST 		THE_SYSTEM_CLOCK_IS_HELD_OFF_UNTIL_THE_HFINTOSC_IS_STABLE

;@jallib section ccp
-- no specific settins yet, section required though to generate samples

enable_digital_io()

-- Configure PWM
pin_ccp1_direction = output
include pwm_hardware
pwm_max_resolution(1)
pwm1_on()

forever loop
   var byte i
   i = 0
   -- loop up and down, to produce different duty cycle
   while i < 250 loop
      pwm1_set_dutycycle(i)
      _usec_delay(10000)
      i = i + 1
   end loop
   while i > 0 loop
      pwm1_set_dutycycle(i)
      _usec_delay(10000)
      i = i - 1
   end loop
   -- turning off, the LED lights at max.
   _usec_delay(500000)
   pwm1_off()
   _usec_delay(500000)
   pwm1_on()
   
end loop
