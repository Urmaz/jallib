-- ------------------------------------------------------
-- Title: Test 7-segment module with MAX7219 chip
--
-- Author: Rob Hamerling, Copyright (c) 2014..2014, all rights reserved.
--
-- Adapted-by:
--
-- Revision: $Revision$
--
-- Compiler: 2.4q2
--
-- This file is part of jallib  (http://jallib.googlecode.com)
-- Released under the BSD license (http://www.opensource.org/licenses/bsd-license.php)
--
-- Description:
-- Simple program to test the max7219 library.
-- Most procedures and functions are called at least once,
-- with different arguments to show the capabilities of
-- a ready-built PCB with 8x8 led matrix display
--
-- Sources:
--
-- Notes:
--
-- ------------------------------------------------------
--
-- This file has been generated by jallib.py from:
--    * board: board_18f2450_af.jal
--    * test : test_max7219.jal
--

;@jallib section chipdef
-- chip setup
include 18f2450

-- even though the external crystal is 20 MHz, the configuration is such that
-- the CPU clock is derived from the 96 Mhz PLL clock (div2), therefore set
-- target frequency to 48 MHz since pragma target CPUDIV is P1
pragma target clock       48_000_000


-- fuses
pragma target PLLDIV        P5          -- divide by 5 (20 MHz)
pragma target CPUDIV        P1          -- [primary oscillator src: /1][96 mhz pll src: /2]
pragma target USBDIV        P2          -- CLOCK_SRC_FROM_96MHZ_PLL_2
pragma target OSC           HS_PLL      -- hs + pll, usb hs
pragma target FCMEN         DISABLED
pragma target IESO          DISABLED
pragma target PWRTE         DISABLED    -- power up timer
pragma target VREGEN        ENABLED     -- USB voltage regulator
pragma target VOLTAGE       V20         -- brown out voltage
pragma target BROWNOUT      DISABLED    -- no brownout detection
pragma target WDTPS         P32K        -- watch dog saler setting
pragma target WDT           CONTROL     -- no watchdog
pragma target PBADEN        DIGITAL     -- digital input port<0..4>
pragma target LPT1OSC       LOW_POWER   -- low power timer 1
pragma target MCLR          INTERNAL    -- no master reset
pragma target STVR          DISABLED    -- reset on stack over/under flow
pragma target LVP           DISABLED    -- no low-voltage programming
pragma target XINST         ENABLED     -- extended instruction set
pragma target DEBUG         DISABLED    -- background debugging
pragma target CP0           DISABLED    -- code block 0 not protected
pragma target CP1           DISABLED    -- code block 1 not protected
pragma target CPB           DISABLED    -- bootblock code not write protected
pragma target WRT0          DISABLED    -- table writeblock 0 not protected
pragma target WRT1          DISABLED    -- table write block 1 not protected
pragma target WRTB          DISABLED    -- bootblock not write protected
pragma target WRTC          DISABLED    -- config not write protected
pragma target EBTR0         DISABLED    -- table read block 0 not protected
pragma target EBTR1         DISABLED    -- table read block 1 not protected
pragma target EBTRB         DISABLED    -- boot block not protected


include delay                       -- library with delay procedures

-- setup MAX7219
alias max7219_din  is pin_A0
alias max7219_clk  is pin_A1
alias max7219_cs   is pin_A2

pin_A0_direction = OUTPUT
pin_A1_direction = OUTPUT
pin_A2_direction = OUTPUT
--
const bit MAX7219_DISPLAY_CACHE = TRUE   -- use cache
--
include max7219                      -- library for the TM1638
max7219_init()                       -- initalize the TM1638
--

var byte i

max7219_display_intensity(MAX7219_DISPLAY_PWM3)

forever loop

   for 8 using i loop
      max7219_display_col(i, TRUE)        -- column
      delay_100ms(3)
      max7219_display_col(i, FALSE)
   end loop

   for 8 using i loop
      max7219_display_row(i, TRUE)        -- row
      delay_100ms(3)
      max7219_display_row(i, FALSE)
   end loop

   for 8 using i loop                     -- diagonal 1
      max7219_display_bit(i, i, TRUE)
      delay_100ms(1)
   end loop
   for 8 using i loop                     -- diagonal 2
      max7219_display_bit(i, 7 - i, TRUE)
      delay_100ms(1)
   end loop

   max7219_display_blink(3,3)             -- blinking cross

   for 16 using i loop                    -- intensity range
      max7219_display_intensity(i)
      delay_100ms(1)
   end loop

   max7219_display_clear()
   max7219_display_intensity(MAX7219_DISPLAY_PWM3)

   for 8 using i loop                     -- triangle
      max7219_display_byte_bin(i, (2 << i) - 1)
      delay_100ms(3)
   end loop

   max7219_display_clear()

end loop

