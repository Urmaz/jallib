-- ------------------------------------------------------
-- Title: Test program for serial_software.jal
--
-- Author: Joep Suijs, Copyright (c) 2008..2008, all rights reserved.
--
-- Adapted-by: 
--
-- Compiler: >=2.4g
--
-- This file is part of jallib  (http://jallib.googlecode.com)
-- Released under the BSD license (http://www.opensource.org/licenses/bsd-license.php)
--
-- Description: Test program for serial hardware lib
-- --
-- This file defines a test for JALLIB testing, using a test-board
--  defined by a BOARD file .
--
-- Sources:
--
-- Notes: 
--    setup: a serial connection to a terminal
--
-- ------------------------------------------------------
--
-- This file has been generated from:
--    * board: board_16f648a_js.jal
--    * test : test_serial_software.jal
--

;@jallib section chipdef
-- chip setup
include 16f648a

--
-- This program assumes a 20 MHz resonator or crystal
-- is connected to pins OSC1 and OSC2.
pragma target OSC HS               -- HS crystal or resonator
pragma target clock 20_000_000     -- oscillator frequency
pragma target WDT  disabled
pragma target LVP  disabled

;@jallib section led
-- LED IO definition
alias led             is pin_b3
alias led_direction   is pin_b3_direction
alias led2            is pin_b1
alias led2_direction  is pin_b1_direction

include delay

-- set all IO as digital
enable_digital_io()

include delay
include format
include print

led_direction = output
pin_TX_direction = output
      
alias serial_sw_tx_pin is pin_TX
alias serial_sw_rx_pin is pin_RX 

const serial_sw_baudrate = 9600

const serial_sw_invert = true
-- now we can use serial_software module
include serial_software
-- initialize the whole with our parameters
serial_sw_init()

var byte x

forever loop
;   delay_100ms( 1 )
   led = true
   delay_100ms( 1 )
   led = false

   serial_sw_read(x)
   serial_sw_write(x + 1)
     
   -- output the string, the pseudo var is the first param. 
   const byte str1[] = " - Test print.jal- bytes\r\n"   -- define a string
   print_string(serial_sw_data, str1)                 -- output string

end loop
