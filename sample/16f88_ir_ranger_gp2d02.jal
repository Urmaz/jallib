-- Title: Test program for GP2D02 IR ranger
-- Author: Sebastien Lelong, Copyright (c) 2008-2009, all rights reserved.
-- Adapted-by:
-- Compiler: >=2.4j
-- 
-- This file is part of jallib (http://jallib.googlecode.com)
-- Released under the BSD license (http://www.opensource.org/licenses/bsd-license.php)
--
-- Description: this sample show how to use GP2D02 IR ranger library
-- It regularly gets distance measures, and print them back to serial.
-- It also uses a LED to "show" the distance:
--   - when the distance is low (object is closed from the ranger), 
--     the LED will blink very fast
--   - when the distance is high (object is far way from the ranger),
--     the LED will blink very slow
--   - when the distance is to high (nothing detected), the LED is on, no
--     blinking
-- --
-- 
--
--
-- This file has been generated on Mon Mar 16 18:41:14 2009, from:
--    * board: board_16f88_sl.jal
--    * test : test_ir_ranger_gp2d02.jal
--


;@jallib section chipdef
-- chip setup
include 16f88

;-- 
-- We'll use internal oscillator. It work @ 8MHz
pragma target clock		8_000_000
pragma target OSC		INTOSC_NOCLKOUT
-- Specify no postscaler, ie. really runs @8MHz
OSCCON_IRCF = 0b_111
pragma target WDT		   disabled       -- no watchdog
pragma target LVP		   disabled       -- no low-voltage programming
pragma target CCP1MUX	   RB0            -- ccp1 pin on B0
pragma        bootloader   long_start     -- for TinyBootloader

enable_digital_io()
;@jallib section led
-- LED IO definition
var bit led             is pin_b3
var bit led_direction   is pin_b3_direction
var bit led2            is pin_b1
var bit led2_direction  is pin_b1_direction

include delay
;@jallib section serial
const serial_hw_baudrate = 57_600
include serial_hardware
serial_hw_init()

;@jallib section gp2d02
var volatile bit gp2d02_vin is pin_a4
var volatile bit gp2d02_vout is pin_a6
var bit gp2d02_vin_direction is pin_a4_direction
var bit gp2d02_vout_direction is pin_a6_direction
include ir_ranger_gp2d02
-- set pin direction (careful: "vin" is the GP2D02 pin's name,
-- and is an output, not an input...)
gp2d02_vin_direction = output
gp2d02_vout_direction = input
-- now register these pins as ranger num. 0
gp2d02_register(0,gp2d02_vin,gp2d02_vout)


-- Flash a litlle to show we're alive !
led_direction = output
for 4 loop
   LED = on
   delay_100ms(3)
   LED = off
   delay_100ms(3)
end loop

var byte measure1
var byte measure2
var byte mean
var word tmp
forever loop

   -- read distance from ranger num. 0
   measure1 = gp2d02_read(0)
   -- you can also pass a couple of (pin_vin,pin_vout)
   -- to save stack and code space
   measure2 = gp2d02_read_pins(gp2d02_vin,gp2d02_vout)
   -- results via serial
   serial_hw_write(measure1)
   serial_hw_write(measure2)
   -- compute the mean
   tmp = (measure1 + measure2) / 2
   -- cast to byte (can't be more than byte, since
   -- it's a mean...)
   mean = byte(tmp)
   serial_hw_write(measure2)

   -- now blink more or less
   for 10 loop
	  LED = on
	  delay_1ms(mean)
	  LED = off
	  delay_1ms(mean)
   end loop
   
end loop

