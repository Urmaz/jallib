-- ------------------------------------------------------
-- Title: Test program for sqrt.jal
--
-- Author: Joep Suijs, Copyright (c) 2008..2011, all rights reserved.
--
-- Adapted-by: 
--
-- Compiler: >=2.4m
-- Revision: $Revision$
--
-- This file is part of jallib  (http://jallib.googlecode.com)
-- Released under the ZLIB license (http://www.opensource.org/licenses/zlib-license.html)
--
-- Description: Test program
--
-- Sources:
--
-- Notes: as output, this sample produces characters on a serial link. First 
--        run serial tests to make sure serial comms works okay.
--
-- ------------------------------------------------------
--
-- This file has been generated from:
--    * board: board_18f14k50_af.jal
--    * test : test_sqrt.jal
--

;@jallib section chipdef
-- chip setup
include 18f14k50

-- This file is the setup for my homebrew, 18f14k50 board
-- Currently it is a bare board, with just a PIC and a couple of headers
-- A 12 MHz external crystal and 15pf caps connected to OSC1/2
-- pin 17 (Vusb) with a 220 nF capacitor to the ground
-- The connection between PC and the 18F14k50
-- +5v to power the board (don't forget 100nf decoupling cap
-- data- wire to pin 18 (D-)
-- data+ wire to pin 19 (D+)
-- ground wire to the Vss of the PIC
-- even though the external crystal is 12 MHz, the configuration is such that
-- the CPU clock is derived from the 96 Mhz PLL clock (div2), therefore set
-- target frequency to 48 MHz
pragma target clock       48_000_000

-- fuses
pragma target CPUDIV        P1              -- NO_CPU_SYSTEM_CLOCK_DIVIDE
pragma target USBDIV        P1              -- USB_CLOCK_COMES_DIRECTLY_FROM_THE_OSC1_OSC2_OSCILLATOR_BLOCK_NO_DIVIDE
pragma target OSC           HS
pragma target PLLEN         P4              -- OSCILLATOR_MULTIPLIED_BY_4
pragma target FCMEN         DISABLED
pragma target IESO          DISABLED
pragma target PWRTE         DISABLED        -- power up timer
pragma target BROWNOUT      DISABLED        -- no brownout detection
pragma target VOLTAGE       V30             -- brown out voltage
pragma target WDT           DISABLED        -- no watchdog
pragma target WDTPS         P32K            -- watch dog saler setting
pragma target MCLR          EXTERNAL        -- external reset
pragma target LVP           DISABLED        -- no low-voltage programming
pragma target XINST         ENABLED         -- extended instruction set
pragma target DEBUG         DISABLED        -- background debugging
pragma target CP0           DISABLED        -- code block 0 not protected
pragma target CP1           DISABLED        -- code block 1 not protected
pragma target CPB           DISABLED        -- bootblock code not write protected
pragma target WRT0          DISABLED        -- table writeblock 0 not protected
pragma target WRT1          DISABLED        -- table write block 1 not protected
pragma target WRTB          DISABLED        -- bootblock not write protected
pragma target WRTC          DISABLED        -- config not write protected
pragma target EBTR0         DISABLED        -- table read block 0 not protected
pragma target EBTR1         DISABLED        -- table read block 1 not protected
pragma target EBTRB         DISABLED        -- boot block not protected
pragma target HFOFST        ENABLED         -- THE_SYSTEM_CLOCK_IS_HELD_OFF_UNTIL_THE_HFINTOSC_IS_STABLE

;@jallib section led
-- LED IO definition
alias led             is pin_c4
alias led_direction   is pin_c4_direction
alias led2            is pin_c6
alias led2_direction  is pin_c6_direction

include delay
include print

-- set all IO as digital
enable_digital_io()

-- setup serial (see echo.jal for more details);@jallib section serial
const serial_hw_baudrate = 115_200

include serial_hardware
serial_hw_init()
include profiler

include math

led_direction = output

var word r
 
forever loop
   delay_100ms( 5 )
   LED = high
   delay_100ms( 5 )
   LED = low
  
   -- serial_hw_data is a pseudo-var of the desired output-device. 
   serial_hw_data = "A" -- output an A to the serial port.

   profiler_setup(0)

   profiler_start()
   r = sqrt32(65535*65533)
   profiler_stop_and_report(serial_hw_data)   

   print_word_dec(serial_hw_data, r)
   
end loop
