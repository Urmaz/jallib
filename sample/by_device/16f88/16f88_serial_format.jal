-- ------------------------------------------------------
-- Title: Test program for format.jal
-- Author: Joep Suijs, Copyright (c) 2008..2008, all rights reserved.
-- Adapted-by: 
-- Compiler: >=2.4g
--
-- This file is part of jallib  (http://jallib.googlecode.com)
-- Released under the BSD license (http://www.opensource.org/licenses/bsd-license.php)
--
-- Description: Test program
--
-- Sources:
--
-- Notes: as output, this sample produces characters on a serial link. First 
--        run serial tests to make sure serial comms works okay.
--
-- --------------------------------------------------------
-- This file has been generated on 01/02/09 10:34:54, from:
--    * board: board_16f88_sl.jal
--    * test : test_serial_format.jal
--
;@jallib section chipdef
-- chip setup
include 16f88

;-- 
-- We'll use internal oscillator. It work @ 8MHz
pragma target clock		8_000_000
pragma target OSC		INTOSC_NOCLKOUT
-- Specify no postscaler, ie. really runs @8MHz
OSCCON_IRCF = 0b_111
pragma target WDT       disabled       -- no watchdog
pragma target LVP       disabled       -- no low-voltage programming
pragma target CCP1MUX   RB3            -- ccp1 pin on B3
;@jallib section led
-- LED IO definition
var bit led             is pin_b3
var bit led_direction   is pin_b3_direction
var bit led2            is pin_b1
var bit led2_direction  is pin_b1_direction
include delay

-- set all IO as digital
enable_digital_io()

-- ok, now setup serial
const usart_hw_serial = true	-- true = RS232, false = SPI;@jallib section serial
const serial_hw_baudrate = 57_600
include serial_hardware
serial_hw_init()

include format

procedure plingcrlf() is
   serial_hw_data = "!"
   serial_hw_data = 13
   serial_hw_data = 10
end procedure

procedure line() is 
   for 20 loop   
      serial_hw_data = "-"
   end loop
   serial_hw_data = 13
   serial_hw_data = 10
end procedure

forever loop                                  -- loop forever

   serial_hw_data = "T"    serial_hw_data = "e"    serial_hw_data = "s"    serial_hw_data = "t"    serial_hw_data = ":"    serial_hw_data = " "
   plingcrlf()
   line() -- --------------------------------------------------------------------

   -- hex byte output
   format_byte_hex(serial_hw_data, 0xEA) 
   plingcrlf()

   -- hex word output
   format_word_hex(serial_hw_data, 0xFD22) -- VIC20 reset vector ;-)
   plingcrlf()

   -- hex word output
   format_dword_hex(serial_hw_data, 0x12345678)
   plingcrlf()
   line() -- --------------------------------------------------------------------

   -- decimal output ' 1.2'
   format_byte_dec(serial_hw_data, 12, 3, 1) 
   plingcrlf()

   -- decimal output '0.12'
   format_byte_dec(serial_hw_data, 12, 3, 2) 
   plingcrlf()

   -- decimal output ' 12'
   format_byte_dec(serial_hw_data, 12, 3, 0) 
   plingcrlf()

   -- decimal output '12.0'
   format_byte_dec(serial_hw_data, 120, 3, 1) 
   plingcrlf()
   line() -- --------------------------------------------------------------------

   -- decimal output '-12'
   format_sbyte_dec(serial_hw_data, -12, 4, 0) 
   plingcrlf()

   -- decimal output '-1.2'
   format_sbyte_dec(serial_hw_data, -12, 4, 1) 
   plingcrlf()

   -- decimal output '-0.12'
   format_sbyte_dec(serial_hw_data, -12, 4, 2) 
   plingcrlf()

   -- decimal output '-12'
   format_sbyte_dec(serial_hw_data,  12, 4, 0) 
   plingcrlf()

   -- decimal output '-1.2'
   format_sbyte_dec(serial_hw_data,  12, 4, 1) 
   plingcrlf()

   -- decimal output '-0.12'
   format_sbyte_dec(serial_hw_data,  12, 4, 2) 
   plingcrlf()
   line() -- --------------------------------------------------------------------

   -- decimal output '-12'
   format_sbyte_dec(serial_hw_data, -123, 3, 0) 
   plingcrlf()

   -- decimal output '-1.2'
   format_sbyte_dec(serial_hw_data, -123, 3, 1) 
   plingcrlf()

   -- decimal output '-0.12'
   format_sbyte_dec(serial_hw_data, -123, 3, 2) 
   plingcrlf()

   -- decimal output '-12'
   format_sbyte_dec(serial_hw_data,  113, 3, 0) 
   plingcrlf()

   -- decimal output '-1.2'
   format_sbyte_dec(serial_hw_data,  113, 3, 1) 
   plingcrlf()

   -- decimal output '-0.12'
   format_sword_dec(serial_hw_data,  765, 3, 2) 
   plingcrlf()
   line() -- --------------------------------------------------------------------

   -- decimal output ' 0.012'
   format_word_dec(serial_hw_data, 12, 6, 3) 
   plingcrlf()

   -- decimal output '   1.2'
   format_word_dec(serial_hw_data, 12, 6, 1) 
   plingcrlf()

   -- decimal output '   12'
   format_word_dec(serial_hw_data, 12, 6, 0) 
   plingcrlf()

   -- decimal output ' -0.012'
   format_sword_dec(serial_hw_data, -12, 6, 3) 
   plingcrlf()

   -- decimal output '23:55'
   format_time_hm(serial_hw_data, 23, 55)  -- 5 minutes to midnight
   plingcrlf()

   -- decimal output '23:56'
   format_time_hm_word(serial_hw_data, 23 * 60 + 56)  -- 4 minutes to midnight
   plingcrlf()

   serial_hw_data = "E"    serial_hw_data = "n"    serial_hw_data = "d"
   plingcrlf()
   plingcrlf()

   delay_100ms(30)

end loop
