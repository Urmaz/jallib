-- Title: sound a piezo beeper
-- Author: Eur van Andel, eur@fiwihex.nl Copyright (c) 2008..2014, all rights reserved.
-- Adapted by: Rob Hamerling, Joep Suijs
-- Compiler: 2.4q2
-- Revision: $Revision$
--
-- This file is part of jallib  (http://jallib.googlecode.com)
-- Released under the BSD license (http://www.opensource.org/licenses/bsd-license.php)
--
-- Description:
-- sample file for beeping routines in beep.jal
--
--
-- This file has been generated by jallib.py from:
--    * board: board_18f67j50_ms.jal
--    * test : test_beep.jal
--

;@jallib section chipdef
-- chip setup
include 18f67j50                   -- target PICmicro
--
-- Compiler directives
pragma target CLOCK    48_000_000  -- CPU frequency
--
-- Configuration memory settings (fuses)
pragma target OSC      INTOSC_NOCLKOUT_PLL      -- internal oscillator
                                                -- and using PLL
pragma target PLLDIV   P2          -- reduce OSC 20->4 MHz for PLL input
pragma target CPUDIV   P1          -- CPU freq. from PLL(96/2): 48 MHz
pragma target FCMEN    DISABLED    -- no fail-safeclock monitoring
pragma target IESO     DISABLED    -- no in/ext oscillator switchover
pragma target WDT      CONTROL     -- no watchdog
pragma target XINST    DISABLED    -- not supported by JalV2
pragma target DEBUG    DISABLED    -- no debugging
--
-- Note: Not specified:
--       Code protection, Boot Block Code protection, Data EEPROM protection,
--       Write protection, Configuration Memory write protection,
--       Table Read protection, Boot Block Table Read protection,
--       and maybe some other configuration bits.
--
OSCCON_SCS = 0b00                  -- select primary clock source
OSCTUNE_PLLEN = enabled            -- activate PLL module
--
WDTCON_SWDTEN = OFF                 -- disable WDT
--


WDTCON_SWDTEN = OFF                 -- no watchdog

enable_digital_io()                -- make all pins digital I/O

var bit beep1 is pin_c4          -- piezo buzzer, driven by square wave
pin_c4_direction = output
var bit beep2 is pin_c5
pin_c5_direction = output

include beep

forever loop

   beep_500hz()
   beep_1khz()
   beep_2khz()
   beep_4khz()

end loop
