-- ------------------------------------------------------
-- Title: Test program for format.jal
-- Author: Joep Suijs, Copyright (c) 2008..2008, all rights reserved.
-- Adapted-by: 
-- Compiler: >=2.4g
--
-- This file is part of jallib  (http://jallib.googlecode.com)
-- Released under the BSD license (http://www.opensource.org/licenses/bsd-license.php)
--
-- Description: Test program
--
-- Sources:
--
-- Notes: as output, this sample produces characters on a serial link. First 
--        run serial tests to make sure serial comms works okay.
--
-- ------------------------------------------------------
--
-- This file has been generated from:
--    * board: board_18f14k50_af.jal
--    * test : test_serial_format.jal
--

;@jallib section chipdef
-- chip setup
include 18f14k50

-- This file is the setup for my homebrew, 18f14k50 board
-- Currently it is a bare board, with just a PIC and a couple of headers
-- A 12 MHz external crystal and 15pf caps connected to OSC1/2
-- pin 17 (Vusb) with a 220 nF capacitor to the ground
-- The connection between PC and the 18F14k50
-- +5v to power the board (don't forget 100nf decoupling cap
-- data- wire to pin 18 (D-)
-- data+ wire to pin 19 (D+)
-- ground wire to the Vss of the PIC
-- even though the external crystal is 12 MHz, the configuration is such that
-- the CPU clock is derived from the 96 Mhz PLL clock (div2), therefore set
-- target frequency to 48 MHz
pragma target clock       48_000_000


-- fuses
pragma target CPUDIV		NO_CPU_SYSTEM_CLOCK_DIVIDE
pragma target USBDIV		USB_CLOCK_COMES_DIRECTLY_FROM_THE_OSC1_OSC2_OSCILLATOR_BLOCK__NO_DIVIDE
pragma target OSC				HS
pragma target PLLEN			OSCILLATOR_MULTIPLIED_BY_4
pragma target FCMEN			DISABLED
pragma target IESO			DISABLED
pragma target PWRTE			DISABLED	-- power up timer
pragma target BROWNOUT	DISABLED	-- no brownout detection
pragma target VOLTAGE		V30			-- brown out voltage
pragma target WDT				DISABLED    -- no watchdog
pragma target WDTPS			P32768		-- watch dog saler setting
pragma target MCLR			INTERNAL	-- no master reset
pragma target LVP				DISABLED    -- no low-voltage programming
pragma target XINST			ENABLED		-- extended instruction set
pragma target BACKBUG		DISABLED	-- background debugging
pragma target CP_0			DISABLED	-- code block 0 not protected
pragma target CP_1			DISABLED	-- code block 1 not protected
pragma target CPB				DISABLED	-- bootblock code not write protected
pragma target WRT_0			DISABLED	-- table writeblock 0 not protected
pragma target WRT_1			DISABLED	-- table write block 1 not protected
pragma target WRTB			DISABLED	-- bootblock not write protected
pragma target WRTC			DISABLED	-- config not write protected
pragma target EBTR_0		DISABLED	-- table read block 0 not protected
pragma target EBTR_1		DISABLED	-- table read block 1 not protected
pragma target EBTRB 		DISABLED	-- boot block not protected    
pragma target HFOFST 	THE_SYSTEM_CLOCK_IS_HELD_OFF_UNTIL_THE_HFINTOSC_IS_STABLE

;@jallib section led
-- LED IO definition
var bit led             is pin_c4
var bit led_direction   is pin_c4_direction
var bit led2            is pin_c6
var bit led2_direction  is pin_c6_direction
include delay

-- set all IO as digital
enable_digital_io()

-- ok, now setup serial
const usart_hw_serial = true	-- true = RS232, false = SPI;@jallib section serial
const serial_hw_baudrate = 115_200

include serial_hardware
serial_hw_init()

include format

procedure plingcrlf() is
   serial_hw_data = "!"
   serial_hw_data = 13
   serial_hw_data = 10
end procedure

procedure line() is 
   for 20 loop   
      serial_hw_data = "-"
   end loop
   serial_hw_data = 13
   serial_hw_data = 10
end procedure

forever loop                                  -- loop forever

   serial_hw_data = "T"    serial_hw_data = "e"    serial_hw_data = "s"    serial_hw_data = "t"    serial_hw_data = ":"    serial_hw_data = " "
   plingcrlf()
   line() -- --------------------------------------------------------------------

   -- hex byte output
   format_byte_hex(serial_hw_data, 0xEA) 
   plingcrlf()

   -- hex word output
   format_word_hex(serial_hw_data, 0xFD22) -- VIC20 reset vector ;-)
   plingcrlf()

   -- hex word output
   format_dword_hex(serial_hw_data, 0x12345678)
   plingcrlf()
   line() -- --------------------------------------------------------------------

   -- decimal output ' 1.2'
   format_byte_dec(serial_hw_data, 12, 3, 1) 
   plingcrlf()

   -- decimal output '0.12'
   format_byte_dec(serial_hw_data, 12, 3, 2) 
   plingcrlf()

   -- decimal output ' 12'
   format_byte_dec(serial_hw_data, 12, 3, 0) 
   plingcrlf()

   -- decimal output '12.0'
   format_byte_dec(serial_hw_data, 120, 3, 1) 
   plingcrlf()
   line() -- --------------------------------------------------------------------

   -- decimal output '-12'
   format_sbyte_dec(serial_hw_data, -12, 4, 0) 
   plingcrlf()

   -- decimal output '-1.2'
   format_sbyte_dec(serial_hw_data, -12, 4, 1) 
   plingcrlf()

   -- decimal output '-0.12'
   format_sbyte_dec(serial_hw_data, -12, 4, 2) 
   plingcrlf()

   -- decimal output '-12'
   format_sbyte_dec(serial_hw_data,  12, 4, 0) 
   plingcrlf()

   -- decimal output '-1.2'
   format_sbyte_dec(serial_hw_data,  12, 4, 1) 
   plingcrlf()

   -- decimal output '-0.12'
   format_sbyte_dec(serial_hw_data,  12, 4, 2) 
   plingcrlf()
   line() -- --------------------------------------------------------------------

   -- decimal output '-12'
   format_sbyte_dec(serial_hw_data, -123, 3, 0) 
   plingcrlf()

   -- decimal output '-1.2'
   format_sbyte_dec(serial_hw_data, -123, 3, 1) 
   plingcrlf()

   -- decimal output '-0.12'
   format_sbyte_dec(serial_hw_data, -123, 3, 2) 
   plingcrlf()

   -- decimal output '-12'
   format_sbyte_dec(serial_hw_data,  113, 3, 0) 
   plingcrlf()

   -- decimal output '-1.2'
   format_sbyte_dec(serial_hw_data,  113, 3, 1) 
   plingcrlf()

   -- decimal output '-0.12'
   format_sword_dec(serial_hw_data,  765, 3, 2) 
   plingcrlf()
   line() -- --------------------------------------------------------------------

   -- decimal output ' 0.012'
   format_word_dec(serial_hw_data, 12, 6, 3) 
   plingcrlf()

   -- decimal output '   1.2'
   format_word_dec(serial_hw_data, 12, 6, 1) 
   plingcrlf()

   -- decimal output '   12'
   format_word_dec(serial_hw_data, 12, 6, 0) 
   plingcrlf()

   -- decimal output ' -0.012'
   format_sword_dec(serial_hw_data, -12, 6, 3) 
   plingcrlf()

   -- decimal output '23:55'
   format_time_hm(serial_hw_data, 23, 55)  -- 5 minutes to midnight
   plingcrlf()

   -- decimal output '23:56'
   format_time_hm_word(serial_hw_data, 23 * 60 + 56)  -- 4 minutes to midnight
   plingcrlf()

   serial_hw_data = "E"    serial_hw_data = "n"    serial_hw_data = "d"
   plingcrlf()
   plingcrlf()

   delay_100ms(30)

end loop