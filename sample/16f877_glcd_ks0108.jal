-- Title: Test program shows Conway's 'game of life' on a ks0108 graphic LCD
-- Author: Joep Suijs, Copyright (c) 2008-2011, all rights reserved.
-- Adapted-by: 
-- Compiler: >=2.4m
-- Revision: $Revision$
--
-- This file is part of jallib  (http://jallib.googlecode.com)
-- Released under the ZLIB license (http://www.opensource.org/licenses/zlib-license.html)
--
-- Description: 
-- http://en.wikipedia.org/wiki/Conway's_Game_of_Life
--
--
-- This file has been generated from:
--    * board: board_16f877_dwarf.jal
--    * test : test_glcd_ks0108.jal
--

;@jallib section chipdef 
-- chip setup
include 16f877

pragma target clock 20_000_000                  -- xtal frequency
pragma target OSC        hs
pragma target   LVP disabled
pragma target   WDT disabled



;@jallib section glcd
-- GRAPHIC_LCD IO definition
var volatile byte GLCD_DATAPRT     is portd
var volatile byte GLCD_DATAPRT_DIR is portd_direction

var volatile bit GLCD_RW  is pin_b4
var volatile bit GLCD_CS1 is pin_b0
var volatile bit GLCD_E   is pin_b5
var volatile bit GLCD_DI  is pin_b2
var volatile bit GLCD_RST is pin_c0
var volatile bit GLCD_CS2 is pin_b1

var volatile bit GLCD_RW_DIRECTION  is pin_b4_direction
var volatile bit GLCD_CS1_DIRECTION is pin_b0_direction
var volatile bit GLCD_E_DIRECTION   is pin_b5_direction
var volatile bit GLCD_DI_DIRECTION  is pin_b2_direction
var volatile bit GLCD_RST_DIRECTION is pin_c0_direction
var volatile bit GLCD_CS2_DIRECTION is pin_b1_direction

;@jallib section led
-- LED IO definition
alias led             is pin_b6
alias led_direction   is pin_b6_direction
alias led2            is pin_a1
alias led2_direction  is pin_a1_direction
led_direction = output

-- setup serial (see echo.jal for more details);@jallib section serial
const serial_hw_baudrate = 115_200
include serial_hardware
serial_hw_init()

include print
include random

include delay     
include glcd_ks0108      
include glcd_common
glcd_init()

const byte str1[] = "Test graph display.      "      -- define a string
print_string(serial_hw_data, str1)                 -- output string

;glcd_box  ( 0,0, 127,63)  
     
include print




glcd_char_y_pos  = 20;  
glcd_char_x_pos = 20

;glcd_line(0, 0, 32, 63)
;glcd_line(0, 0, 64, 63)
;glcd_line(0, 0, 127,63)    

print_string(glcd, str1)
glcd_box( 0,0, 127,63)  

delay_100ms(10)


forever loop

   delay_100ms(5)

   -- fill with chars    
   var byte x, y, char;
   char = 32 
   for 8 using y loop 
      for 25 using x loop
         glcd_char_goto(y, x)
         glcd = char
         char = char + 1
         if (char > 122) then char = 32 end if   
      end loop
   end loop 

   serial_hw_data = "+"

end loop
