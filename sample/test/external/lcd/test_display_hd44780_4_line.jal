-- ------------------------------------------------------
-- Title: Test program for lcd_hd44780_4 and lcd_hd44780_common (extended test)
--
-- Author: Richard Zengerink, Copyright (c) 2008..2008, all rights reserved.
--
-- Adapted-by: Joep Suijs
--
-- Compiler: >=2.4g
--
-- This file is part of jallib (http://jallib.googlecode.com)
-- Released under the BSD license (http://www.opensource.org/licenses/bsd-license.php)
--
-- Description: Testing lcd_hd44780_4 and lcd_hd44780_common
-- This is to test all hd44780_common features. See test_lcd_*
-- for a basic display test.
-- --
-- This file defines a test for JALLIB testing, using a test-board
--  defined by a BOARD file .
--
-- Sources:
--
-- Notes: 
-- setup: an hd44780 compatible display, used in 4-bit mode.
--
-- ------------------------------------------------------

enable_digital_io() -- disable analog I/O (if any)

;@jallib use chipdef
;@jallib use lcd_hd44780_4
;@jallib use led

enable_digital_io()

led_direction = output

lcd_rs_direction        = output
lcd_en_direction        = output
lcd_dataport_direction  = output

include print
include lcd_hd44780_4
;include js_replace
include delay 

lcd_init()                  ; init the lcd
 
for 4 loop                              -- blink LED 4 times to indicate startup
   LED = on
   delay_100ms(2)
   LED = off
   delay_100ms(2)
end loop



--------------------------------------------------------------------------
------------- MAIN program -----------------------------------------------
--------------------------------------------------------------------------




   var byte data
   var word wvalue = 0
   var byte value = 0
   var byte value1 = 0
   var byte test = 0
   var byte hrs = 12
   var byte min = 55
   var byte sec = 40
   var byte year = 09
   var word yearw = 2009
   var byte month = 03
   var byte day = 23

   const byte teststring[] = "test display"

   lcd_cursor_position (1, 1)
   lcd_clear_screen()
   lcd_home()
   
   
   lcd = "T"
   lcd = "e"
   lcd = "s"
   lcd = "t"
   delay_100ms (10)
   

   forever loop

      lcd_cursor_position (2, 1)
      
      print_string(lcd, teststring)
      
      delay_100ms (10)
      lcd_shift_right (6)
      delay_100ms (10)
      lcd_shift_left (4)
      delay_100ms (10)
      lcd_cursor_blink_display (on,on,on)
      delay_100ms (10)
      lcd_cursor_shift_left (4)
      delay_100ms (10)
      lcd_cursor_shift_right (6)
      delay_100ms (10)
      lcd_clear_line  ( 2 )
      delay_100ms (10)
      lcd_home()
      delay_100ms (10)
      lcd_clear_screen()

      lcd_cursor_blink_display (off,off,on)
      lcd_clear_line  (2)
      value = 0
      while value < 255  loop
;         lcd_bvalue_dp_line_pos_left_sign ( value, 0, 1, 5, true, false)
         value = value + 1
         delay_1ms(50)
         lcd_progress  (2, (value/17)+1, 0xFF)
      end loop
;      lcd_bvalue_dp_line_pos_left_sign ( value, 0, 1, 5, true, false)
      delay_100ms (20)
      lcd_clear_screen()

;      lcd_bvalue_dp_line_pos_left_sign ( 200, 0, 1, 1, true, false)
;      delay_100ms (10)
;      lcd_bvalue_dp_line_pos_left_sign ( 5, 0, 1, 5, true, false)
;      delay_100ms (10)
;      lcd_bvalue_dp_line_pos_left_sign ( 7, 0, 1, 9, false, false)
;      delay_100ms (10)
;      lcd_bvalue_dp_line_pos_left_sign ( 112, 1, 1, 13, false, false)
;      delay_100ms (10)

      lcd_clear_line  (2)

      lcd_write_char("V")
      lcd_write_char("a")
      lcd_write_char("l")

      lcd_cursor_position (2, 5)  ;

      lcd_write_char ("=")


      lcd_clear_line  (1)

      value1 = 0
      wvalue = 5000

;      while wvalue != 0  loop
;         lcd_wvalue_dp_line_pos_left_sign ( wvalue, 2, 2, 7, true, false)
;         wvalue = wvalue - 1
;         delay_1ms(3)
;       end loop
;         lcd_wvalue_dp_line_pos_left_sign ( wvalue, 2, 2, 7, true, false)
;      delay_100ms (20)

;      lcd_clearscreen()
;      lcd_cursor_position (1, 5)
;      lcd_date ( day, month, year, "-", true )
;
;      sec = 40
;
;      while sec< 60 loop
;         lcd_cursor_position (2, 5)
;         lcd_time ( hrs, min, sec, ":" )
;         sec = sec + 1
;         delay_100ms (10)
;      end loop
;      lcd_cursor_position (1, 5)
;      lcd_date ( day, month, yearw, "/", false )
;      delay_100ms (30)

      lcd_clear_screen()

      value1 = 0
      lcd_cursor_position (1, 5)
      lcd = "="
      while value1 < 255  loop
;         lcd_bvalue_dp_line_pos_left_sign ( value1, 0, 1, 1, false, false)
         lcd_cursor_position (1, 7)
         print_prefix = true;
         print_byte_hex(lcd, value1);

         value1 = value1 + 1
         delay_1ms(250)
      end loop

      wvalue = 0
      lcd_cursor_position (2, 7)
      lcd = "="


;      while wvalue < 2000  loop
;         lcd_wvalue_dp_line_pos_left_sign ( wvalue, 0, 2, 1, false, false)
;         lcd_cursor_position (2, 9)
;         print_prefix = true;
;         print_byte_hex(lcd, wvalue);
;         
;         wvalue = wvalue + 1
;         delay_1ms(5)
;      end loop

      lcd_clear_screen()

 end loop


