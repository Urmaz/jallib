
var bit  SwSelect
var bit  SwRight 
var bit  SwLeft  

var byte PrevButtonIO
var byte ButtonDelay

procedure Buttons is

   pin_b3_direction = input
   pin_b6_direction = input
   pin_b7_direction = input

   delay_10us(5)

   if (PrevButtonIO != (portb & 0xc8)) then
      PrevButtonIO = (portb & 0xC8)
      ButtonDelay = 10
   end if

   if (ButtonDelay > 0) then
      ButtonDelay = ButtonDelay - 1
      SwRight  = false
      SwSelect = false
      SwLeft   = false
   else 
      SwRight  = (PrevButtonIO == 0x08) ;pin_b3
      SwSelect = (PrevButtonIO == 0x40) ;pin_b6
      SwLeft   = (PrevButtonIO == 0x80) ;pin_b7
   end if

   if (SwRight) then serial_hw_data = "R" end if
   if (SwSelect) then serial_hw_data = "S" end if
   if (SwLeft) then serial_hw_data = "L" end if
   
   pin_b3_direction = output
   pin_b6_direction = output
   pin_b7_direction = output
   
end procedure


procedure BatteryCheck() is
   
   var word Battery

   const byte bstr1[] = "batterij: "
   print_string(serial_hw_data, bstr1)
   Battery = ADC_read(2)
	print_word_dec(serial_hw_data, Battery)

   Battery = ADC_read(3)
   serial_hw_data = " "
	print_word_dec(serial_hw_data, Battery)

   Battery = ADC_read(4)
   serial_hw_data = " "
	print_word_dec(serial_hw_data, Battery)

   serial_hw_data = "+"
	print_byte_hex(serial_hw_data, adcon0)
   serial_hw_data = "+"
	print_byte_hex(serial_hw_data, adcon1)

	print_crlf(serial_hw_data)

end procedure