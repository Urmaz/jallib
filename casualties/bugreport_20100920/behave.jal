; ----------------------------------------------------------------------------
; sumo_markIII.jal
;
; (c) 2005 - Joep Suijs
;
; Mini-sumo robot.
;
; Behavoir based algorithm
;
; ----------------------------------------------------------------------------

const word LINE_NORM = 150

	var sbyte MotorL  ; pwm value, 127 ... -127, teken negatief = reverse
	var sbyte MotorR  ; pwm value, 127 ... -127, teken negatief = reverse
	var sbyte PrevMotorL
	var sbyte PrevMotorR
   const byte ServoSlope = 5

   var bit  DraaiRichting

   var byte Ldist
   var byte Rdist

   var byte EyeL_H
   var byte EyeR_H

   var byte RequestControl
   var byte PrevWinner

   var bit  EyeOnFlag


   var word  LineL
   var word  LineR

   -- Behavoir vlaggen & counters
   var bit  FlagWaitStart = true
   var word CntAvoid
   var word CntCruise
   var word CntTurn
   var byte CntSpot

;include csv


;-----------------------------------------------------------------------------
; BehaveSeek
;-----------------------------------------------------------------------------
; Zoek naar tegenstander door langzaam rond te draaien
;-----------------------------------------------------------------------------
procedure BehaveSeek (byte in ID) is

   -- draai in eye-richting
   if (Draairichting) then
      -- counterclockwise
      MotorL = + 60
      MotorR = - 60
   else 
      -- clockwise
      MotorL = - 60
      MotorR = + 60
   end if 

   -- actief
   RequestControl = ID
 
end procedure

;-----------------------------------------------------------------------------
; BehaveCruise
;-----------------------------------------------------------------------------
; Rijd af en toe een klein stukje 
;-----------------------------------------------------------------------------
procedure BehaveCruise (byte in ID) is

   if (PrevWinner > ID) then
      CntCruise = 0;
   end if

   CntCruise = CntCruise + 1

   if (CntCruise < (5000)) then -- 5000 ms
      -- niet actief
      return
   end if

   MotorL = + 60
   MotorR = + 60

   if (CntCruise >(5000 + 2000)) then -- 2000 ms
      -- einde activiteit
      CntCruise = 0
   end if

   -- actief
   RequestControl = ID
 
end procedure

;-----------------------------------------------------------------------------
; BehaveTrackLong
;-----------------------------------------------------------------------------
; Track de tegenstander op de sharp IR afstandmeters
;-----------------------------------------------------------------------------
procedure BehaveTrackLong (byte in ID) is
   var byte FrontLR
   
   FrontLR  = (PcfData & 0x06) / 2

   case FrontLR of
   
      0x03 : block   
         -- niet actief
;         LedYellowL = false
;         LedYellowR = false
         return
	   end block

      0x02 : block
         ; Alleen Links in zicht
;         LedYellowL = true
;         LedYellowR = false
         DraaiRichting = true  ; counterclockwise         
         
         MotorL = 0
         MotorR = + 70
      end block

      0x01 : block      
         ; Alleen Rechts in zicht
;         LedYellowL = false
;         LedYellowR = true
         DraaiRichting = false ; clockwise
         
         MotorL = + 70
         MotorR = 0
      end block

      0x00 : block
         ; Rechts en Links in zicht
;        LedYellowL = true
;         LedYellowR = true
         MotorL = + 120
         MotorR = + 120
      end block
      
   end case
   
   -- actief
   RequestControl = ID

end procedure

;-----------------------------------------------------------------------------
; BehaveSpotTarget
;-----------------------------------------------------------------------------
; Zoek naar de tegenstander met de sharp IR afstandmeters
;-----------------------------------------------------------------------------
procedure BehaveSpotTarget (byte in ID) is
   
   if ((Ldist > 14) & (Rdist > 14)) then

      if (CntSpot > 0) then
         CntSpot = CntSpot - 1
      end if

      if (CntSpot ==  0) then
         -- niet actief
         return
      end if

   else 

      CntSpot = 5       ; we zien iets => min 5 loops reageren.

      if (Ldist > 14)  then
         ; Alleen Rechts in zicht
         DraaiRichting = false ; clockwise
      end if

      if (Rdist > 14)  then
         ; Alleen Links in zicht
         DraaiRichting = true  ; counterclockwise
      end if
   end if

   MotorL = + 50
   MotorR = + 50

   -- actief
   RequestControl = ID

end procedure

;-----------------------------------------------------------------------------
; BehaveTrackCyclop
;-----------------------------------------------------------------------------
; Track de tegenstander op de sharp IR afstandmeters zonder richting
;-----------------------------------------------------------------------------
procedure BehaveTrackCyclop (byte in ID) is
   
   if (Rdist > 6) then
      -- niet actief
;      LedYellowL = false
;      LedYellowR = false
      return
   end if

;      LedYellowL = true
;      LedYellowR = true
      MotorL = + 50
      MotorR = + 50

   -- actief
   RequestControl = ID

end procedure

;-----------------------------------------------------------------------------
; BehaveTrackShort
;-----------------------------------------------------------------------------
; Track de tegenstanders op de IR objectdetectors (471)
;-----------------------------------------------------------------------------
procedure BehaveTrackShort (byte in ID) is

;   if (IrLeft == true) & (IrRight == true) then
;      -- niet actief
;      return
;   end if
;
;   if ((IrLeft == false) & (IrRight == false)) then
;      -- beide actief => rechtdoor
;      MotorR = ServoMidden + 100;
;      MotorL = ServoMidden + 100;
;
;   elsif (IrLeft == false) then
;      -- Links actief => rechtse wiel draaien
;      MotorL = ServoMidden
;      MotorR = ServoMidden + 100;
;      DraaiRichting = true ; counterclockwise
;
;   elsif (IrRight == false) then
;      -- Rechts actief => Links draaien
;      MotorL = ServoMidden + 100;
;      MotorR = ServoMidden
;      DraaiRichting = false ; clockwise
;
;   end if
;
;   -- actief
;   RequestControl = ID

end procedure

;-----------------------------------------------------------------------------
; BehaveAvoid
;-----------------------------------------------------------------------------
; Ga van de rand (taware line) af
;-----------------------------------------------------------------------------
procedure BehaveAvoid (byte in ID) is

;   if (SwDip3 == true) then
;      ; avoid (line sensors) disabled
;      return
;   end if

   if ((LineL > LINE_NORM) | (LineR > LINE_NORM)) then
      -- we staan op de lijn
      CntAvoid = 1000    --  ms
   end if

   if (CntAvoid == 0) then   
      -- niet actief
      return
   end if

   CntAvoid = CntAvoid - 1

   if ((LineL > LINE_NORM) & (LineR < LINE_NORM)) then
      ; we staan met de linkse sensor op de rand en 
      ; rechts niet, dus alleen linkse wiel achteruit
      MotorL = - 100
      MotorR = 0
   elsif ((LineL < LINE_NORM) & (LineR > LINE_NORM)) then
      ; we staan met de rechtse sensor op de rand en 
      ; links niet, dus alleen rechtse wiel achteruit
      MotorL = 0
      MotorR = - 100
   else
      ; beide sensoren op de rand of beide ervan af
      MotorL = - 100;
      MotorR = - 100;
   end if

   -- actief
   RequestControl = ID

end procedure

;-----------------------------------------------------------------------------
; BehaveTurn
;-----------------------------------------------------------------------------
; Draai om als er links of rechts iets is
;-----------------------------------------------------------------------------
procedure BehaveSideView (byte in ID) is

   var byte SideLR
   
   SideLR  = (PcfData & 0x09)

   if (SideLR != 0x09) then
      -- er staat iets naast ons
      CntTurn = 2000    -- ms
   end if

   if (CntTurn == 0) then   
      -- niet actief
      return
   end if

   CntTurn = CntTurn - 1


   if (SideLR == 0x08) then
      ; Alleen Links in zicht
      DraaiRichting = true  ; counterclockwise         
   end if

   if (SideLR == 0x01) then
      ; Alleen Rechts in zicht
      DraaiRichting = false  ; clockwise         
   end if

   ; hieronder een copy van seek, maar in de toekomst
   ; zal dit wel aangepast worden.
   ; Zoniet, dan kan CntTurn weg en gaat het alleen om de 
   ; draairichting.
   
   -- draai in eye-richting
   if (Draairichting) then
      -- counterclockwise
      MotorL = + 60
      MotorR = - 60
   else 
      -- clockwise
      MotorL = - 60
      MotorR = + 60
   end if 
        
   -- actief
   RequestControl = ID

end procedure

var byte StartCounter = 255
;-----------------------------------------------------------------------------
; BehaveWaitStart
;-----------------------------------------------------------------------------
; Wacht tot de startknop is ingedrukt
;-----------------------------------------------------------------------------
procedure BehaveWaitStart (byte in ID) is
   var byte Tmp 

   ; select toets = einde game
   if (SwSelect == true) then
      StartCounter = 255 ; wacht op start-knop
   end if

   if (SwLeft == true) then
      DraaiRichting = true
      StartCounter = 250
   end if

   if (SwRight == true) then
      DraaiRichting = false
      StartCounter = 250
   end if


        
  if (StartCounter == 0) then 
      ; dit gedrag niet actief (dus wedstrijd is bezig) 
      return 
  end if 

  If (StartCounter > 250) then 
      ; wacht op startsignaal 
      ; leds 
      ; buzzer = off 
      if ((isr_counter & 0xFF) < 10) then
         LedGreen  = true
         LedYellow = true
         LedOrange = true
      else
         LedGreen  = false
         LedYellow = false
         LedOrange = false
      end if
          
  else 
      ; aan het aftellen 
      if (check_delay(0)) then
         ; 20 ms loop
         ; StartCounter decrement van 250 tot 0 in 20 ms stappen 
         set_delay(0, 20)
         tmp = StartCounter % 50 
         if ((PcfData & 0x10) == 0) then 
               if (tmp > 20) then ; 30 * 20 = 0.6 seconde / seconde sneller 
                  StartCounter = StartCounter - 30
               end if       
         end if 
                           
         ; buzzer = (tmp > 40)                         
          
         StartCounter = StartCounter - 1              
      end if
      
      ; StartCounter decrement van 250 tot 0 in 20 ms stappen 
      if (StartCounter > 200) then 
         ; seconde 1 
         LedGreen  = true
         LedYellow = false
         LedOrange = false

      elsif (StartCounter > 150) then 
         ; seconde 2 
         LedGreen  = false
         LedYellow = true
         LedOrange = false
         
      elsif (StartCounter > 100) then 
         ; seconde 3 
         LedGreen  = false
         LedYellow = false
         LedOrange = true
         
      elsif (StartCounter > 50) then 
         ; seconde 4 
         LedGreen  = false
         LedYellow = true
         LedOrange = false

      elsif (StartCounter > 0) then 
         ; seconde 5 
         LedGreen  = true
         LedYellow = true
         LedOrange = true
         
      end if 
   end if 
  
   ; gedrag actief 
   MotorL = 0;
   MotorR = 0;

   -- actief
   RequestControl = ID
  
end procedure



 ;  ; behavior vlagen init
 ;  FlagWaitStart  = true
 ;  CntAvoid       = 0
 ;  CntSpot        = 0
 ;  CntTurn        = 0
 ;
 ;  -- main loop
 ;  forever loop
;      -- ---------------------------------------------------------------------
;      -- fast loop
;      -- ---------------------------------------------------------------------
;
;      if (PrevTicks != Ticks) then
;         -- ------------------------------------------------------------------
;         -- 1 ms one-shot
;         -- ------------------------------------------------------------------
;
;         -- -------------
;         -- Border Events
;         -- -------------
;      	f877_adc_8(0, 7, LineL)
;;      	f877_adc_8(0, 6, LineC)
;      	f877_adc_8(0, 5, LineR)
;
;;         LedGreenL = ( LineL < 30)
;;         LedGreenR = ( LineR < 30)
; 
;
;
;         if (Ticks > 20) then 
;            -- ---------------------------------------------------------------
;            -- 20 ms loop 
;            -- ---------------------------------------------------------------
;            Ticks = 0;
;
;            -- ----------------------------
;            -- stap 1 : verwerk sensor input 
;            -- ----------------------------
;
;            ; Bereken afstand 
;      		f877_adc_8(0 ,2 , EyeR_H)
;		      f877_adc_8(0 ,3 , EyeL_H)
;
;
;            if (EyeL_H >= 4) then
;               EyeL_H = EyeL_H / 2;
;            	Ldist = 255 / EyeL_H; ; reken om naar 0.5 dm
;            else
;              	Ldist = 200;
;            end if
;
;            if (EyeR_H >= 4) then
;               EyeR_H = EyeR_H / 2;
;            	Rdist = 255 / EyeR_H; ; reken om naar 0.5 dm
;            else
;              	Rdist = 200;
;            end if
;
;
;            ;------------------------------------------------
;            ; verwerk in- en uitschakelen (0 en 100-200 range)
;            if (MotorL == 0) then PrevMotorL = 0 end if
;            if (PrevMotorL == 0) then
;               PrevMotorL = MotorL
;            end if
;
;            if (MotorL > (PrevMotorL + ServoSlope)) then
;               PrevMotorL = PrevMotorL + ServoSlope
;            else
;               PrevMotorL = MotorL
;            end if
;
;         	if ((PrevMotorL != 0) & (SwDip1 == false)) then   
;	         	pin_b2 = on
;   		      int_delay_10uS(PrevMotorL)
;   	   	   pin_b2 = off
;         	end if
;
;            ;------------------------------------------------
;            ; verwerk in- en uitschakelen (0 en 100-200 range)
;            if (MotorR == 0) then PrevMotorR = 0 end if
;            if (PrevMotorR == 0) then
;               PrevMotorR = MotorR
;            end if
;
;            if (MotorR > (PrevMotorR + ServoSlope)) then
;               PrevMotorR = PrevMotorR + ServoSlope
;            else
;               PrevMotorR = MotorR
;            end if
;
;         	if ((MotorR != 0) & (SwDip1 == false)) then
;	         	pin_b1 = on
;		         int_delay_10uS(200 - (PrevMotorR - 100)) -- convert range 100-200 to 200-100
;      		   pin_b1 = off
;   	      end if 
;   
;            ;------------------------------------------------
;            ; logging
;            if (RequestControl < 13) then
;               ; eens per 20 ms, dus 50 records/sec
;               ; of 9000/3 minuten
;               ; 3.6 bytes in 32k, 7.2 bytes in 64 k 
;               ; 8 bytes, 64k wordt 163 seconden ofwel 2m45
;
;;               csv_log()
;            else
;;               csv_reset()
;            end if
;
;            if (F877_serial_RX_buffer()) then
;               ; karakter ontvangen
;               f877_serial_receive(temp)
;               if (temp == "c") then
;;                  csv_output()   ; output csv table
;               elsif (temp == "d") then
;;                  csv_dump()   ; hex dump csv table
;               elsif (temp == "s") then
;;                  ShowSensors = true
;               end if
;            end if
;
;         end if -- 20 ms loop
;
;         PrevTicks = Ticks
;      end if -- 1 ms one-shot
;
;   end loop -- fastest & forever loop
;
-- end of main