20100206updated: fixed in 2.4n -- 2 June 2010

This shows the previous reported bug with string-terminator. 
The issue surfaces on 18F chips as well as on 16f877a.

print_string_terminator is a const that defines the end of a string char, if
it is less than count(). It is used in print_string() (of print.jal)

It seems that constant 'print_string_terminator' is optimised away
when it contains value 0.

var volatile byte print_string_terminator = 0
makes the program work okay.

Below the output of the two hex files supplied. Eg the first lines:

ok:  A - Test print.jal- bytes
err: A - Te210


The enclosed programs  output:
===============================================================================
16f877a_serial_print_err.hex
                              
A - Te210
D2
11010010
-109
45678
B26E
1011001001101110
-32109
Tes3210987654
BF63C886
10111111011000111100100010000110
-2109876543
1 h  0 l
121 wh79 y

A - Te210
D2
11010010
-109
45678
B26E
1011001001101110
-32109
Tes3210987654
BF63C886
10111111011000111100100010000110
-2109876543
1 h  0 l
121 wh79 y


===============================================================================
16f877a_serial_print_ok.hex                              
A - Test print.jal- bytes
210
D2
11010010
-109
Test print.jal - words
45678
B26E
1011001001101110
-32109
Test print.jal - dwords
3210987654
BF63C886
10111111011000111100100010000110
-2109876543
Test print.jal - bit
1 high true 0 low false
Variable x has decimal value 121 which is hex value 79 and represents ASCII char
acter y
