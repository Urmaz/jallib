<?xml version='1.0' encoding='UTF-8'?>
<!-- This document was created with Syntext Serna Free. --><!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd" []>
<topic id="template_id">
  <title>Introduction</title>
  <prolog>
    <author>Matthew Schinkel</author>
    <publisher>Jallib Group</publisher>
  </prolog>
  <body>
    <p id="firstcontent">Introduction to JALv2 &amp; Jallib</p>
    <section>
      <title>What is JALv2/Jallib</title>
      <p>Jalv2 a high level language for PIC microcontrollers. Jalv2 was created by Kyle York, who also wrote the PICbsc compiler. STEF MIENTKI got
in touch with Kyle York and ask him if he could look into rewriting JAL using the PICbsc
engine, the prospect intrigued him. </p>
      <p>JAL 2.0 not only shares the same JAL  syntax, but adds
new features (like new types, arrays, etc.) to JAL, keeping the PICbsc internal compiler design as
well. </p>
      <p>This manual covers all aspects of JAL 2.0 without any reference to JAL (also known as JAL 0.4x). trying to be useful
for all novices and users with or without JAL experience.</p>
      <p>JAL 0.4x was developed by Wouter Van OOijen. He created JAL because he did not like any of
the low-cost (or free) languages for these chips and implementing a high level language looked
like a nice project.</p>
      <p>JALv2 can be found at Kyle Yorks website: <xref href="http://www.casadeyork.com/jalv2/" format="html">http://www.casadeyork.com/jalv2/</xref></p>
    </section>
    <section>
      <title>What is Jallib?</title>
      <p>Jallib is a set of libraries &amp; samples that make things work. Jallib provides PIC device files as well as libraries that allow interaction between the PIC and other devices such as LCDs, RAM memories, eeprom, etc.</p>
      <p>You can find out more about Jallib at these locations:</p>
      <p>Jallib Website: <xref href="http://justanotherlanguage.org/" format="html">http://justanotherlanguage.org/</xref></p>
      <p>Jallib Project Home: <xref href="http://code.google.com/p/jallib/" format="html">http://code.google.com/p/jallib/</xref></p>
    </section>
    <section>
      <title>Who is Jallib Group?</title>
      <p>Jallib Group is the group of contributors whom work together to make these libraries possible. If you wish to contribute or need a library updated, you may find them here:</p>
      <p>Jallib Group Discussion: <xref href="http://groups.google.com/group/jallib" format="html">http://groups.google.com/group/jallib</xref></p>
    </section>
    <section>
      <title>Where do I get additional Support?</title>
      <p>JALLIST Support Mailing List: <xref href="http://tech.groups.yahoo.com/group/jallist/" format="html">http://tech.groups.yahoo.com/group/jallist/</xref></p>
    </section>
    <section>
      <title>Example JALv2/Jallib Code</title>
      <codeblock>-- microchip definition file
include 18f4620                  

-- choose oscillator frequency
pragma target clock 20_000_000

-- configure settings (fuses)
pragma target OSC  HS              -- HS crystal or resonator
pragma target WDT  disabled        -- no watchdog
pragma target LVP  disabled        -- no Low Voltage Programming
pragma target MCLR external        -- reset externally

-- disable analog pins
enable_digital_io()   

-- set a pin as output
pin_A0_direction =  output

forever loop
   pin_A0 = on          -- set pin level high
   _usec_delay(250000)  -- delay 250ms
   pin_A0 = off         -- set pin level low
   _usec_delay(250000)  -- delay 250ms
end loop</codeblock>
    </section>
  </body>
</topic>
