<?xml version='1.0' encoding='UTF-8'?>
<!-- This document was created with Syntext Serna Free. --><!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd" []>
<topic id="template_id">
  <title>Getting Started</title>
  <prolog>
    <author>Matthew Schinkel</author>
    <publisher>Jallib Group</publisher>
  </prolog>
  <body>
    <p id="firstcontent">Guide to getting started with PIC microcontrollers JALv2 &amp; Jallib</p>
    <section>
      <p><b>So, you’ve heard all the hype about PIC microcontrollers &amp; JALv2 and want to hear more?</b></p>
      <image href="images/getting_started_circuit.jpg"/>
      <p>Let’s start with some questions you may have.</p>
    </section>
    <section>
      <title>Why use PIC microcontrollers, JALv2, and this book?</title>
      <p><b>Simple usage:</b></p>
      <p>Yes, that’s right, microcontrollers are simple to use with the help of this open source language JAL. Not only are microcontrollers simple to use, but many other complex external hardware is made easy such as: USB, Analog to digital conversion (ADC), serial communication, Hard Disks, SD Cards, LCD displays, sensors and many more.</p>
      <p>All you will need is a small amount of knowledge about general electronics. We will teach you the rest you need to know!
</p>
      <p><b>Circuit Simplicity:</b></p>
      <p>Would you like to reduce the size of your circuits? What are you currently using to build your digital circuits?</p>
      <p>When I got started, I liked to use things like the 74LS series, simple CMOS gate chips, 555 timers etc. You can build just about anything with these simple chips, but how many will you need to complete your project?  One of the projects I built some time ago used five 74ls chips. With a microcontroller, I can now reduce my circuit to 1 microcontroller.</p>
      <p><b>Bigger Projects:</b></p>
      <p>When I say bigger, I mean cooler projects! There is no limit to what you can build! Choose from our small projects to build a large project of your own. What functionality do you need for your project? Check out our tutorial section for a complete list of compatible features you can use for your circuit.

</p>
    </section>
    <section>
      <title>What do I need to get started?</title>
      <p>You will need the following:</p>
      <p><ol>
          <li>PIC microcontroller chip</li>
          <li>PIC programmer</li>
          <li>Programming language (JALv2) + Libraries (JALLIB) + Editor, see our installation guide.</li>
          <li>Computer (preferably one with a serial port)</li>
          <li>PIC programming / burning software </li>
          <li>Regular electronic stuff such as breadboard, resistors, wire, multimeter etc.</li>
          <li>Oscilloscope is not required but suggested for some advanced projects.</li>
        </ol></p>
      <p>Follow our Installation Guide for free programming language, libraries &amp; text editor</p>
    </section>
    <section>
      <title>How much will it cost?</title>
      <p>Yes, getting started with microcontrollers has it’s price. A microcontroller can cost you anywhere between $1 to $10 USD, and a programmer will cost $20 to $50. But you can&apos;t put a price on FUN!</p>
      <p>The programming language JALv2 is FREE, other languages will cost you somewhere between $200 and $2000.</p>
      <p>When you compare this price to the price you are currently spending on those many IC’s you currently require to build your circuits, this may be cheaper. You will not need many of your smaller IC’s, and some specialty chips can be replaced. Of course you’re going to save time and breadboard space as well!</p>
      <p>As an example... Instead of buying a UART chip for serial communication, you can now use the microcontroller’s internal UART for communication to your PC or other projects.</p>
    </section>
    <section>
      <title>What PIC microcontroller should I buy?</title>
      <p><image href="images/getting_started_16F877.jpg" width="150"/><image href="images/getting_started_16f877_diagram.jpg" width="100"/></p>
      <p>PIC16F877 or PIC16F877A seem to be the most popular mid-range PIC at the moment (in the image above). You should be able to find them at your local electronics store for around $10. This microcontroller has many features and a good amount of memory. It will be sufficient for most of your projects. We will build our first project on this chip.</p>
      <p>There are many low-end PIC’s to choose from, PIC16F84, PIC16F88 are smaller chips for around $5. There are also very low end 8 pin PIC’s such as 12F675 for $1.</p>
      <p>If you’re looking for speed, functionality, and a whole lot of memory space, you can go with a PIC18Fxxx chip. Some of these have USB capability. I would suggest one of the following: 18F452, 18F4550, 18F2550. These PIC’s will also work in our getting started “blink a led” tutorial with the same circuit diagram. For future tutorials, the circuits may need some modifications.</p>
      <p>Here’s a price chart from the manufacturer’s sales website:</p>
      <table>
        <tgroup cols="2">
          <thead>
            <row>
              <entry>PIC</entry>
              <entry>Price USD</entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>16F877</entry>
              <entry>$5.92</entry>
              <entry/>
            </row>
            <row>
              <entry>16F877A</entry>
              <entry>$5.20</entry>
            </row>
            <row>
              <entry>18F4550</entry>
              <entry>$4.47</entry>
            </row>
            <row>
              <entry>16F84</entry>
              <entry>$5.01</entry>
            </row>
            <row>
              <entry>12F675</entry>
              <entry>$1.83</entry>
            </row>
            <row>
              <entry>18F452</entry>
              <entry>$1.01</entry>
            </row>
            <row>
              <entry>18F4550</entry>
              <entry>$4.14</entry>
            </row>
            <row>
              <entry>18F4550</entry>
              <entry>$4.47</entry>
            </row>
            <row>
              <entry>18F2550</entry>
              <entry>$4.51</entry>
            </row>
          </tbody>
        </tgroup>
      </table>
    </section>
    <section>
      <title>What programmer should I buy?</title>
      <p>Any pic programmer will do. The only suggestions I have is to make sure it can program a wide variety of PIC’s such as the ones listed above, and make sure it has a ICSP port for future use. ICSP is for in-circuit programming.</p>
      <p>Here are some images of programmers we use:</p>
      <p><image href="images/getting_started_serial_programmer.jpg"/><image href="images/getting_started_a-wisp648.jpg" width="197"/></p>
    </section>
    <section>
      <title>What editor should I use?</title>
      <p>Any text editor is fine, but if you are on a windows machine. We suggest the free editor “JAL Edit” which will highlight &amp; color important text as well as compile your JAL program to a hex file for burning to your microcontroller. If you followed our installation guide, you will already have this editor.</p>
      <image href="images/getting_started_jaledit.jpg"/>
    </section>
    <section>
      <title>What programming/burning software should I use?</title>
      <p>Did your programmer come with software? There are many to choose from so use whatever you prefer. I use “Micropro” from <xref href="http://www.ozitronics.com/micropro.html" format="html"/>. It’s a free, open source software for programming a wide range of PIC’s. It supports many types of programmers.</p>
      <image href="images/getting_started_micropro.jpg"/>
    </section>
    <section>
      <p>Ok, enough of this boring stuff, lets build something!</p>
    </section>
  </body>
</topic>
