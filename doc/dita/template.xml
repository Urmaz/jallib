<?xml version='1.0' encoding='UTF-8'?>
<!-- This document was created with Syntext Serna Free. --><!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd" []>
<topic id="template_id">
  <title>My title</title>
  <prolog>
    <author>author name</author>
    <publisher>Jallib Group (or Jaluino Group, or ...)</publisher>
    <metadata>
      <category>&quot;Tutorials&quot;, &quot;User Guide&quot;, etc...</category>
      <prodinfo>
        <prodname>Product Name (eg. &quot;Jaluino&quot;, &quot;Jallib&quot;, ...)</prodname>
        <vrmlist>
          <vrm version="versions to which documentation applies"/>
          <vrm version="can be more than one"/>
          <vrm version="if none, set to..."/>
          <vrm version="0.0"/>
        </vrmlist>
      </prodinfo>
    </metadata>
  </prolog>
  <body>
    <p id="firstcontent">Some content, outside of a section</p>
    <section>
      <title>Dealing with links (XREF)</title>
      <p>xref elements are used to link to other DITA document, web pages, etc... This <xref href="http://jallib.googlecode.com/svn/trunk/doc/dita/tutorials/tutorial_i2c1.xml" format="dita">xref</xref> points to another DITA file. This <xref href="#template_id/firstcontent">xref</xref> points to an element within this document (starting from topic ID, then element ID in this document). And this <xref href="http://www.google.com" format="html">xref</xref> points to a webpage. Note in this case, we need to add format (defaulting to &quot;dita&quot;) to tell DITA compiler this is not a DITA resource.</p>
    </section>
    <section>
      <title>Basic styles</title>
      <p>Some styles... <b>bold</b>, <i>italic</i>, <u>underline</u>.</p>
    </section>
    <section>
      <title>Images</title>
      <p>Images can be added like this: <image href="http://jallib.googlecode.com/svn/trunk/doc/dita/tutorials/images/logo.jpg" align="center" placement="break"/></p>
      <note>this image has an URL pointing to jallib SVN. In Serna editor, image will appear as broken. This is because Serna don&apos;t resolve image location. However, during compilation, URL will be resolved, and image will correctly appear in document. BTW, this a &quot;note&quot; element...</note>
      <p>If &quot;place&quot; attribute is inline, then it follows text flow (also note I&apos;ve changed its width...). <image href="http://jallib.googlecode.com/svn/trunk/doc/dita/tutorials/images/logo.jpg" width="100" align="center" placement="inline"/> Else, if break, image is at the beginning of the line, like the very first image.</p>
      <p>You can also place it (see bullet example too):<ul>
          <li>
            <p>center:<image href="http://jallib.googlecode.com/svn/trunk/doc/dita/tutorials/images/logo.jpg" align="center" placement="break"/></p>
          </li>
          <li>
            <p>left:<image href="http://jallib.googlecode.com/svn/trunk/doc/dita/tutorials/images/logo.jpg" align="left" placement="break"/></p>
          </li>
          <li>
            <p>right:<image href="http://jallib.googlecode.com/svn/trunk/doc/dita/tutorials/images/logo.jpg" align="right" placement="break"/></p>
          </li>
        </ul></p>
      <p> center: left or right align, using &quot;align&quot; attribute.</p>
      <p>Images can also have legends. In that cas, use &quot;figure&quot; element, like this:</p>
      <p><fig>
          <title>This is the official jalv2 logo</title>
          <desc>This is a short description. It&apos;s optional.</desc>
          <image href="http://jallib.googlecode.com/svn/trunk/doc/dita/tutorials/images/logo.jpg" align="left" placement="break"/>
        </fig></p>
    </section>
    <section>
      <title>Formatting code</title>
      <p>Code can be put in documents using &quot;codeblock&quot; element. Careful, this is not a &quot;pre&quot; element: both using fix fonts (like <i>Courier</i>), but results can be different (for HTML, will give &lt;code&gt; or &lt;pre&gt;):</p>
      <p><codeblock>include thelib
var byte zevar
forever loop
   -- whatever
end loop</codeblock></p>
      <p>You can also put some code, like a function call, within text flow, using &quot;codeph&quot; element. Ex: this call <codeph>serial_blabla()</codeph> will produce an amazing result. File paths can be displayed using &quot;filepath&quot; element <filepath>/etc/passwd</filepath></p>
      <p>Don&apos;t forget to use these tags, particularly &quot;codeph&quot; and &quot;filepath&quot;. Since these tags can be automatically extracted, some sanity check can be done, such as making sure functions exist, or something similar.</p>
    </section>
    <p><ol>
        <li>I hope you enjoyed this template / tutorial</li>
        <li>see you next DITA files</li>
        <li>Cheers</li>
        <li>Seb</li>
      </ol></p>
  </body>
</topic>
