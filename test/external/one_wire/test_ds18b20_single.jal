-- ------------------------------------------------------
-- Title: Test program for ds18b20.jal
--
-- Author: Vasile Guta Ciucur, Copyright (c) 2010..2010, all rights reserved.
--
-- Adapted-by: Joep Suijs
--
-- Compiler: >=2.4m
--
-- This file is part of jallib  (http://jallib.googlecode.com)
-- Released under the BSD license (http://www.opensource.org/licenses/bsd-license.php)
--
-- Description: Test program
--    Read sensor temperature DS18B20 from a specific device using the
--    drive's ID
--
-- Sources:
--
-- Notes: requires LCD to display result
--
-- ------------------------------------------------------

;@jallib use chipdef

include delay
include print  
include format

-- set all IO as digital
enable_digital_io()

-- ok, now setup serial
;@jallib use serial
include serial_hardware
serial_hw_init()
alias device is serial_hw_data

-- setup pin definitions for dallas one-wire bus
alias d1w_bus            is pin_b1
alias d1w_bus_direction  is pin_b1_direction     
include one_wire           -- include one-wire library
d1w_init()                 -- init one-wire bus

-- select one of the output formats below
const ds18b20_value_raw          = 0
const ds18b20_value_celcius      = 1
const ds18b20_value_farenheit    = 0   -- not yet supported

const ds18b20_ignore_crc         = 0 -- 1 tell lib to ignore crc (code becomes smaller and faster, but reliability of data is less)
const ds18b20_max_retries        = 2

include ds18b20            -- include library for ds18b20 temperature sensor with one-wire interface

enable_digital_io()

const byte str1[] = "Temp="
const byte str_err1[] = "ds18b20 read failed."
var byte i
var sword temperature                
var bit r
forever loop           
                  
   ds18b20_convert(80)  -- tell all ds18b20 devices to execute conversion and wait for 80*10ms                 
   r = ds18b20_s_temp(temperature)                  -- read conversion result
   
   if (r) then
      -- success, so print temperature
      print_string(device, str1)                   -- print string
      format_sword_dec(device, temperature, 4, 1)  -- print temperature in xx.x format
      device = "C"
      device = " "
   else
      -- print fail message
      print_string(device, str_err1)    
   end if

   -- read the device's ID and print it
   r = ds18b20_s_read_rom()
   if (r) then
      -- read_rom successful, so print ID which is now stored in scratchpad 
      for 8 using i loop
         print_byte_hex(device, scratchpad[i])
      end loop                
   else                      
      -- print fail message
      print_string(device, str_err1)
   end if

   print_crlf(device)   
end loop
