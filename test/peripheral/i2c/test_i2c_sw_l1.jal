-- ------------------------------------------------------
-- Title: Test program for i2c_hardware.jal
--
-- Author: Joep Suijs, Copyright (c) 2008..2010, all rights reserved.
--
-- Adapted-by: 
--
-- Compiler: >=2.4g
--
-- This file is part of jallib  (http://jallib.googlecode.com)
-- Released under the BSD license (http://www.opensource.org/licenses/bsd-license.php)
--
-- Description: Level 0 i2c test program
--    interact with an i2c eeprom using the i2c primitives
-- --
-- This file defines a test for JALLIB testing, using a test-board
--  defined by a BOARD file .
--
-- Sources:
--
-- Notes: 
--    setup: 
--         an 24lc256 i2c eeprom, connected to the test board i2c pins.
--         a serial connection to a terminal
--
-- ------------------------------------------------------

;@jallib use chipdef
;@jallib use i2c

-- generic setup (see releated examples for more details)  

;@jallib use serial
include serial_hardware
serial_hw_init()
include print
include delay

-- i2c setup
const word _i2c_bus_speed = 1 ; * 100kHz

include i2c_software                
;include i2c_hardware

i2c_initialize()

var byte i2c_tx_buffer[10]
var byte i2c_rx_buffer[10]

include i2c_level1

-- we're alive
const byte str1[] = "Test.\r\n" 
print_string(serial_hw_data, str1)

var bit r
var byte i

forever loop
   
   -- Send 2 bytes address to device 0xA0 and then read 3 bytes of data
   i2c_tx_buffer[0] = 0  -- high byte address within i2c eeprom
   i2c_tx_buffer[1] = 0  -- low byte address within i2c eeprom
   r = i2c_send_receive(0xA0, 2, 3)
   
;   -- same as above
;   r = i2c_receive_wordaddr(0xA0, 0x0000, 3)

   print_bit_truefalse(serial_hw_data, r)
   serial_hw_data = " "

   print_byte_hex(serial_hw_data, i2c_rx_buffer[0]);
   serial_hw_data = " "
   print_byte_hex(serial_hw_data, i2c_rx_buffer[1]);
   serial_hw_data = " "
   print_byte_hex(serial_hw_data, i2c_rx_buffer[2]);
   serial_hw_data = " "
   
   -- write part (increment 3rd byte at 0x0002)
   i2c_tx_buffer[0] = 0  -- high byte address within i2c eeprom
   i2c_tx_buffer[1] = 2  -- low byte address within i2c eeprom
   i2c_tx_buffer[2] = i2c_rx_buffer[2] + 1  -- data
   r = i2c_send_receive(0xA0, 3, 0)
   print_bit_truefalse(serial_hw_data, r)
   serial_hw_data = " "
   
   print_crlf(serial_hw_data)
   
   delay_100ms(10)
end loop
