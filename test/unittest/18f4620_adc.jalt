-- Title: unittest to check ADC libs for 18F4620
-- Author: Sebastien Lelong, Copyright (c) 2008-2009, all rights reserved.
-- Adapted-by:
-- Compiler: >=2.4k
-- 
-- This file is part of jallib (http://jallib.googlecode.com)
-- Released under the BSD license (http://www.opensource.org/licenses/bsd-license.php)
--
-- Description: this describes multiple unittests (a testcase), to test the 
-- many different combination while setting up ADC.
--
-- Notes: see jallib wiki page about unit testing to learn how to use this file
--


-- These are the different PIC configuration, with different clock
-- speed. Clock speed can have impacts on acquisition delay computation,
;@jallib section pic_20MHz
include 18f4620   ;@no_debug     
pragma target OSC HS           
pragma target clock 20_000_000 
pragma target WDT  disabled
enable_digital_io()            

-- This unittest is a "self test". It should always be run and
-- give a success. It not, current PIC is probably not supported
-- by PICShell.
;@jallib section self_test
include unittest
var byte a = 120
test_byte(a)		 ;@assertEquals 120 test_test

;@jallib testcase test_0vref
;@jallib use pic_20MHz
;@jallib use self_test
const bit ADC_HIGH_RESOLUTION = true
const byte ADC_NCHANNEL = 1
const byte ADC_NVREF = 0
include adc
adc_init()
var byte adcon1_vcfg_temp = ADCON1 & 0b_0011_0000 -- get VCFG bits
test_byte(adcon1_vcfg_temp)  ; @assertEquals 0 test_no_vref
var byte adcon1_temp = ADCON1 & 0b_0000_1111
test_byte(adcon1_temp) ;@assertEquals 14 test_pcfg_combo

;@jallib testcase test_1vref
;@jallib use pic_20MHz
;@jallib use self_test
const bit ADC_HIGH_RESOLUTION = true
const byte ADC_NCHANNEL = 1
const byte ADC_NVREF = 1
include adc
adc_init()
var byte adcon1_vcfg_temp = ADCON1 & 0b_0011_0000 -- get VCFG bits
test_byte(adcon1_vcfg_temp)  ; @assertEquals 16 test_1_vref_pos
var byte adcon1_temp = ADCON1 & 0b_0000_1111
test_byte(adcon1_temp) ;@assertEquals 14 test_pcfg_combo

;@jallib testcase test_2vref
;@jallib use pic_20MHz
;@jallib use self_test
const bit ADC_HIGH_RESOLUTION = true
const byte ADC_NCHANNEL = 1
const byte ADC_NVREF = 2
include adc
adc_init()
var byte adcon1_vcfg_temp = ADCON1 & 0b_0011_0000 -- get VCFG bits
test_byte(adcon1_vcfg_temp)  ; @assertEquals 48 test_2_vref_pos_neg
var byte adcon1_temp = ADCON1 & 0b_0000_1111
test_byte(adcon1_temp) ;@assertEquals 14 test_pcfg_combo


;@jallib testcase test_1vref_neg_only
;@jallib use pic_20MHz
;@jallib use self_test
const bit ADC_HIGH_RESOLUTION = true
const byte ADC_NCHANNEL = 1
const byte ADC_NVREF = 3
include adc
adc_init()
var byte adcon1_vcfg_temp = ADCON1 & 0b_0011_0000 -- get VCFG bits
test_byte(adcon1_vcfg_temp)  ; @assertEquals 32 test_1_vref_neg_only
var byte adcon1_temp = ADCON1 & 0b_0000_1111
test_byte(adcon1_temp) ;@assertEquals 14 test_pcfg_combo

;@jallib testcase test_2vref_more_analogs
;@jallib use pic_20MHz
;@jallib use self_test
const bit ADC_HIGH_RESOLUTION = true
const byte ADC_NCHANNEL = 5
const byte ADC_NVREF = 2
include adc
adc_init()
var byte adcon1_vcfg_temp = ADCON1 & 0b_0011_0000 -- get VCFG bits
test_byte(adcon1_vcfg_temp)  ; @assertEquals 48 test_2_vref_pos_neg
var byte adcon1_temp = ADCON1 & 0b_0000_1111
test_byte(adcon1_temp) ;@assertEquals 10 test_pcfg_combo

