-- Title: unittest to check ADC libs for 16F88
-- Author: Sebastien Lelong, Copyright (c) 2008-2009, all rights reserved.
-- Adapted-by:
-- Compiler: >=2.4k
-- 
-- This file is part of jallib (http://jallib.googlecode.com)
-- Released under the BSD license (http://www.opensource.org/licenses/bsd-license.php)
--
-- Description: this describes multiple unittests (a testcase), to test the 
-- many different combination while setting up ADC.
--
-- Notes: this is not a standard jal file, it's jal test file. That's why its 
-- extension is ".jalt". jalt files describes sections and testcase, which are
-- assembled on-the-fly while running tests
-- --
-- To run/compile this file, you need "jallib" wrapper:
--     jallib unittest file.jalt
-- 
--

-- These are the different PIC configuration, with different clock
-- speed. Clock speed can have impacts on acquisition delay computation,

;@jallib section pic_20MHz
include 16f88   ;@no_debug     
pragma target OSC HS           
pragma target clock 20_000_000 
pragma target WDT  disabled
enable_digital_io()            

;@jallib section pic_10MHz
include 16f88   ;@no_debug     
pragma target OSC HS           
pragma target clock 10_000_000 
pragma target WDT  disabled
enable_digital_io()            


-- This unittest is a "self test". It should always be run and
-- give a success. It not, current PIC is probably not supported
-- by PICShell.


;@jallib section self_test
include unittest
var byte a = 120
test_byte(a)		 ;@assertEquals 120 test_test



;@jallib testcase test_1vref_low_rsource
;@jallib use pic_20MHz
;@jallib use self_test
const byte ADC_NVREF = 1
const bit ADC_HIGH_RESOLUTION = true
const word ADC_RSOURCE = 2_500
include adc
adc_init()

test_byte(adc_conversion_delay)	 ;@assertEquals 14 test_compute_delay
set_analog_pin(0)

asm nop
var byte adcon0_temp = ADCON0 & 0b_1100_0000
test_byte(adcon0_temp) ;@assertEquals 128 test_compute_tad_adcs

asm nop
var byte adcon1_temp = ADCON1 & 0b_0100_0000
test_byte(adcon1_temp) ;@assertEquals 64 test_compute_tad_adcs2



;@jallib testcase test_1vref_max_rsource

;@jallib use pic_10MHz
;@jallib use self_test
const byte ADC_NVREF = 1
const bit ADC_HIGH_RESOLUTION = true
const word ADC_RSOURCE = 10_000
include adc
adc_init()

test_byte(adc_conversion_delay)	 ;@assertEquals 21 test_compute_delay
set_analog_pin(0)

asm nop
--			  XYY
-- adcs =? 0b_010
var byte adcon0_temp = ADCON0 & 0b_1100_0000
test_byte(adcon0_temp) ;@assertEquals 128 test_compute_tad_adcs

asm nop
var byte adcon1_temp = ADCON1 & 0b_0100_0000
test_byte(adcon1_temp) ;@assertEquals 0 test_compute_tad_adcs2

