-- Title: Checksum
-- Author: Matthew Schinkel - borntechi.com, copyright (c) 2009, all rights reserved.
-- Adapted-by:
-- Compiler: >=2.4l
--
-- This file is part of jallib (http://jallib.googlecode.com)
-- Released under the ZLIB license (http://www.opensource.org/licenses/zlib-license.html)
--
-- Description: this library calculates an IP checksum
--
-- Notes: Yes, I know checksum_calc() needs to be optimized, and I
-- know how. This is only a working example.
--
-- Sources:
--

function checksum_calc(byte in buff[]) return word is
   var word count1 = count(buff)
   var word i = 0
   var word word16
   var dword sum = 0
   
   -- make 16 bit words out of every two adjacent 8 bit words in the packet
   -- and add them up
   while (count1 > 1) loop
      sum = sum + word( (word(buff[i + 0]) << 8) + buff[i + 1] )
      i = i + 2
      count1 = count1 - 2

      if sum > 0xFFFF then
         sum = word(sum) + 1
      end if
   end loop

   ;also check odd numbered buffer
   if count1 == 1 then
      sum = sum + (word(buff[i + 0]) << 8)
      if sum > 0xFFFF then
         sum = word(sum) + 1
      end if
   end if

   sum = word(!sum) -- ones complement the result
   return word(sum) -- return the result
end function
