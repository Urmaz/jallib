-- ------------------------------------------------------
-- Title: Test board 1a, with Microchip PIC18f14k50
--
-- Author: Albert Faber, Copyright (c) 2009, all rights reserved.
--
-- Adapted-by:
--
-- Compiler: >=2.4h
--
-- This file is part of jallib  (http://jallib.googlecode.com)
-- Released under the BSD license (http://www.opensource.org/licenses/bsd-license.php)
--
-- Description:
-- Check LEDs and switch connections
--
-- Sources:
--
-- Notes:
--  - for bootloader use following compiler settings.
-- -loader18 -no-fuse
-- ------------------------------------------------------
--
include 18f14k50                    -- target PICmicro
--
-- This program assumes a 12 MHz resonator or crystal
-- is connected to pins OSC1 and OSC2.
-- Configuration bits may cause a different frequency!
pragma target OSC HS               -- HS crystal or resonator
pragma target clock 48_000_000     -- oscillator frequency
--
-- fuses
pragma target CPUDIV		NO_CPU_SYSTEM_CLOCK_DIVIDE
pragma target USBDIV		USB_CLOCK_COMES_DIRECTLY_FROM_THE_OSC1_OSC2_OSCILLATOR_BLOCK__NO_DIVIDE
pragma target OSC				HS
pragma target PLLEN			OSCILLATOR_MULTIPLIED_BY_4
pragma target FCMEN			DISABLED
pragma target IESO			DISABLED
pragma target PWRTE			DISABLED	-- power up timer
pragma target BROWNOUT	DISABLED	-- no brownout detection
pragma target VOLTAGE		V30			-- brown out voltage
pragma target WDT				DISABLED    -- no watchdog
pragma target WDTPS			P32768		-- watch dog saler setting
pragma target MCLR			INTERNAL	-- no master reset
pragma target LVP				DISABLED    -- no low-voltage programming
pragma target XINST			ENABLED		-- extended instruction set
pragma target BACKBUG		DISABLED	-- background debugging
pragma target CP_0			DISABLED	-- code block 0 not protected
pragma target CP_1			DISABLED	-- code block 1 not protected
pragma target CPB				DISABLED	-- bootblock code not write protected
pragma target WRT_0			DISABLED	-- table writeblock 0 not protected
pragma target WRT_1			DISABLED	-- table write block 1 not protected
pragma target WRTB			DISABLED	-- bootblock not write protected
pragma target WRTC			DISABLED	-- config not write protected
pragma target EBTR_0		DISABLED	-- table read block 0 not protected
pragma target EBTR_1		DISABLED	-- table read block 1 not protected
pragma target EBTRB 		DISABLED	-- boot block not protected    
pragma target HFOFST 	THE_SYSTEM_CLOCK_IS_HELD_OFF_UNTIL_THE_HFINTOSC_IS_STABLE
--
enable_digital_io()                -- disable analog I/O (if any)

-- should end up in enable_digital_io()
ANSEL = 0x00
ANSELH = 0x00


-- set LEDs as output
pin_C6_direction = output
pin_C4_direction = output

-- still missing in device file, see issue 74
var volatile bit    pin_A3_direction     shared at TRISA : 3

var volatile bit    pin_A3               shared at PORTA : 3
--
procedure pin_A3'put(bit in x at LATA : 3) is
   pragma inline
end procedure
-- end of issue 74

-- set switches as input
pin_A3_direction = input
pin_C2_direction = input

var bit led_1	is pin_C4
var bit led_2	is pin_C6

var bit sw_1		is pin_A3
var bit sw_2		is pin_C2


led_1 = on
led_2 = on

-- wait 5 seconds
_usec_delay( 5000_000 )

var bit blink_1 = true
var bit blink_2 = true

var bit toggle = false

forever loop
	_usec_delay( 1000_000 )

	if ( sw_1 == low ) then
		blink_1 = false
	else
		blink_1 = true		
	end if
	
	if ( sw_2 == low ) then
		blink_2 = false
	else
		blink_2 = true		
	end if
	
	if blink_1 then
		led_1 = toggle
	else
		led_1 = false
	end if
	if blink_2 then
		led_2 = toggle	
	else
		led_2 = false
	end if

	toggle = !toggle

end loop
--
