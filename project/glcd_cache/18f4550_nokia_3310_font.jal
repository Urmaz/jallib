-- Title: GLCD Nokia 3310 demo sample
-- Author: SÃ©bastien Lelong, Copyright (c) 2011, all rights reserved.
-- Adapted-by:
-- Compiler: 2.4n
--
-- This file is part of jallib  (http://jallib.googlecode.com)
-- Released under the BSD license (http://www.opensource.org/licenses/bsd-license.php)
--
-- Description: simple demo showing how to use GLCD Nokia 3310. This is 
-- a graphic LCD, widely commonly in DIY projects. This sample shows some
-- basic usage, like printing characters, etc...
--

include 18f4550
pragma target clock 48_000_000
-- magical statements: using a 20MHz Xtal, you can run @48MHz !
pragma target PLLDIV    P5
pragma target CPUDIV    P2
pragma target USBPLL    F48MHZ
pragma target OSC       HS_PLL

pragma target WDT  disabled        -- no watchdog
pragma target LVP  disabled        -- no Low Voltage Programming
pragma target MCLR external        -- reset externally

enable_digital_io()

include delay

alias nok_sclk       is pin_b6    --  assign nokia clock
alias nok_sda        is pin_b4    --  assign nokia serial data in
alias nok_cs         is pin_c1    --  assign nokia chip enable
alias nok_res        is pin_c0    --  assign nokia reset
alias nok_dc         is pin_c2    --  assign nokia data/commant

pin_b6_direction = output
pin_b4_direction = output
pin_c2_direction = output
pin_c1_direction = output
pin_c0_direction = output

-- font libraries
include glcd_5x7_font
include glcd_6x8_font
include glcd_font

-- GLCD lib
include glcd_nokia_3310
glcd_init()
include glcd_common


var byte x
var bit use_font_1 = false
forever loop
   use_font_1 = !use_font_1
   if use_font_1 then
      glcd_font_use(FONT_5X7)
   else
      glcd_font_use(FONT_6X8)
   end if
   -- each time we've printed numbers and letters,
   -- we want to have the screen cleared and we 
   -- want to start at the beginning
   lcd_clear_screen()
   lcd_gotoxy(0,0)
   -- we'll print numbers starting with "0"
   x = 48
   -- numbers are printed inverted
   lcd_background_color = GLCD_BLACK
   while x <= 57 loop
      lcd = x
      delay_100ms(1)
      x = x + 1
   end loop
   -- now print capital letters
   x = 65  -- this is "A"
   -- not inverted (ie. normal)
   lcd_background_color = GLCD_WHITE
   while x <= 90 loop
      lcd = x
      delay_100ms(1)
      x = x + 1
   end loop
end loop

