-- Title: GLCD Nokia 3310 demo sample
-- Author: SÃ©bastien Lelong, Copyright (c) 2011, all rights reserved.
-- Adapted-by:
-- Compiler: 2.4n
--
-- This file is part of jallib  (http://jallib.googlecode.com)
-- Released under the BSD license (http://www.opensource.org/licenses/bsd-license.php)
--
-- Description: simple demo showing how to use GLCD Nokia 3310. This is 
-- a graphic LCD, widely commonly in DIY projects. This sample shows some
-- basic usage, like printing characters, etc...
--

include 18f4550
pragma target clock 48_000_000
-- magical statements: using a 20MHz Xtal, you can run @48MHz !
pragma target PLLDIV    P5
pragma target CPUDIV    P2
pragma target USBPLL    F48MHZ
pragma target OSC       HS_PLL

pragma target WDT  disabled        -- no watchdog
pragma target LVP  disabled        -- no Low Voltage Programming
pragma target MCLR external        -- reset externally

enable_digital_io()

include delay

alias nok_sclk       is pin_b6    --  assign nokia clock
alias nok_sda        is pin_b4    --  assign nokia serial data in
alias nok_cs         is pin_c1    --  assign nokia chip enable
alias nok_res        is pin_c0    --  assign nokia reset
alias nok_dc         is pin_c2    --  assign nokia data/commant

pin_b6_direction = output
pin_b4_direction = output
pin_c2_direction = output
pin_c1_direction = output
pin_c0_direction = output

-- declare a user-defined font
-- it's a kind of sprite definition...
const byte FONT_UDF_0XFE = 0xFE
const byte FONT_UDF_0XFE_BYTE_PER_CHAR = 5
const byte FONT_UDF_0XFE_WIDTH = 5
const byte FONT_UDF_0XFE_HEIGHT = 8
const byte FONT_UDF_0XFE_CHARS [] =
{
   0x81,0x81,0x42,0x24,0x18,        -- >
   0x00,0x81,0x42,0x3c,0x00,        -- )
   0x00,0x00,0xff,0x00,0x00,        -- |
   0x00,0x3c,0x42,0x81,0x00,        -- (
   0x18,0x24,0x42,0x81,0x81         -- <
}
const byte FONT_AUTO_WRAP = TRUE -- auto wrap text at end of screen
include glcd_5x7_font
include glcd_font

-- include glcd_6x8_font
var word lcd_background_color = GLCD_WHITE
include glcd_nokia_3310
glcd_init()
include glcd_common

include print

glcd_font_use(FONT_5X7)
const byte demo [] = "Sprite demo !"
print_string(lcd,demo)
delay_1s(1)

-- use user defined font
glcd_font_use(FONT_UDF_0XFE)

var byte ch
var byte x = 0
var byte y = 10
forever loop
   ch = 32 -- offset when using font with chars
   for 5 loop
      lcd_gotoxy(x,y)         
      lcd_write_char(x,y,ch)
      delay_100ms(1)
      ch = ch + 1
   end loop
   -- we're leaving previous loop with ch out of bound
   -- adjust to last existing sprite index
   ch = ch - 1
   while ch >= 32  loop
      lcd_gotoxy(x,y)         
      lcd_write_char(x,y,ch)
      delay_100ms(1)
      ch = ch - 1
   end loop
   x = x + 1
   lcd_clear_screen()
end loop

