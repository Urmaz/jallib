;------------------------------------------------------------------------------
; test of direct access arrays
;------------------------------------------------------------------------------
;------------------------------------------------------------------------------

;------------------------------------------------------------------------------
;------------------------------------------------------------------------------
; Begin of test procedure/function definitions
;------------------------------------------------------------------------------
;------------------------------------------------------------------------------
var byte bravo[6] ; global var


procedure alpha() is
  var byte bravo[4] ; local var
   var byte i

   for 4 using i loop   
      bravo[i] = i + 20   
      print_var(bravo[i])
   end loop
   
end procedure 

var byte i
var byte str1[20] = "airplane"

procedure delta() is
   var byte str1[] = "tree"
   
   for count(str1) using i loop   
      print_var(str1[i])
   end loop
end procedure


;------------------------------------------------------------------------------
;------------------------------------------------------------------------------
; End of test procedure/function definitions
;------------------------------------------------------------------------------
;------------------------------------------------------------------------------


for 10 loop
   var sbyte i

   delay_1ms(300)    
   start_of_test_marker()   
   ;---------------------------------------------------------------------------
   ;---------------------------------------------------------------------------
   ; Start of test code
   ;---------------------------------------------------------------------------
   ;---------------------------------------------------------------------------

   ;---------------------------------------------------------------------------
   ; test direct access to global array
   test_header(0)

   for 6 using i loop   
      bravo[i] = i + 10   
      print_var(bravo[i])
   end loop

   ;---------------------------------------------------------------------------
   ; test direct access to local scoped array with same name
   test_header(1)
   alpha()


   ;---------------------------------------------------------------------------
   ; Check if we did not touch global array
   test_header(2)
   for 6 using i loop   
      print_var(bravo[i])
   end loop
   
   ;---------------------------------------------------------------------------
   ; Test of count()
   test_header(2)
   print_var(count(bravo))
   

   ;---------------------------------------------------------------------------
   ; Test of initialization
   test_header(3)

   const byte str1[] = "vliegtuig"
   
   for count(str1) using i loop   
      print_var(str1[i])
   end loop
   

   ;---------------------------------------------------------------------------
   ; Test of initialization (cont)
   test_header(3)

   const byte str2[] = { "a", "b" }
   
   for count(str2) using i loop   
      print_var(str2[i])
   end loop
   
   ;---------------------------------------------------------------------------
   ; Test of initialization with literal constants
   test_header(4)

   const byte str3[] = { 10, 0x12, 03, "z", 0b0101_1010 }
   
   for count(str3) using i loop   
      print_var(str3[i])
   end loop
   
   
   ;---------------------------------------------------------------------------
   ; Test of initialization - array size is 4, not 2
   test_header(5)

   const byte str4[4] = { 10, 12 }
   
   print_var(count(str4))
   
   ;---------------------------------------------------------------------------
   ; Test of array scoping
   test_header(6)

   delta()
   
   ;---------------------------------------------------------------------------
   ;---------------------------------------------------------------------------
   ; End of test code
   ;---------------------------------------------------------------------------
   ;---------------------------------------------------------------------------
      
end loop
